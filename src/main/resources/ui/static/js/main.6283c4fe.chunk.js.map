{"version":3,"sources":["containers/Topic/Topic/TopicData/TopicData.jsx","images/icon.svg","images/logo.svg","components/Root/Root.jsx","components/Root/index.js","utils/converters.js","utils/functions.js","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/Table/Table.jsx","components/Modal/ConfirmModal/index.js","utils/constants.js","utils/localstorage.js","utils/history.js","utils/api.js","utils/endpoints.js","components/DatePicker/DatePicker.jsx","components/DatePicker/index.js","components/Modal/ConfirmModal/ConfirmModal.jsx","components/Form/Select/Select.jsx","components/Form/Select/index.js","components/Table/index.js","containers/Header/Header.jsx","containers/Header/index.js","components/Form/Input/index.js","components/Form/Input/Input.jsx","components/Form/RadioGroup/index.js","components/Form/RadioGroup/RadioGroup.jsx","components/Form/Form.jsx","components/SearchBar/SearchBar.jsx","components/SearchBar/index.js","components/Pagination/index.js","utils/pagination.js","components/PageSize/index.js","components/PageSize/PageSize.jsx","containers/Topic/TopicList/index.js","containers/Topic/TopicList/TopicList.jsx","containers/Topic/Topic/TopicData/index.js","containers/Topic/Topic/TopicPartitions/index.js","containers/Topic/Topic/TopicPartitions/TopicPartitions.jsx","containers/Topic/Topic/TopicGroups/index.js","containers/Topic/Topic/TopicGroups/TopicGroups.jsx","containers/Topic/Topic/TopicConfigs/index.js","containers/Topic/Topic/TopicConfigs/TopicConfigs.jsx","containers/Topic/Topic/TopicAcls/index.js","containers/Topic/Topic/TopicAcls/TopicAcls.jsx","containers/Topic/Topic/TopicLogs/index.js","containers/Topic/Topic/TopicLogs/TopicLogs.jsx","containers/Topic/Topic/index.js","containers/Topic/Topic/Topic.jsx","containers/Node/NodeList/NodesList.jsx","containers/Node/NodeDetail/NodeConfigs/NodeConfigs.jsx","containers/Node/NodeDetail/NodeLogs/NodeLogs.jsx","containers/Node/NodeDetail/index.js","containers/Node/NodeDetail/Node.jsx","containers/SideBar/Sidebar.jsx","containers/SideBar/index.js","containers/Loading/index.js","containers/Loading/Loading.jsx","components/Base/Base.jsx","containers/Tail/Tail.jsx","containers/Tail/index.js","containers/Acl/AclList/index.js","containers/Acl/AclList/Acls.jsx","containers/Connect/ConnectList/ConnectList.jsx","containers/Connect/ConnectCreate/ConnectCreate.jsx","containers/Connect/ConnectDetail/ConnectTasks/ConnectTasks.jsx","containers/Connect/ConnectDetail/ConnectConfigs/ConnectConfigs.jsx","containers/Connect/ConnectDetail/Connect.jsx","containers/Topic/TopicCreate/TopicCreate.jsx","containers/Topic/TopicProduce/index.js","containers/Topic/TopicProduce/TopicProduce.jsx","containers/Topic/TopicCopy/index.js","containers/Topic/TopicCopy/TopicCopy.jsx","containers/ConsumerGroup/ConsumerGroupList/index.js","containers/ConsumerGroup/ConsumerGroupList/ConsumerGroupList.jsx","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupTopics/ConsumerGroupTopics.jsx","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupMembers/ConsumerGroupMembers.jsx","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupAcls/ConsumerGroupAcls.jsx","containers/ConsumerGroup/ConsumerGroupDetail/index.js","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroup.jsx","containers/Schema/SchemaDetail/SchemaVersions/index.js","containers/Schema/SchemaDetail/SchemaVersions/SchemaVersions.jsx","containers/Schema/SchemaDetail/SchemaUpdate/index.js","containers/Schema/SchemaDetail/SchemaUpdate/SchemaUpdate.jsx","containers/Schema/SchemaDetail/Schema.jsx","containers/Schema/SchemaList/SchemaList.jsx","containers/Schema/SchemaCreate/SchemaCreate.jsx","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupUpdate/index.js","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupUpdate/ConsumerGroupUpdate.jsx","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupOffsetDelete/index.js","containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupOffsetDelete/ConsumerGroupOffsetDelete.jsx","containers/Acl/AclDetail/AclGroups/AclGroups.jsx","containers/Acl/AclDetail/AclTopics/AclTopics.jsx","containers/Acl/AclDetail/AclClusters/AclClusters.jsx","containers/Acl/AclDetail/AclTransactionalIds/AclTransactionalIds.jsx","containers/Acl/AclDetail/index.js","containers/Acl/AclDetail/AclDetails.jsx","containers/Login/index.js","containers/Login/Login.jsx","containers/Settings/Settings.jsx","utils/Routes.js","App.js","serviceWorker.js","index.js","components/DateTime/DateTime.jsx","components/DateTime/index.js","prefix.js","components/Pagination/Pagination.jsx"],"names":["TopicData","state","sortBy","sortOptions","partitionCount","partition","partitionOptions","offsetsOptions","timestamp","search","key","text","type","value","headerKey","headerValue","offsets","offsetsSearch","openDateModal","messages","pageNumber","nextPage","recordCount","showFilters","showDeleteModal","deleteMessage","compactMessageToDelete","selectedCluster","props","clusterId","selectedTopic","topicId","cleanupPolicy","datetime","roles","JSON","parse","sessionStorage","getItem","canDeleteRecords","percent","loading","canDownload","dateTimeFormat","constants","SETTINGS_VALUES","TOPIC_DATA","DATE_TIME_FORMAT","RELATIVE","searchFilterTypes","_id","name","componentDidMount","_checkProps","componentWillUnmount","_stopEventSource","_startEventSource","changePage","self","setState","isSearching","filters","_buildFilters","_setUrlHistory","eventSource","EventSource","uriTopicDataSearch","undefined","addEventListener","e","res","data","records","after","length","toFixed","_handleMessages","close","_clearSearch","_searchMessages","_showDeleteModal","_closeDeleteModal","_deleteCompactMessage","message","encodedkey","Buffer","toString","deleteData","parseInt","removeApi","uriTopicDataDelete","then","toast","success","offset","_getMessages","catch","messageToDelete","append","tableMessages","forEach","messageToPush","truncated","stringify","headers","schema","keySchemaId","valueSchemaId","exceptions","push","_getNextPageOffsets","aux","substring","indexOf","afterString","_getOffsetsByAfterString","split","offsetByPartition","_getOffsetsByOffset","_createPartitionOptions","i","_createOffsetsOptions","_renderPartitionOptions","renderedOptions","option","Item","onClick","className","aria-hidden","_renderOffsetsOptions","camelcaseOption","_","camelCase","min","onChange","input","currentTarget","this","match","params","query","URLSearchParams","location","getClusterUIOptions","uiOptions","prevState","get","topicData","sort","Date","_buildSearchFromQueryString","_getSingleMessage","Object","keys","searchFilter","capitalizeTxt","pos","lastIndexOf","substr","find","moment","formatDateTime","year","monthValue","month","dayOfMonth","date","hour","minute","second","milli","millisecond","filter","encodeURIComponent","join","_hasAnyFilterFilled","requests","getApi","uriTopicDataSingleRecord","uriTopicsPartitions","_fetchMessages","uriTopicData","Promise","all","pageNumberTemp","offsetsTemp","partitionCountTemp","nextPageTemp","recordCountTemp","messagesData","partitionData","results","size","Fragment","code","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","row","pathToShare","basePath","_copyToClipboard","window","host","info","err","console","error","history","hasKey","a","href","URL","createObjectURL","Blob","download","click","newDateTimeFormat","currentUiOptions","newUiOptions","setUIOptions","header","setProduceToTopicValues","pathname","id","uriSchemaId","response","subject","schemaId","warn","label","selectClass","items","target","style","minWidth","_renderSearchFilter","display","disabled","filterKey","actions","TABLE_SHARE","TABLE_COPY","TABLE_DELETE","TABLE_DOWNLOAD","data-toggle","data-target","aria-controls","aria-expanded","aria-label","_openAndCloseFilters","totalRecords","totalPageNumber","onSubmit","editPageNumber","showTotalPageNumber","Toggle","Menu","_renderSortOptions","onClear","showDateTimeInput","showTimeSelect","_renderCurrentSearchText","_renderSearchGroup","values","_handleOnDateTimeFormatChanged","ISO","height","animated","now","reduce","firstHeader","colName","colSpan","columns","accessor","cell","obj","col","extraRow","extraRowContent","index","json","JSONbig","mode","theme","readOnly","editorProps","$blockScrolling","width","minHeight","role","dangerouslySetInnerHTML","__html","isoDateTimeString","expand","_redirectToSchema","noStripes","updateData","onDelete","_handleOnDelete","onShare","_handleOnShare","onDownload","_handleDownload","onCopy","_handleCopy","onExpand","map","flexDirection","borderStyle","borderWidth","backgroundColor","show","handleCancel","handleConfirm","Root","module","exports","cancel","axios","CancelToken","source","setItem","cancelAxiosRequests","url","cancelToken","token","post","put","Component","calculateTopicOffsetLag","topicOffsets","offsetLag","lastOffset","topicOffset","topic","groupedTopicOffset","accumulator","r","create","format","utc","toISOString","handleConvert","unit","exclude","require","convert","from","toBest","handleType","lowerCase","plural","showBytes","bytes","decimals","kbytes","decimalCheck","measures","identification","Math","floor","log","parseFloat","pow","insertRole","roleType","organizeRoles","newRoles","ROLE_TYPE","TOPIC","NODE","GROUP","REGISTRY","ACLS","CONNECT","transformListObjsToViewOptions","list","elem","transformStringArrayToViewOptions","showTime","milliseconds","valueIsSecond","Boolean","valueToSHow","Number","val","decimalPart","decimalPartToShow","getSelectedTab","tabs","selectedTab","includes","getUIOptions","uriUIOptions","resOptions","charAt","toUpperCase","slice","Spinner","Table","extraExpanded","expanded","sortingColumn","reverse","handleExpand","el","currentExpandedRows","newExpandedRows","concat","handleExtraExpand","handleExtraCollapse","has2Headers","column","sortable","onDetails","idCol","internal","extraRowColCollapsed","extraRowColExpanded","noRowBackgroundChange","colIndex","extraStyles","cursor","onDoubleClick","action","renderContent","renderActions","colspan","padding","content","onAdd","onConfig","onEdit","onRestart","idColVal","title","to","noContent","rowId","allItemRows","item","perItemRows","renderRow","classNames","renderHeader","renderLoading","renderNoContent","ConfirmModal","MILLI","BYTES","TEXT","TABLE_ADD","TABLE_EDIT","TABLE_DETAILS","TABLE_CONFIG","TABLE_RESTART","TOPIC_DEFAULT_VIEW","ALL","HIDE_INTERNAL","HIDE_INTERNAL_STREAM","HIDE_STREAM","SORT","OLDEST","NEWEST","CLUSTER","TAIL","SCHEMA","TYPES","STRING","LONG","CLASS","PASSWORD","INT","LIST","BOOLEAN","DOUBLE","SHORT","VERSION","SETTINGS","field","primer","x","b","cluster","localStorage","newUIOptions","objParsed","popProduceToTopicValues","produceToTopicValues","removeItem","newProduceToTopicValues","customHistory","createBrowserHistory","basename","configs","withCredentials","handleError","status","stacktrace","_embedded","replace","React","detailedReactHTMLElement","autoClose","config","resolve","reject","isCancel","delete","login","requestOptions","method","redirect","fetch","logout","baseUrl","process","REACT_APP_BASE_URL","protocol","hostname","port","prefix","apiUrl","uriLogin","uriAuths","uriOidc","provider","uriLogout","uriCurrentUser","uriClusters","uriTopics","page","pageSize","uriTopicDefaultConf","uriTopicsName","uriTopicsInfo","uriTopicsCreate","uriTopicsProduce","topicName","uriDeleteTopics","uri","uriTopicsGroups","uriTopicsLogs","uriTopicsConfigs","uriTopicsAcls","uriTopicsUpdateConfigs","uriTopicsOffsetsByTimestamp","uriTopicsCopy","fromClusterId","fromTopicId","toClusterId","toTopicId","uriConnectDefinitions","connectId","uriConnectPlugins","uriConnectPlugin","pluginId","uriCreateConnect","uriGetDefinition","definitionId","uriConnectDefinitionConfigs","uriUpdateDefinition","uriPauseDefinition","uriResumeDefinition","uriRestartDefinition","uriRestartTask","taskId","uriDeleteDefinition","uriDeleteSchema","uriPreferredSchemaForTopic","uriDeleteSchemaVersion","version","uriLatestSchemaVersion","uriUpdateSchema","uriSchemaCreate","uriNodes","uriNodePartitions","uriNodesConfigs","nodeId","uriNodesUpdateConfigs","uriNodesLogs","uriConsumerGroups","uriConsumerGroup","groupId","uriConsumerGroupMembers","uriConsumerGroupOffsets","uriConsumerGroupOffsetsByTimestamp","uriConsumerGroupDelete","uriConsumerGroupUpdate","uriDeleteGroupOffsets","uriAclsList","uriConsumerGroupAcls","uriConsumerGroupByTopics","topicList","uriAclsByPrincipal","principalEncoded","resourceType","uriLiveTail","topics","searchUrl","topicsUrl","sizeUrl","uriTopicDataEmpty","uriTopicLastRecord","uriConnects","uriConsumerGroupTopics","uriSchemaRegistry","uriSchemaVersions","DatePicker","getDisplayValue","render","showTimeInput","marginBottom","placeholder","calendarClassName","selected","dateFormat","inline","confirmLabel","cancelLabel","showHideClassname","overflowY","aria-labelledby","aria-describedby","tabIndex","aria-live","aria-modal","borderLeftColor","Select","wrapperClass","blankItem","rest","wrapperClassRender","selectClassRender","htmlFor","Header","username","auths","goBack","currentUserData","logged","reload","loginEnabled","children","justifyContent","alignItems","_renderLogin","withRouter","Input","noStyle","inputClass","inputClassRender","RadioGroup","renderOptions","handleChange","renderedItems","defaultChecked","checked","Form","formData","errors","validate","Joi","details","path","validateProperty","handleSubmit","preventDefault","doSubmit","errorMessage","renderButton","marginRight","renderInput","renderJSONInput","textMode","options","inputMode","schemaType","setOptions","renderSelect","renderDatePicker","renderRadioGroup","renderDropdown","searchValue","selectedKeySchema","renderResults","Dropdown","autoComplete","aria-autocomplete","renderCheckbox","isChecked","isDefaultChecked","class","SearchBar","topicListViewOptions","pagination","searchData","topicListView","keepSearch","setupProps","prevProps","showSearch","showTopicListView","showKeepSearch","string","allow","required","boolean","onChangeValue","onChangeTopic","openAndCloseFilters","onTopicListViewChange","event","onKeepSearchChange","propTypes","showPagination","PropTypes","bool","Pagination","handlePageChange","getPageNumber","PageSize","currentPageSize","ranges","pageSizeOptions","pageSizeOptionsList","element","k","TopicList","topicToDelete","createTopicFormData","replication","cleanup","retention","collapseConsumerGroups","closeDeleteModal","deleteTopic","getTopics","handleSearch","handleKeepSearchChange","handlePageChangeSubmission","handlePageSizeChangeSubmission","handleConsumerGroups","consumerGroups","consumerGroup","activeTopics","activeTopic","stopPropagation","toLocaleString","_initializeVars","renewCancelToken","callBackFunction","keepSearchTmp","topicListSearch","searchDataTmp","defaultView","handleTopics","tableTopics","uiOptionsTopic","count","lastWrite","logDirSize","partitionsTotal","partitions","replicationFactor","replicaCount","replicationInSync","inSyncReplicaCount","groupComponent","showAllConsumerGroups","topicsName","skipConsumerGroups","skipLastRecord","tmpGroups","topicCols","DateTime","partitionCols","replicationCols","consumerGprCols","handleCollapseConsumerGroups","Collapse","in","splice","group","firstColumns","onDetailsFunction","handleOnDelete","TopicPartitions","getTopicsPartitions","handleData","tablePartitions","leader","replicas","nodes","firstOffset","replica","inSyncReplicas","converters","handleLeader","handleReplicas","handleSize","TopicGroups","getConsumerGroup","handleGroups","tableConsumerGroups","coordinator","members","groupTopics","noPropagation","handleState","handleCoordinator","TopicConfigs","changedConfigs","getConfigDataType","configName","getTopicsConfig","createValidationSchema","description","dataType","sensitive","validation","isNaN","any","newData","postApi","handleDataType","configType","configSensitive","descript","tabName","isActive","active","encType","handleNameAndDescription","getInput","handleTypeAndSensitive","TopicAcls","getAcls","acls","tableAcls","principal","acl","resource","permission","operation","permissionType","TopicLogs","getTopicLogs","logs","tableLogs","broker","brokerId","Topic","topicInternal","canEmptyTopic","emptyTopic","current","getMessages","selectTab","tab","tabClassName","renderSelectedTab","ref","createRef","searchParams","tabSelected","handleOnEmpty","NodesList","getNodes","tableNodes","node","rack","controller","topicNode","countLeader","totalPartitions","NodeConfigs","selectedNode","getNodesConfig","changedConfig","configIndex","findIndex","NodeLogs","getNodesLogs","Node","Sidebar","selectedConnect","allClusters","allConnects","showClusters","showConnects","enableRegistry","enableConnect","setClustersAndConnects","listClusters","eventKey","changeSelectedCluster","color","listConnects","connect","changeSelectedConnect","clusters","handleGetClusters","handleRegistryAndConnects","callback","matchPath","exact","strict","getElementById","offsetHeight","enableConnects","connects","registry","newSelectedCluster","iconClassName","tag","onToggle","toggleSidebar","background","position","Nav","defaultSelected","fontStyle","paddingLeft","renderMenuItem","nextProps","Loading","loadingContainer","src","image","alt","Base","clearTimeout","interval","Helmet","handleTitle","newExpanded","STATUS","MAX_RECORDS","Tail","dropdownSearch","showDropdown","selectedTopics","selectedStatus","maxRecords","startEventSource","initDateTimeFormat","onStop","scrollToBottom","onerror","onStart","scrollTop","documentElement","innerHeight","scrollHeight","clientHeight","messagesEnd","scrollIntoView","behavior","handleSelectedTopics","updatedSelected","renderTopicList","maxHeight","marginTop","aria-selected","overflow","maxRecord","Acls","btoa","user","showConsumerGroup","groupListView","ConnectList","tableData","definitionToDelete","deleteDefinition","definition","getConnectDefinitions","connectDefinition","shortClassName","tasks","getTableActions","renderTasks","renderedTasks","task","workerId","ConnectCreate","plugins","selectedType","plugin","onTypeChange","renderForm","getPlugins","getElementsByClassName","definitions","handleDefinition","object","def","number","password","importance","displayName","marginleft","documentation","defaultValue","actualGroup","sameGroup","allOfIt","handleGroup","groupDisplay","rows","renderTableRows","transform","getPlugin","handleShema","transformsValue","transformsprops","ConnectTasks","definitionModifyMessage","definitionModifyData","showActionModal","actionMessage","definitionState","PAUSE","RESUME","RESTART","RESTART_TASK","modifyDefinitionState","getDefinition","closeActionModal","handleAction","failedAction","renderTask","worker","trace","handleTasks","paused","ConnectConfigs","handleSchema","getConfigValue","getTransformAdditionalProperties","existingConfig","configKey","getConfigs","filtered","startsWith","left","Connect","TopicCreate","onCleanupChange","getTopicDefaultConf","defaults","TopicProduce","nHeaders","hKey0","hValue0","keyValueSeparator","selectableValueFormats","keySchema","keySchemaSearchValue","valueSchema","valueSchemaSearchValue","selectedValueSchema","topicsSearchValue","multiMessage","tombstone","valuePlaceholder","selectedValue","Tooltip","getPreferredSchemaForTopic","unshift","topicEventData","initByTopicEvent","initAvailableTopics","topicResponseData","pages","copyValues","topicValuesDefault","entries","handlePlus","schemaKeyToSend","schemaValueToSend","keyNumbers","getPlaceholderValue","isMultiMessage","data-testId","head","handleRemove","providedKey","providedValue","newFormData","renderHeaders","renderMultiMessage","renderTombstone","margin","TopicCopy","setupInitialData","checkName","max","handleOnChangeTopic","clusterListView","createSubmitBody","splitName","checkedPartition","checkedName","pop","checkedTopicOffset","renderTopicPartition","renderPartitionInputs","renderedInputs","unCheckAll","resetToFirstOffsets","resetToLastOffsets","resetToCalculatedOffsets","calculatedOffset","handleOffsetsByTimestamp","renderResetButton","getTopicOffset","lastMessagesNr","result","momentValue","ConsumerGroupList","groupToDelete","deleteConsumerGroup","handleConsumerGroup","tableConsumerGroup","ConsumerGroupTopics","selectedConsumerGroup","consumerGroupId","getConsumerGroupTopics","member","lag","optional","handleOptional","metadata","ConsumerGroupMembers","getConsumerGroupMembers","clientId","assignments","assignment","handlePartitions","handleAssignments","ConsumerGroup","ConsumerGroupAcls","decodeURIComponent","SchemaVersions","selectedSchema","schemaName","schemaVersions","schemas","schemaToDelete","versionId","deleteSchemaRegistry","SchemaUpdate","compatibilityOptions","compatibility","references","handleLatestSchemaVersion","latestSchemaVersion","compatibilityLevel","getLatestSchemaVersion","getSchemaVersions","Schema","totalVersions","endpoints","SchemaList","schemasRegistry","createSubjectFormData","getSchemaRegistry","handleSchemaRegistry","tableSchemaRegistry","exception","showSchemaRegistry","schemaListView","handleVersion","some","SchemaCreate","schemaData","compatibilityLevelSelect","schemaTypeSelect","parsedSchemaData","ConsumerGroupUpdate","firstOffsets","lastOffsets","topidId","rendertopicOffset","checkedtopicOffset","ConsumerGroupOffsetDelete","topicIds","deleteAllOffsetsForTopic","deleteOffsets","AclGroups","handleAcls","patterntype","patternType","handlePermission","AclTopics","AclClusters","AclTransactionalIds","transactionalId","AclDetails","atob","Login","formEnabled","oidcAuths","getData","returnTo","autoFocus","oidcsAuths","auth","logo","_renderForm","_renderSeparator","_renderOidc","Settings","topicDefaultView","topicDataSort","topicDataDateTimeFormat","checkedSkipConsumerGroups","Routes","resClusters","_setAuths","_setCurrentUser","_initUserAndAuth","component","NodeDetails","handleRedirect","getClusters","array","App","loadProgressBar","utils","MomentUtils","draggable","closeOnClick","pathPrefix","ReactDOM","navigator","serviceWorker","ready","registration","unregister","isoDate","TimeAgoComp","arrow","interactive","AKHQ_PREFIX_PATH","endsWith","onKeyDown"],"mappings":"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","file":"static/js/main.6283c4fe.chunk.js","sourcesContent":["import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport './styles.scss';\nimport Table from '../../../../components/Table/Table';\nimport { formatDateTime } from '../../../../utils/converters';\nimport {\n  uriSchemaId,\n  uriTopicData,\n  uriTopicDataDelete,\n  uriTopicDataSearch, uriTopicDataSingleRecord,\n  uriTopicsPartitions,\n  basePath\n} from '../../../../utils/endpoints';\nimport Pagination from '../../../../components/Pagination/Pagination';\nimport moment from 'moment';\nimport DatePicker from '../../../../components/DatePicker';\nimport _ from 'lodash';\nimport constants from '../../../../utils/constants';\nimport AceEditor from 'react-ace';\nimport ConfirmModal from '../../../../components/Modal/ConfirmModal';\n\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-dracula';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from '../../../../components/Root';\nimport DateTime from '../../../../components/DateTime';\nimport { capitalizeTxt, getClusterUIOptions } from '../../../../utils/functions';\nimport { setProduceToTopicValues, setUIOptions} from '../../../../utils/localstorage';\nimport Select from '../../../../components/Form/Select';\nimport JSONbig from 'json-bigint';\n\nclass TopicData extends Root {\n  state = {\n    sortBy: 'Oldest',\n    sortOptions: ['Oldest', 'Newest'],\n    partitionCount: 0,\n    partition: 'All',\n    partitionOptions: [],\n    offsetsOptions: [],\n    timestamp: '',\n    search: {\n      key: { text: '', type: 'C'},\n      value: { text: '', type: 'C'},\n      headerKey: { text: '', type: 'C'},\n      headerValue: { text: '', type: 'C'}\n    },\n    offsets: {},\n    offsetsSearch: '',\n    openDateModal: false,\n    messages: [],\n    pageNumber: 1,\n    nextPage: '',\n    recordCount: 0,\n    showFilters: '',\n    showDeleteModal: false,\n    deleteMessage: '',\n    compactMessageToDelete: '',\n    selectedCluster: this.props.clusterId,\n    selectedTopic: this.props.topicId,\n    cleanupPolicy: '',\n    datetime: '',\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    canDeleteRecords: false,\n    percent: 0,\n    loading: true,\n    canDownload: false,\n    dateTimeFormat: constants.SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.RELATIVE\n  };\n\n  searchFilterTypes = [\n    {\n      _id: 'C',\n      name: 'Contains'\n    },\n    {\n      _id: 'N',\n      name: 'Not Contains'\n    },\n    {\n      _id: 'E',\n      name: 'Equals'\n    }];\n\n  eventSource;\n\n  componentDidMount = () => {\n    this._checkProps();\n  };\n\n  componentWillUnmount = () => {\n    super.componentWillUnmount();\n    this._stopEventSource();\n  };\n\n  async _checkProps() {\n    const { clusterId, topicId } = this.props.match.params;\n    const query =  new URLSearchParams(this.props.location.search);\n    const uiOptions = await getClusterUIOptions(clusterId);\n\n    this.setState((prevState) =>\n        ({\n          selectedCluster: clusterId,\n          selectedTopic: topicId,\n          sortBy: (query.get('sort'))? query.get('sort') : (uiOptions && uiOptions.topicData && uiOptions.topicData.sort)?\n              uiOptions.topicData.sort : this.state.sortBy,\n          partition: (query.get('partition'))? query.get('partition') : this.state.partition,\n          datetime: (query.get('timestamp'))? new Date(query.get('timestamp')) : this.state.datetime,\n          offsetsSearch: (query.get('after'))? query.get('after') : this.state.offsetsSearch,\n          search: this._buildSearchFromQueryString(query),\n          offsets: (query.get('offset'))? this._getOffsetsByOffset(query.get('partition'), query.get('offset')) :\n              ((query.get('after'))? this._getOffsetsByAfterString(query.get('after')): this.state.offsets),\n          dateTimeFormat: (uiOptions && uiOptions.topicData && uiOptions.topicData.dateTimeFormat)?\n              uiOptions.topicData.dateTimeFormat : prevState.dateTimeFormat\n        }),\n        () => {\n            if(query.get('single') !== null) {\n              this._getSingleMessage(query.get('partition'), query.get('offset'));\n              this.setState({ canDownload: true })\n            } else {\n              this._getMessages();\n            }\n        }\n    );\n  }\n\n  _buildSearchFromQueryString(query) {\n    const { search } = this.state;\n\n    Object.keys(search).forEach(value => {\n      const searchFilter = query.get(`searchBy${capitalizeTxt(value)}`);\n      if(searchFilter) {\n        const pos = searchFilter.lastIndexOf('_');\n        search[value].text = searchFilter.substr(0, pos);\n        search[value].type = searchFilter.substr(pos + 1);\n      }\n    });\n    return search;\n  }\n\n  _startEventSource = (changePage) => {\n    let { selectedCluster, selectedTopic, nextPage } = this.state;\n\n    let self = this;\n    this.setState({ sortBy: 'Oldest', messages: [], pageNumber: 1, percent: 0, isSearching: true, recordCount: 0 }, () => {\n      const filters = this._buildFilters();\n      if (changePage) {\n        this._setUrlHistory(filters + '&after=' + nextPage );\n      } else {\n        this._setUrlHistory(filters);\n      }\n      this.eventSource = new EventSource(uriTopicDataSearch(selectedCluster, selectedTopic, filters, (changePage)? nextPage: undefined));\n\n      this.eventSource.addEventListener('searchBody', function(e) {\n        const res = JSON.parse(e.data);\n        const records = res.records || [];\n        const nextPage = (res.after) ? res.after : self.state.nextPage;\n        self.setState({ nextPage, recordCount: self.state.recordCount + records.length , percent: res.percent.toFixed(2) }, () => {\n          self._handleMessages(records, true);\n        });\n      });\n\n      this.eventSource.addEventListener('searchEnd', function(e) {\n        self.eventSource.close();\n        self.setState({ percent: 100, isSearching: false, loading: false });\n      });\n    });\n  };\n\n  _stopEventSource = () => {\n    if (this.eventSource) {\n      this.eventSource.close();\n    }\n    this.setState({ isSearching: false });\n  };\n\n  _clearSearch = () => {\n    this.setState({ search: {\n        key: { text: '', type: 'C'},\n        value: { text: '', type: 'C'},\n        headerKey: { text: '', type: 'C'},\n        headerValue: { text: '', type: 'C'}\n      } }, () => {\n        this._searchMessages();\n    });\n  }\n\n  _hasAnyFilterFilled() {\n    const { search } = this.state;\n    return Object.keys(search).find(value => search[value].text.length > 0) !== undefined;\n  }\n\n  _buildFilters() {\n    const {\n      sortBy,\n      partition,\n      datetime,\n      offsetsSearch,\n      search\n    } = this.state;\n\n    const filters = [];\n\n    if (sortBy) filters.push(`sort=${sortBy}`);\n    if (offsetsSearch) filters.push(`after=${offsetsSearch}`);\n    if (partition) filters.push(`partition=${partition}`);\n\n    if (datetime) {\n      let timestamp = datetime.toString().length > 0 ? moment(datetime) : '';\n      timestamp = formatDateTime(\n            {\n              year: timestamp.year(),\n              monthValue: timestamp.month(),\n              dayOfMonth: timestamp.date(),\n              hour: timestamp.hour(),\n              minute: timestamp.minute(),\n              second: timestamp.second(),\n              milli: timestamp.millisecond()\n            },\n            'YYYY-MM-DDTHH:mm:ss.SSS',\n            true\n          ) + 'Z';\n      filters.push(`timestamp=${timestamp}`);\n    }\n\n    Object.keys(search).filter(value => search[value].text.length > 0)\n               .forEach(value => {\n                    filters.push(`searchBy${capitalizeTxt(value)}=${encodeURIComponent(search[value].text)}_${search[value].type}`)\n                })\n    return filters.join('&');\n  }\n\n  _searchMessages(changePage = false){\n    this._stopEventSource();\n    if (this._hasAnyFilterFilled()) {\n      this._startEventSource(changePage);\n    } else {\n      this._getMessages(changePage);\n    }\n  }\n\n  _getSingleMessage(partition, offset) {\n    const {\n      selectedCluster,\n      selectedTopic,\n    } = this.state;\n\n    const requests = [this.getApi(uriTopicDataSingleRecord(selectedCluster, selectedTopic, partition, offset)),\n                      this.getApi(uriTopicsPartitions(selectedCluster, selectedTopic))];\n\n    this._fetchMessages(requests);\n  }\n\n  _getMessages(changePage = false) {\n    const {\n      selectedCluster,\n      selectedTopic,\n      nextPage\n    } = this.state;\n\n    const filters = this._buildFilters();\n    const requests = [\n      this.getApi(uriTopicData(selectedCluster, selectedTopic, filters, changePage ? nextPage : undefined)),\n      this.getApi(uriTopicsPartitions(selectedCluster, selectedTopic))\n    ];\n\n    this._fetchMessages(requests, changePage);\n\n    if (changePage) {\n      this._setUrlHistory(nextPage.substring(nextPage.indexOf('?') + 1, nextPage.length));\n    } else {\n      this._setUrlHistory(filters);\n    }\n  }\n\n  _fetchMessages(requests, changePage = false) {\n    const {\n      nextPage,\n      pageNumber,\n      partitionCount,\n      recordCount,\n      offsets\n    } = this.state;\n\n    Promise.all(requests)\n      .then(data => {\n        let tableMessages = [],\n            pageNumberTemp, offsetsTemp, partitionCountTemp, nextPageTemp, recordCountTemp;\n\n        const messagesData = data[0].data;\n        const partitionData = data[1].data;\n\n        if (messagesData.results) {\n          tableMessages = this._handleMessages(messagesData.results);\n        } else {\n          pageNumberTemp = 1;\n        }\n        if (partitionData) {\n          if (changePage) {\n            offsetsTemp = this._getNextPageOffsets(nextPage);\n          }\n          partitionCountTemp = partitionData.length;\n          nextPageTemp = messagesData.after;\n          recordCountTemp = messagesData.size;\n        }\n        this.setState({\n          messages: tableMessages,\n          canDeleteRecords: messagesData.canDeleteRecords,\n          pageNumber: (pageNumberTemp) ? pageNumberTemp : pageNumber,\n          partitionCount: (partitionCountTemp) ? partitionCountTemp : partitionCount,\n          nextPage: (nextPageTemp) ? nextPageTemp : nextPage,\n          recordCount: (recordCountTemp) ? recordCountTemp : recordCount,\n          offsets: (offsetsTemp) ? offsetsTemp : offsets,\n          loading: false\n        });\n    });\n  }\n\n  _handleOnDelete(message) {\n    this.setState({ compactMessageToDelete: message }, () => {\n      this._showDeleteModal(\n          <React.Fragment>\n            Do you want to delete message: {<code>{message.key}</code>} ?\n          </React.Fragment>\n      );\n    });\n  }\n\n  _copyToClipboard(code) {\n    const textField = document.createElement('textarea')\n    textField.innerText = code\n    document.body.appendChild(textField)\n    textField.select()\n    document.execCommand('copy')\n    textField.remove()\n  }\n\n  _handleOnShare(row) {\n    const {\n      selectedCluster,\n      selectedTopic\n    } = this.state;\n\n    const pathToShare = `${basePath}/ui/${selectedCluster}/topic/${selectedTopic}/data?single=true&partition=${row.partition}&offset=${row.offset}`;\n\n    try {\n      this._copyToClipboard(`${window.location.host}${pathToShare}`)\n      toast.info('Message url is copied to your clipboard!');\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n    }\n\n    this.setState({ canDownload: true })\n\n    this.props.history.push(pathToShare)\n    this._getSingleMessage(row.partition, row.offset);\n  }\n\n  _handleDownload({ key, value: data }) {\n    const hasKey = key && key !== null && key !== 'null';\n\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL( new Blob([data], { type:'text/json' }) );\n    a.download = `${hasKey ? key : 'file'}.json`;\n\n    a.click();\n    a.remove();\n  }\n\n  async _handleOnDateTimeFormatChanged(newDateTimeFormat) {\n    const { clusterId } = this.props.match.params;\n    this.setState(({\n      dateTimeFormat: newDateTimeFormat\n    }));\n    const currentUiOptions = await getClusterUIOptions(clusterId);\n    const newUiOptions = {\n      ...currentUiOptions,\n      topicData: {\n        ...(currentUiOptions.topicData),\n        dateTimeFormat: newDateTimeFormat\n      }\n    }\n    setUIOptions(clusterId, newUiOptions);\n  }\n\n  _handleCopy(row) {\n    const data =  {\n      partition: row.partition,\n      key: row.key,\n      header: row.headers,\n      keySchemaId: row.schema.key,\n      valueSchemaId: row.schema.value,\n      value: row.value,\n    }\n    setProduceToTopicValues(data)\n\n    const { clusterId, topicId } = this.props.match.params;\n    this.props.history.push(`/ui/${clusterId}/topic/${topicId}/produce`)\n  }\n\n  _showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  _closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  _deleteCompactMessage = () => {\n    const { selectedCluster, selectedTopic, compactMessageToDelete: message } = this.state;\n\n    const encodedkey = new Buffer(message.key).toString('base64');\n    const deleteData = { partition: parseInt(message.partition), key: encodedkey };\n    this.removeApi(\n        uriTopicDataDelete(selectedCluster, selectedTopic, parseInt(message.partition), encodedkey),\n        deleteData\n    )\n        .then(() => {\n          toast.success(`Record '${message.partition}-${message.offset}' will be deleted on compaction`);\n          this.setState({ showDeleteModal: false, compactMessageToDelete: '' }, () => {\n            this._getMessages();\n          });\n        })\n        .catch(() => {\n          this.setState({ showDeleteModal: false, messageToDelete: {} });\n        });\n  };\n\n  _handleMessages = (messages, append = false) => {\n    let tableMessages = append ? this.state.messages : [];\n    messages.forEach(message => {\n      let messageToPush = {\n        key: message.key || '',\n        value: message.truncated\n          ? message.value + '...\\nToo large message. Full body in share button.'  || ''\n          : message.value || '',\n        timestamp: message.timestamp,\n        partition: JSON.stringify(message.partition) || '',\n        offset: JSON.stringify(message.offset) || '',\n        headers: message.headers || {},\n        schema: { key: message.keySchemaId, value: message.valueSchemaId },\n        exceptions: message.exceptions || []\n      };\n      tableMessages.push(messageToPush);\n    });\n    return tableMessages;\n  };\n\n  _getNextPageOffsets = (nextPage) => {\n    let aux = nextPage.substring(nextPage.indexOf('after=') + 6);\n    let afterString = aux.substring(0, aux.indexOf('&'));\n    return this._getOffsetsByAfterString(afterString);\n  };\n\n  _getOffsetsByAfterString = (afterString) => {\n    let offsets = [];\n    const offsetsByPartition = afterString.split('_');\n\n    offsetsByPartition.forEach(offsetByPartition => {\n      const offset = offsetByPartition.split('-');\n      offsets[`partition${offset[0]}`] = offset[1];\n    });\n    return offsets;\n  }\n\n  _getOffsetsByOffset = (partition, offset) => {\n    let offsets = [];\n    offsets[`partition${partition}`] = offset;\n    return offsets;\n  }\n\n  _createPartitionOptions = () => {\n    const { partitionCount } = this.state;\n    let partitionOptions = ['All'];\n    for (let i = 0; i < partitionCount; i++) {\n      partitionOptions.push(`${i}`);\n    }\n    return partitionOptions;\n  };\n\n  _createOffsetsOptions = () => {\n    const { partitionCount } = this.state;\n    let offsetsOptions = [];\n    for (let i = 0; i < partitionCount; i++) {\n      offsetsOptions.push(`Partition ${i}`);\n    }\n    return offsetsOptions;\n  };\n\n  _setUrlHistory(filters){\n    const {\n      selectedCluster,\n      selectedTopic\n    } = this.state;\n\n    this.props.history.push({\n      pathname: `/ui/${selectedCluster}/topic/${selectedTopic}/data`,\n      search: filters\n    });\n  }\n\n  _redirectToSchema(id) {\n    const { selectedCluster } = this.state;\n\n    this.getApi(uriSchemaId(selectedCluster, id))\n      .then(response => {\n        if (response.data) {\n          this.props.history.push({\n            pathname: `/ui/${selectedCluster}/schema/details/${response.data.subject}`,\n            schemaId: response.data.subject\n          });\n        } else {\n          toast.warn(`Unable to find the registry schema with id  ${id} !`);\n        }\n      })\n  }\n\n  _renderSortOptions() {\n    const { sortOptions } = this.state;\n\n    let renderedOptions = [];\n    for (let option of sortOptions) {\n      renderedOptions.push(\n          <Dropdown.Item\n              key={option}\n              onClick={() => this.setState({ sortBy: option }, () => {\n                this._clearSearch();\n              })}\n          >\n            <i className=\"fa fa-fw fa-sort-numeric-desc pull-left\" aria-hidden=\"true\" /> {option}\n          </Dropdown.Item>\n      );\n    }\n    return renderedOptions;\n  }\n\n  _renderPartitionOptions = () => {\n    const partitionOptions = this._createPartitionOptions();\n\n    let renderedOptions = [];\n    for (let option of partitionOptions) {\n      renderedOptions.push(\n          <Dropdown.Item\n              key={option}\n              onClick={() => this.setState({ partition: option }, () => {\n                this._searchMessages();\n              })}\n          >\n            <i className=\"fa fa-fw pull-left\" aria-hidden=\"true\" /> {option}\n          </Dropdown.Item>\n      );\n    }\n    return renderedOptions;\n  };\n\n  _renderOffsetsOptions = () => {\n    const offsetsOptions = this._createOffsetsOptions();\n\n    let renderedOptions = [];\n    let i;\n    let offsets = this.state.offsets;\n    for (i = 0; i < offsetsOptions.length; i++) {\n      const option = offsetsOptions[i];\n      const camelcaseOption = _.camelCase(option);\n\n      if (offsets[camelcaseOption] === undefined) {\n        offsets[camelcaseOption] = '';\n        this.setState({ offsets });\n      }\n\n      renderedOptions.push(\n          <tr key={option}>\n            <td className=\"offset-navbar-partition-label offset-navbar-partition-td\">{option} : </td>\n            <td className=\"offset-navbar-partition-td\">\n              <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  min=\"0\"\n                  name={`${i}`}\n                  value={offsets[camelcaseOption]}\n                  onChange={({ currentTarget: input }) => {\n                    let { offsets } = this.state;\n                    offsets[camelcaseOption] = input.value;\n                    this.setState(offsets);\n                  }}\n              />\n            </td>\n          </tr>\n      );\n    }\n    return renderedOptions;\n  };\n\n  _openAndCloseFilters() {\n    let { showFilters } = this.state;\n    if (showFilters === 'show') {\n      this.setState({ showFilters: '' });\n    } else {\n      this.setState({ showFilters: 'show' });\n    }\n  }\n\n  _renderSearchFilter(name, label) {\n    const { search } = this.state;\n\n    return (\n        <div className=\"search-input-fields\">\n          <label>{label}</label>\n          <input\n              className=\"form-control\"\n              name={`${name}_text`}\n              type=\"text\"\n              value={search[name].text}\n              onChange={({ currentTarget: input }) => {\n                search[name].text = input.value;\n                this.setState({ search });\n              }}\n          />\n          <Select\n              name={`${name}_select`}\n              selectClass={'col-xs-2'}\n              value={search[name].type}\n              label=\"\"\n              items={this.searchFilterTypes}\n              onChange={value => {\n                search[name].type = value.target.value;\n                this.setState({ search });\n              }}\n          />\n        </div>\n    );\n  }\n\n  _renderSearchGroup() {\n    const { isSearching } = this.state;\n\n    return (\n      <div style={{ minWidth: '400px' }} className=\"input-group\">\n\n        {this._renderSearchFilter('key', 'Key')}\n        {this._renderSearchFilter('value','Value')}\n        {this._renderSearchFilter('headerKey', 'Header Key')}\n        {this._renderSearchFilter('headerValue', 'Header Value')}\n\n        <div style={{display: 'flex' }}>\n          <button\n              className=\"btn btn-primary inline-block search\"\n              type=\"button\"\n              onClick={() => this._searchMessages() }\n          >\n            {isSearching ? (\n                <i className=\"fa fa-spinner fa-spin\"></i>\n            ) : (\n                <i className=\"fa fa-search\"></i>\n            )}\n          </button>\n          <button\n              className=\"btn btn-primary btn-border inline-block\"\n              type=\"button\"\n              disabled={!isSearching}\n              onClick={() => this._stopEventSource()}\n          >\n            Stop\n          </button>\n          <button\n              className=\"btn btn-primary btn-border inline-block\"\n              type=\"button\"\n              disabled={isSearching}\n              onClick={() => this._clearSearch()}\n          >\n            Clear\n          </button>\n        </div>\n    </div>);\n  }\n\n  _renderCurrentSearchText() {\n    const { search } = this.state;\n    const filterKey = Object.keys(search).find(value => search[value].text.length > 0);\n    return (filterKey !== undefined)? search[filterKey].text : '';\n  }\n\n  render() {\n    const {\n      sortBy,\n      partition,\n      offsets,\n      messages,\n      pageNumber,\n      recordCount,\n      showFilters,\n      datetime,\n      isSearching,\n      canDeleteRecords,\n      canDownload,\n      percent,\n      loading\n    } = this.state;\n\n    let actions = [constants.TABLE_SHARE, constants.TABLE_COPY]\n    if (canDeleteRecords) actions.push(constants.TABLE_DELETE)\n    if (canDownload) actions.push(constants.TABLE_DOWNLOAD)\n\n    let date = moment(datetime);\n    const { history } = this.props;\n    const firstColumns = [\n      { colName: 'Key', colSpan: 1 },\n      { colName: 'Value', colSpan: 1 },\n      { colName: 'Date', colSpan: 1 },\n      { colName: 'Partition', colSpan: 1 },\n      { colName: 'Offset', colSpan: 1 },\n      { colName: 'Headers', colSpan: 1 },\n      { colName: 'Schema', colSpan: 1 }\n    ];\n    return (\n        <React.Fragment>\n          <nav\n              className=\"navbar navbar-expand-lg navbar-light bg-light\n         mr-auto khq-data-filter khq-sticky khq-nav\"\n          >\n            <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#topic-data\"\n                aria-controls=\"topic-data\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n                onClick={() => {\n                  this._openAndCloseFilters();\n                }}\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n\n            <nav className=\"pagination-data\">\n              <div>\n                <Pagination\n                    pageNumber={pageNumber}\n                    totalRecords={recordCount}\n                    totalPageNumber={messages.length === 0 ? pageNumber : undefined}\n                    onChange={({ currentTarget: input }) => {\n                      this.setState({ pageNumber: input.value });\n                    }}\n                    onSubmit={() => {\n                      this.setState(\n                          {\n                            pageNumber: pageNumber + 1\n                          },\n                          () => {\n                            this._searchMessages(true);\n                          }\n                      );\n                    }}\n                    editPageNumber={false}\n                    showTotalPageNumber={false}\n                />\n              </div>\n            </nav>\n\n            <div className={`collapse navbar-collapse ${showFilters}`} id=\"topic-data\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item dropdown\">\n                  <Dropdown>\n                    <Dropdown.Toggle className=\"nav-link dropdown-toggle\">\n                      <strong>Sort:</strong> ({sortBy})\n                    </Dropdown.Toggle>\n                    {!loading && <Dropdown.Menu>{this._renderSortOptions()}</Dropdown.Menu>}\n                  </Dropdown>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <Dropdown>\n                    <Dropdown.Toggle className=\"nav-link dropdown-toggle\">\n                      <strong>Partition:</strong> ({partition})\n                    </Dropdown.Toggle>\n                    {!loading && <Dropdown.Menu>\n                      <div style={{ minWidth: '300px' }} className=\"khq-offset-navbar\">\n                      {this._renderPartitionOptions()}\n                      </div>\n                    </Dropdown.Menu>}\n                  </Dropdown>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <Dropdown>\n                    <Dropdown.Toggle className=\"nav-link dropdown-toggle\">\n                      <strong>Timestamp:</strong>\n                      {(datetime !== '' &&\n                      ' ' +\n                      formatDateTime(\n                          {\n                            year: date.year(),\n                            monthValue: date.month(),\n                            dayOfMonth: date.date(),\n                            hour: date.hour(),\n                            minute: date.minute(),\n                            second: date.second()\n                          },\n                          'DD-MM-YYYY HH:mm'\n                      ))}\n                    </Dropdown.Toggle>\n                    {!loading && (\n                        <Dropdown.Menu>\n                          <div className=\"input-group\">\n                            <DatePicker\n                                onClear={() => {\n                                  this.setState({ datetime: '' });\n                                }}\n                                showDateTimeInput\n                                showTimeSelect\n                                value={datetime}\n                                onChange={value => {\n                                  this.setState({ datetime: value }, () => {\n                                    this._searchMessages();\n                                  });\n                                }}\n                            />\n                          </div>\n                        </Dropdown.Menu>\n                    )}\n                  </Dropdown>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <Dropdown>\n                    <Dropdown.Toggle className=\"nav-link dropdown-toggle\">\n                      <strong>Search:</strong> { this._renderCurrentSearchText() }\n                    </Dropdown.Toggle>\n                    {!loading && (\n                        <Dropdown.Menu>\n                          {this._renderSearchGroup()}\n                        </Dropdown.Menu>\n                    )}\n                  </Dropdown>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <Dropdown>\n                    <Dropdown.Toggle className=\"nav-link dropdown-toggle\">\n                      <strong>Offsets:</strong>\n                    </Dropdown.Toggle>\n                    {!loading && (\n                        <Dropdown.Menu>\n                          <div style={{ minWidth: '300px' }} className=\"khq-offset-navbar\">\n                            <div className=\"input-group\">\n                              <table>{this._renderOffsetsOptions()}</table>\n                              <div className=\"input-group-append\">\n                                <button\n                                    className=\"btn btn-primary offsets-ok\"\n                                    type=\"button\"\n                                    onClick={() => {\n                                      let offsetsSearch = '';\n                                      for (let i = 0; i < Object.keys(offsets).length; i++) {\n                                        if (Object.values(offsets)[i] !== '') {\n                                          if (offsetsSearch !== '') {\n                                            offsetsSearch += '_';\n                                          }\n                                          offsetsSearch += `${i}-${Object.values(offsets)[i]}`;\n                                        }\n                                      }\n                                      this.setState({ offsetsSearch }, () => {\n                                        this._searchMessages();\n                                      });\n                                    }}\n                                >\n                                  OK\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </Dropdown.Menu>\n                    )}\n                  </Dropdown>\n                </li>\n                <li>\n                  <Dropdown>\n                    <Dropdown.Toggle className=\"nav-link dropdown-toggle\">\n                      <strong>Time Format:</strong> ({this.state.dateTimeFormat})\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item onClick={() =>\n                          this._handleOnDateTimeFormatChanged(\n                            constants.SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.RELATIVE\n                          )\n                        }>\n                        Show relative time\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={() =>\n                          this._handleOnDateTimeFormatChanged(\n                            constants.SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.ISO\n                          )\n                        }>\n                        Show ISO timestamp\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          {isSearching && <ProgressBar style={{ height: '0.3rem' }} animated now={percent} />}\n          <div className=\"table-responsive\">\n            <Table\n                loading={loading}\n                history={history}\n                reduce={true}\n                firstHeader={firstColumns}\n                columns={[\n                  {\n                    id: 'key',\n                    accessor: 'key',\n                    colName: 'Key',\n                    type: 'text',\n                    cell: (obj, col) => {\n                      let value = obj[col.accessor] === '' ? 'null' : obj[col.accessor];\n                      return (\n                          <span>\n                      <code className=\"key\">{value}</code>\n                    </span>\n                      );\n                    }\n                  },\n                  {\n                    id: 'value',\n                    accessor: 'value',\n                    colName: 'Value',\n                    type: 'text',\n                    extraRow: true,\n                    extraRowContent: (obj, index) => {\n                      let value = obj.value;\n                      try {\n                        let json = JSONbig.parse(obj.value);\n                        value = JSONbig.stringify(json, null, 2);\n                        // eslint-disable-next-line no-empty\n                      } catch (e) {}\n\n                      return (\n                          <AceEditor\n                              mode=\"json\"\n                              id={'value' + index}\n                              theme=\"merbivore_soft\"\n                              value={value || 'null'}\n                              readOnly\n                              name=\"UNIQUE_ID_OF_DIV\"\n                              editorProps={{ $blockScrolling: true }}\n                              style={{ width: '100%', minHeight: '25vh' }}\n                          />\n                      );\n                    },\n                    cell: obj => {\n                      return (\n                          <div>\n                            {obj.exceptions.length > 0 && (\n                                <div\n                                    className=\"alert alert-warning\"\n                                    role=\"alert\"\n                                    dangerouslySetInnerHTML={{ __html: obj.exceptions.join('<br /><br />')}}>\n                                </div>\n                            )}\n                            <pre className=\"mb-0 khq-data-highlight\">\n                              <code>{obj.value || 'null'}</code>\n                            </pre>\n                          </div>\n                      );\n                    }\n                  },\n                  {\n                    id: 'timestamp',\n                    accessor: 'timestamp',\n                    colName: 'Date',\n                    type: 'text',\n                    cell: (obj, col) => {\n                      return <DateTime \n                        isoDateTimeString={obj[col.accessor]} \n                        dateTimeFormat={this.state.dateTimeFormat} \n                      />;\n                    }\n                  },\n                  {\n                    id: 'partition',\n                    accessor: 'partition',\n                    colName: 'Partition',\n                    type: 'text',\n                    cell: (obj, col) => {\n                      return obj[col.accessor];\n                    }\n                  },\n                  {\n                    id: 'offset',\n                    accessor: 'offset',\n                    colName: 'Offset',\n                    type: 'text',\n                    cell: (obj, col) => {\n                      return obj[col.accessor];\n                    }\n                  },\n                  {\n                    id: 'headers',\n                    accessor: 'headers',\n                    colName: 'Headers',\n                    type: 'text',\n                    expand: true,\n                    cell: obj => {\n                      return <div className=\"tail-headers\">{Object.keys(obj.headers).length}</div>;\n                    }\n                  },\n                  {\n                    id: 'schema',\n                    accessor: 'schema',\n                    colName: 'Schema',\n                    type: 'text',\n                    cell: (obj, col) => {\n                      return (\n                          <div className=\"justify-items\">\n                            {obj[col.accessor].key !== undefined && (\n                                <span\n                                    className=\"badge badge-primary clickable\"\n                                    onClick={() => {\n                                      this._redirectToSchema(obj.schema.key);\n                                    }}\n                                >\n                          Key: {obj[col.accessor].key}\n                        </span>\n                            )}\n\n                            {obj[col.accessor].value !== undefined && (\n                                <span\n                                    className=\"badge badge-primary clickable schema-value\"\n                                    onClick={() => {\n                                      this._redirectToSchema(obj.schema.value);\n                                    }}\n                                >\n                          Value: {obj[col.accessor].value}\n                        </span>\n                            )}\n                          </div>\n                      );\n                    }\n                  }\n                ]}\n                extraRow\n                noStripes\n                data={messages}\n                updateData={data => {\n                  this.setState({ messages: data });\n                }}\n                onDelete={row => {\n                  this._handleOnDelete(row);\n                }}\n                onShare={row => {\n                  this._handleOnShare(row);\n                }}\n                onDownload={row => {\n                  this._handleDownload(row);\n                }}\n                onCopy={row => {\n                  this._handleCopy(row)\n                }}\n                actions={actions}\n                onExpand={obj => {\n                  return Object.keys(obj.headers).map(header => {\n                    return (\n                        <tr\n                            className={'table-sm'}\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              width: '100%'\n                            }}\n                        >\n                          <td\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                borderStyle: 'dashed',\n                                borderWidth: '1px',\n                                backgroundColor: '#171819'\n                              }}\n                          >\n                            {header}\n                          </td>\n                          <td\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                borderStyle: 'dashed',\n                                borderWidth: '1px',\n                                backgroundColor: '#171819'\n                              }}\n                          >\n                            {obj.headers[header]}\n                          </td>\n                        </tr>\n                    );\n                  });\n                }}\n            />\n          </div>\n\n          <ConfirmModal\n              show={this.state.showDeleteModal}\n              handleCancel={this._closeDeleteModal}\n              handleConfirm={this._deleteCompactMessage}\n              message={this.state.deleteMessage}\n          />\n        </React.Fragment>\n    );\n  }\n}\n\nexport default TopicData;\n","module.exports = __webpack_public_path__ + \"static/media/icon.648ce9c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.45903e1f.svg\";","import { Component } from 'react';\nimport axios from 'axios';\nimport { get, put, post, remove } from '../../utils/api';\n\nclass Root extends Component {\n\n  cancel = axios.CancelToken.source();\n\n  componentWillUnmount() {\n    const pathname = window.location.pathname;\n\n    if (pathname !== '/ui/login') {\n      sessionStorage.setItem('returnTo', pathname + (window.location.search || ''));\n    }\n\n    this.cancelAxiosRequests();\n  }\n\n  cancelAxiosRequests() {\n    if (this.cancel !== undefined) {\n      this.cancel.cancel('cancel all');\n    }\n  }\n\n  renewCancelToken() {\n    this.cancel = axios.CancelToken.source();\n  }\n\n  getApi(url) {\n    return get(url, { cancelToken: this.cancel.token })\n  }\n  postApi(url, body) {\n    return post(url, body, { cancelToken: this.cancel.token })\n  }\n  putApi(url, body) {\n    return put(url, body, { cancelToken: this.cancel.token })\n  }\n  removeApi(url, body) {\n    return remove(url, body, { cancelToken: this.cancel.token })\n  }\n\n}\n\nexport default Root;\n","import Root from './Root';\n\nexport default Root;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { ROLE_TYPE } from './constants';\n\nexport function calculateTopicOffsetLag(topicOffsets, topicId) {\n  let offsetLag = 0;\n  let offset = 0;\n  let lastOffset = 0;\n\n  topicOffsets.filter(topicOffset => topicOffset.topic === topicId).forEach(topicOffset => {\n    offset = topicOffset.offset || 0;\n    lastOffset = topicOffset.lastOffset || 0;\n    offsetLag += lastOffset - offset;\n  });\n\n  return offsetLag;\n}\n\nexport function groupedTopicOffset(offsets) {\n  return (offsets || [])\n      .reduce((accumulator, r)  => {\n        if (accumulator[r.topic] === undefined) {\n          accumulator[r.topic] = [];\n        }\n\n        accumulator[r.topic].push(r);\n\n        return accumulator;\n      }, Object.create(null));\n}\n\n\nexport function formatDateTime(value, format, utc = false) {\n  let milli = value.milli || 0;\n  const date = new Date(\n    value.year,\n    value.monthValue,\n    value.dayOfMonth,\n    value.hour,\n    value.minute,\n    value.second,\n    milli\n  );\n\n  return utc\n    ? moment(date.toISOString())\n        .utc()\n        .format(format)\n        .toString()\n    : moment(date.toISOString())\n        .format(format)\n        .toString();\n}\n\nexport function handleConvert(value, unit, exclude) {\n  exclude = exclude || '';\n  const convert = require('convert-units');\n  return convert(value)\n    .from(unit)\n    .toBest(exclude);\n}\n\nexport function handleType(value) {\n  return _.lowerCase(value.plural);\n}\n\nexport function showTime(milliseconds) {\n  if (!milliseconds) return '0 seconds';\n  //converts value to bigger type possible: year, month, week, day, hour, minute, second\n  const value = handleConvert(milliseconds, 'ms', { exclude: ['ms', 'mu', 'ns'] });\n  const valueIsSecond = Boolean(value.unit === 's'); //check if is second\n  // create value to show\n  const valueToSHow = valueIsSecond\n    ? `${Number(value.val.toFixed(3))} ${handleType(value)}`\n    : `${Math.floor(value.val)} ${handleType(value)}`;\n\n  // if value is not second - convert its decimal part into bigger tipe possible\n  const decimalPart = valueIsSecond\n    ? ''\n    : handleConvert(value.val - Math.floor(value.val), value.unit, {\n        exclude: ['ms', 'mu', 'ns']\n      });\n  // create decimalPart to show\n  const decimalPartToShow =\n    decimalPart && decimalPart.val > 0\n      ? `${Math.floor(decimalPart.val)} ${handleType(decimalPart)}`\n      : '';\n\n  return `${valueToSHow} ${decimalPartToShow}`;\n}\n\n/**\n * This function is responsible for showing the bytes in a\n * friendly way to the user, making the leases for upper\n * measures such as MB, GB, TB etc.\n *\n * @param {*} bytes value in bytes to show\n * @param {*} decimals decimal size place\n * @returns\n */\nexport function showBytes(bytes, decimals = 3) {\n  if (bytes === null || bytes === undefined) return '';\n  if (bytes === 0) return '0 B';\n\n  const kbytes = 1024;\n  const decimalCheck = decimals < 0 ? 0 : decimals;\n  const measures = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const identification = Math.floor(Math.log(bytes) / Math.log(kbytes));\n\n  return parseFloat((bytes / Math.pow(kbytes, identification)).toFixed(decimalCheck)) + ' ' + measures[identification];\n}\n\nfunction insertRole(roles, roleType, role) {\n  if (roles[roleType] === undefined) {\n    roles[roleType] = {};\n  }\n  roles[roleType][role] = true;\n\n  return roles;\n}\n\nexport function organizeRoles(roles) {\n  let newRoles = {};\n\n  if(!roles) {\n    return JSON.stringify(newRoles);\n  }\n\n  roles.forEach(role => {\n    switch (role.substring(0, role.indexOf('/'))) {\n      case ROLE_TYPE.TOPIC:\n        newRoles = insertRole(newRoles, ROLE_TYPE.TOPIC, role);\n        break;\n      case ROLE_TYPE.NODE:\n        newRoles = insertRole(newRoles, ROLE_TYPE.NODE, role);\n        break;\n      case ROLE_TYPE.GROUP:\n        newRoles = insertRole(newRoles, ROLE_TYPE.GROUP, role);\n        break;\n      case ROLE_TYPE.REGISTRY:\n        newRoles = insertRole(newRoles, ROLE_TYPE.REGISTRY, role);\n        break;\n      case ROLE_TYPE.ACLS:\n        newRoles = insertRole(newRoles, ROLE_TYPE.ACLS, role);\n        break;\n      case ROLE_TYPE.CONNECT:\n        newRoles = insertRole(newRoles, ROLE_TYPE.CONNECT, role);\n        break;\n      default:\n        break;\n    }\n  });\n\n  return JSON.stringify(newRoles);\n}\n\nexport function transformListObjsToViewOptions(list, id, name) {\n  return list.map(elem => {\n    return {\n      _id: elem[id],\n      name: elem[name]\n    };\n  });\n}\n\nexport function transformStringArrayToViewOptions(list) {\n  return list.map(elem => {\n    return {\n      _id: elem,\n      name: elem\n    };\n  });\n}\n\nexport default { showTime, showBytes };\n","import {uriUIOptions} from './endpoints';\nimport {getUIOptions, setUIOptions} from './localstorage';\nimport {get} from './api';\n\nexport const getSelectedTab = (props, tabs) => {\n    const url = props.location.pathname.split('/');\n    const selectedTab = props.location.pathname.split('/')[url.length - 1];\n    return (tabs.includes(selectedTab))? selectedTab : tabs[0];\n}\n\nexport async function getClusterUIOptions(clusterId) {\n\n    const uiOptions = getUIOptions(clusterId);\n    if (!uiOptions && clusterId) {\n        try {\n            const resOptions = await get(uriUIOptions(clusterId));\n            setUIOptions(clusterId, resOptions.data);\n            return resOptions.data;\n        } catch(err) {\n            console.error('Error:', err);\n            return {};\n        }\n    } else {\n        return uiOptions;\n    }\n}\n\nexport const capitalizeTxt = (text) => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\n\nexport default { getSelectedTab, getClusterUIOptions, capitalizeTxt };\n\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import './Spinner.scss';\nimport React, { Component } from 'react';\n\nclass Spinner extends Component {\n  render() {\n    return (\n      <div className=\"line-spinner\">\n        <div className=\"rect1\"/>\n        <div className=\"rect2\"/>\n        <div className=\"rect3\"/>\n        <div className=\"rect4\"/>\n        <div className=\"rect5\"/>\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as constants from '../../utils/constants';\nimport './styles.scss';\nimport Spinner from '../Spinner';\nimport {Link} from 'react-router-dom';\n\nclass Table extends Component {\n  state = {\n    extraExpanded: [],\n    expanded: [],\n    sortingColumn: '',\n    reverse: false\n  };\n\n  handleExpand = el => {\n    const currentExpandedRows = this.state.expanded;\n    const isRowCurrentlyExpanded = currentExpandedRows.includes(el.id);\n    const newExpandedRows = isRowCurrentlyExpanded\n      ? currentExpandedRows.filter(id => id !== el.id)\n      : currentExpandedRows.concat(el.id);\n    this.setState({ expanded: newExpandedRows });\n  };\n\n  handleExtraExpand = el => {\n    const currentExpandedRows = this.state.extraExpanded;\n    const isRowCurrentlyExpanded = currentExpandedRows.includes(el.id);\n\n    const newExpandedRows = isRowCurrentlyExpanded\n      ? currentExpandedRows\n      : currentExpandedRows.concat(el.id);\n    this.setState({ extraExpanded: newExpandedRows });\n  };\n\n  handleExtraCollapse = el => {\n    const currentExpandedRows = this.state.extraExpanded;\n    const isRowCurrentlyExpanded = currentExpandedRows.includes(el.id);\n\n    const newExpandedRows = !isRowCurrentlyExpanded\n      ? currentExpandedRows\n      : currentExpandedRows.filter(id => id !== el.id);\n    this.setState({ extraExpanded: newExpandedRows });\n  };\n\n  renderHeader() {\n    const { has2Headers, firstHeader, columns, actions, data } = this.props;\n    return (\n      <>\n        {has2Headers && (\n          <thead id=\"firstHeader\" className=\"thead-dark\">\n            <tr key=\"firstHeader\">\n              {firstHeader.map((column, index) => {\n                return (\n                  <th\n                    id=\"headerColumn\"\n                    className=\"header-text\"\n                    key={`firstHead${column.colName}${index}`}\n                    colSpan={column.colSpan}\n                  >\n                    {column.colName}\n                  </th>\n                );\n              })}\n              {actions && actions.length > 0 && data && data.length > 0 && (\n                <th colSpan={actions.length} />\n              )}\n            </tr>\n          </thead>\n        )}\n        <thead id=\"secondHeader\" className=\"thead-dark\">\n          <tr key=\"secondHeader\">\n            {columns.map((column, index) => {\n              if (!column.extraRow) {\n                return (\n                  <th className=\"header-text\" key={`secondHead${column.colName}${index}`}>\n                    <div className=\"header-content\">\n                      {column.colName}\n                      {column.sortable && (\n                        <i\n                          className=\"fa fa-sort clickable\"\n                          onClick={() => {\n                            let data = [];\n                            this.setState(\n                              {\n                                sortingColumn:\n                                  column.accessor !== this.state.sortingColumn\n                                    ? column.accessor\n                                    : this.state.sortingColumn,\n                                reverse:\n                                  column.accessor !== this.state.sortingColumn &&\n                                  this.state.sortingColumn > 0\n                                    ? false\n                                    : !this.state.reverse\n                              },\n                              () => {\n                                data = this.props.data.sort(\n                                  constants.sortBy(this.state.sortingColumn, this.state.reverse)\n                                );\n                                this.props.updateData(data);\n                              }\n                            );\n                          }}\n                        />\n                      )}\n                    </div>\n                  </th>\n                );\n              }\n              return null;\n            })}\n            {actions && actions.length > 0 && data && data.length > 0 && (\n              <th colSpan={actions.length} />\n            )}\n          </tr>\n        </thead>\n      </>\n    );\n  }\n\n  onDoubleClick(onDetails, row) {\n    const { history, idCol } = this.props;\n\n    if (onDetails) {\n      let url = onDetails(idCol ? row[this.props.idCol] : row.id, row);\n      if (url) {\n        history.push({\n          pathname: url,\n          internal: row.internal\n        });\n      }\n    }\n  }\n\n  renderRow(row, index) {\n    const { actions, columns, extraRow, onExpand, noRowBackgroundChange, onDetails, handleExtraExpand, handleExtraCollapse, reduce } = this.props;\n    const { extraExpanded } = this.state;\n\n    let extraRowColCollapsed;\n    let extraRowColExpanded;\n    const items = [\n      <tr\n        key={`tableRow${index}`}\n        className={reduce ? 'reduce' : ''}\n      >\n        {columns.map((column, colIndex) => {\n          let extraStyles = [];\n          if (noRowBackgroundChange) {\n            extraStyles.push({ backgroundColor: '#444' });\n          }\n          if (column.expand) {\n            extraStyles.push({ cursor: 'pointer' });\n          }\n          if (column.extraRow) {\n            extraRowColCollapsed = column.cell ? column.cell(row, column) : row[column.accessor];\n            extraRowColExpanded = column.extraRowContent\n              ? column.extraRowContent(row, column)\n              : row[column.accessor];\n            return null;\n          }\n          if (typeof column.cell === 'function') {\n            return (\n              <td\n                key={`tableCol${index}${colIndex}`}\n                style={column.expand ? { cursor: 'pointer' } : {}}\n                onDoubleClick={() => {\n                  if (\n                    actions &&\n                    actions.find(action => action === constants.TABLE_DETAILS) &&\n                    !column.expand\n                  ) {\n                    this.onDoubleClick(onDetails, row);\n                  }\n\n                  column.expand && this.handleExpand(row);\n                }}\n                id={`row_${column.id}_${colIndex}`}\n              >\n                {this.renderContent(column.cell(row, column))}\n              </td>\n            );\n          }\n\n          return (\n            <td\n              key={`tableCol${index}${colIndex}`}\n              style={column.expand ? { cursor: 'pointer' } : {}}\n              onDoubleClick={() => {\n                if (\n                  actions &&\n                  actions.find(action => action === constants.TABLE_DETAILS) &&\n                  !column.expand\n                ) {\n                  this.onDoubleClick(onDetails, row);\n                }\n\n                column.expand && this.handleExpand(row);\n              }}\n              id={`row_${column.id}_${colIndex}`}\n            >\n              {this.renderContent(row[column.accessor])}\n            </td>\n          );\n        })}\n        {actions && actions.length > 0 && this.renderActions(row)}\n      </tr>\n    ];\n    if (\n      JSON.stringify(\n        this.state.expanded.find(el => {\n          return el === row.id;\n        })\n      )\n    ) {\n      items.push(\n        <tr key={'row-expandable-' + row.id}>\n          <td\n            key={'col-expandable-' + row.id}\n            colSpan={this.colspan()}\n            style={{ padding: 0 }}\n          >\n            {onExpand(row)}\n          </td>\n        </tr>\n      );\n    }\n\n    if (extraRow && extraRowColCollapsed) {\n      items.push(\n        <tr\n          onClick={() => {\n            if (\n              !extraExpanded ||\n              !JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)) ||\n              !JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)).length > 0) {\n                typeof handleExtraExpand === 'function'\n                  ? this.setState({ extraExpanded: handleExtraExpand(extraExpanded, row)})\n                  : this.handleExtraExpand(row);\n            }\n          }}\n          key={'row-expanded-' + row.id}\n        >\n          <td\n            style={{ backgroundColor: '#171819' }}\n            colSpan={this.colspan()}\n          >\n            {' '}\n            {extraExpanded &&\n            JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)) &&\n            JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)).length > 0 ? (\n              <div className=\"close-container\">\n                <span\n                  onClick={() => {\n                    typeof handleExtraCollapse === 'function'\n                        ? this.setState({ extraExpanded: handleExtraCollapse(extraExpanded, row)})\n                        : this.handleExtraCollapse(row);\n                  }}\n                  aria-hidden=\"true\"\n                >\n                  ×\n                </span>\n              </div>\n            ) : null}\n            <div\n              className={\n                extraExpanded &&\n                JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)) &&\n                JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)).length > 0\n                  ? ''\n                  : 'collapsed-extra-row'\n              }\n            >\n              {extraExpanded &&\n              JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)) &&\n              JSON.stringify(extraExpanded.find(expanded => expanded.subject ? expanded.subject === row.subject : expanded === row.id)).length > 0\n                ? extraRowColExpanded\n                : extraRowColCollapsed}\n            </div>\n          </td>\n        </tr>\n      );\n    }\n\n    return items;\n  }\n\n  renderContent(content) {\n    return content !== undefined ? content : <Spinner />\n  }\n\n  renderActions(row) {\n    const { actions, onAdd, onDetails, onConfig, onDelete, onEdit, onRestart, onShare, onDownload, onCopy, idCol } = this.props;\n\n    let idColVal = idCol ? row[this.props.idCol] : row.id;\n\n    return (\n      <>\n        {actions.find(el => el === constants.TABLE_ADD) && (\n          <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Add\"\n              id=\"add\"\n              onClick={() => {\n                onAdd && onAdd();\n              }}\n            >\n              <i className=\"fa fa-search\" />\n            </span>\n          </td>\n        )}\n        {actions.find(el => el === constants.TABLE_DETAILS) && (\n          <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <Link to={onDetails && onDetails(idColVal, row)}\n              id=\"details\"\n              title=\"Details\"\n            >\n              <i className=\"fa fa-search\" />\n            </Link>\n          </td>\n        )}\n        {actions.find(el => el === constants.TABLE_CONFIG) && (\n          <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <Link to={onConfig && onConfig(idColVal, row)}\n              id=\"config\"\n              title=\"Config\"\n            >\n              <i className=\"fa fa-gear\" />\n            </Link>\n          </td>\n        )}\n        {actions.find(el => el === constants.TABLE_DELETE) && (\n          <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Delete\"\n              id=\"delete\"\n              onClick={() => {\n                onDelete && onDelete(row);\n              }}\n            >\n              <i className=\"fa fa-trash\" />\n            </span>\n          </td>\n        )}\n        {actions.find(el => el === constants.TABLE_EDIT) && (\n          <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Edit\"\n              id=\"edit\"\n              onClick={() => {\n                onEdit && onEdit();\n              }}\n            >\n              <i className=\"fa fa-search\" />\n            </span>\n          </td>\n        )}\n        {actions.find(el => el === constants.TABLE_RESTART) && (\n          <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Restart\"\n              id=\"restart\"\n              onClick={() => {\n                onRestart && onRestart(row);\n              }}\n            >\n              <i className=\"fa fa-refresh\" />\n            </span>\n          </td>\n        )}\n        {actions.find(el => el === constants.TABLE_COPY) && (\n            <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Copy\"\n                  id=\"copy\"\n                  onClick={() => {\n                    onCopy && onCopy(row);\n                  }}\n            >\n              <i className=\"fa fa-clone\" />\n            </span>\n            </td>\n        )}\n        {actions.find(el => el === constants.TABLE_SHARE) && (\n            <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Share\"\n                id=\"share\"\n                onClick={() => {\n                  onShare && onShare(row);\n                }}\n            >\n              <i className=\"fa fa-share\" />\n            </span>\n            </td>\n        )}\n        {actions.find(el => el === constants.TABLE_DOWNLOAD) && (\n            <td className=\"khq-row-action khq-row-action-main action-hover\">\n            <span title=\"Download\"\n                id=\"download\"\n                onClick={() => {\n                  onDownload && onDownload(row);\n                }}\n            >\n              <i className=\"fa fa-download\" />\n            </span>\n            </td>\n        )}\n      </>\n    );\n  }\n\n  renderLoading() {\n      return (\n          <tr>\n            <td colSpan={this.colspan()} className=\"loading-rows\">\n              <Spinner />\n            </td>\n          </tr>\n      );\n  }\n\n  renderNoContent() {\n    const { noContent } = this.props;\n    if (noContent) {\n      if (typeof noContent === 'string') {\n        return (\n          <tr>\n            <td colSpan={this.colspan()}>\n              <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                {noContent}\n              </div>\n            </td>\n          </tr>\n        );\n      } else {\n        return noContent;\n      }\n    }\n    return (\n      <tr>\n        <td colSpan={this.colspan()}>\n          <div className=\"alert alert-warning mb-0\" role=\"alert\">\n            No data available\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  colspan() {\n    const { actions, columns } = this.props;\n\n    return columns.filter(column => !column.extraRow).length + (actions && actions.length ? actions.length : 0)\n  }\n\n  render() {\n    const { noStripes, loading, rowId } = this.props;\n    let allItemRows = [];\n    let data = this.props.data || [];\n\n    data.forEach((item, index) => {\n      if (rowId !== undefined) {\n        index = rowId(item);\n      }\n\n      if (!item.id) {\n        item.id = index;\n      }\n      const perItemRows = this.renderRow(item, index);\n      allItemRows = allItemRows.concat(perItemRows);\n    });\n\n    let classNames = 'table table-bordered table-hover mb-0';\n    if (!noStripes) classNames += ' table-striped';\n    if (noStripes) classNames += ' no-stripes';\n\n    return (\n        <div className=\"table-responsive\">\n          <table className={classNames}>\n            {this.renderHeader()}\n            <tbody>\n                {loading? this.renderLoading() : ((data && data.length > 0) ? allItemRows : this.renderNoContent())}\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  title: PropTypes.string,\n  has2Headers: PropTypes.bool,\n  firstHeader: PropTypes.arrayOf(\n    PropTypes.shape({\n      colName: PropTypes.string,\n      colSpan: PropTypes.number\n    })\n  ),\n  data: PropTypes.array,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      accessor: PropTypes.string,\n      colName: PropTypes.string,\n      type: PropTypes.string,\n      cell: PropTypes.function\n    })\n  ),\n  actions: PropTypes.array,\n\n  onAdd: PropTypes.func,\n  onDetails: PropTypes.func,\n  onConfig: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n  onRestart: PropTypes.func,\n  onShare: PropTypes.func,\n  onDownload: PropTypes.func,\n  onCopy: PropTypes.func,\n\n  idCol: PropTypes.string,\n  toPresent: PropTypes.array,\n  noContent: PropTypes.any,\n  handleExtraExpand: PropTypes.func,\n  handleExtraCollapse: PropTypes.func,\n  loading: PropTypes.bool,\n  history: PropTypes.object,\n  rowId: PropTypes.func,\n};\n\nexport default Table;\n","import ConfirmModal from './ConfirmModal';\n\nexport default ConfirmModal;\n","// Application version to display in sidebar\nexport const VERSION = 'Beta';\n\n// Config data types\nexport const MILLI = 'MILLI';\nexport const BYTES = 'BYTES';\nexport const TEXT = 'TEXT';\n\n// Role types\nexport const ROLE_TYPE = {\n  TOPIC: 'topic',\n  NODE: 'node',\n  GROUP: 'group',\n  REGISTRY: 'registry',\n  ACLS: 'acls',\n  CONNECT: 'connect'\n};\n\n// Table actions\nexport const TABLE_ADD = 'add';\nexport const TABLE_EDIT = 'edit';\nexport const TABLE_DELETE = 'delete';\nexport const TABLE_DETAILS = 'details';\nexport const TABLE_CONFIG = 'config';\nexport const TABLE_RESTART = 'restart';\nexport const TABLE_SHARE = 'share';\nexport const TABLE_DOWNLOAD = 'download';\nexport const TABLE_COPY = 'copy';\n\n// Tab names/route names\nexport const CLUSTER = 'cluster';\nexport const NODE = 'node';\nexport const TOPIC = 'topic';\nexport const TAIL = 'tail';\nexport const GROUP = 'group';\nexport const ACLS = 'acls';\nexport const SCHEMA = 'schema';\nexport const CONNECT = 'connect';\nexport const SETTINGS = 'settings';\n\n// Configurable settings\nexport const SETTINGS_VALUES = {\n  TOPIC: {\n    TOPIC_DEFAULT_VIEW: {\n      ALL: 'ALL',\n      HIDE_INTERNAL: 'HIDE_INTERNAL',\n      HIDE_INTERNAL_STREAM: 'HIDE_INTERNAL_STREAM',\n      HIDE_STREAM: 'HIDE_STREAM'\n    }\n  },\n  TOPIC_DATA: {\n    SORT: {\n      OLDEST: 'OLDEST',\n      NEWEST: 'NEWEST',\n    },\n    DATE_TIME_FORMAT: {\n      RELATIVE: 'RELATIVE',\n      ISO: 'ISO',\n    }\n  }\n}\n\nexport const TYPES = {\n  STRING: 'STRING',\n  LONG: 'LONG',\n  CLASS: 'CLASS',\n  PASSWORD: 'PASSWORD',\n  INT: 'INT',\n  LIST: 'LIST',\n  BOOLEAN: 'BOOLEAN',\n  DOUBLE: 'DOUBLE',\n  SHORT: 'SHORT'\n};\n\nexport default {\n  MILLI,\n  BYTES,\n  TEXT,\n  TABLE_ADD,\n  TABLE_EDIT,\n  TABLE_DELETE,\n  TABLE_DETAILS,\n  TABLE_CONFIG,\n  TABLE_RESTART,\n  TABLE_SHARE,\n  TABLE_COPY,\n  TABLE_DOWNLOAD,\n  CLUSTER,\n  NODE,\n  TOPIC,\n  TAIL,\n  GROUP,\n  ACLS,\n  SCHEMA,\n  CONNECT,\n  TYPES,\n  ROLE_TYPE,\n  VERSION,\n  SETTINGS,\n  SETTINGS_VALUES\n};\n\nexport const sortBy = (field, reverse, primer) => {\n  const key = primer\n    ? function(x) {\n        return primer(x[field]);\n      }\n    : function(x) {\n        return x[field];\n      };\n\n  reverse = !reverse ? 1 : -1;\n\n  return function(a, b) {\n    // eslint-disable-next-line\n    return (a = key(a)), (b = key(b)), reverse * ((a > b) - (b > a));\n  };\n};\n","export const getUIOptions = (cluster) => {\n  const uiOptions = localStorage.getItem('uiOptions');\n  if (uiOptions !== null) {\n    const objParsed = JSON.parse(uiOptions);\n    return objParsed[cluster];\n  } else {\n    return null;\n  }\n}\n\nexport const setUIOptions = (cluster, newUIOptions) => {\n\n  const uiOptions = localStorage.getItem('uiOptions');\n  if (uiOptions !== null) {\n    const objParsed = JSON.parse(uiOptions);\n    objParsed[cluster] = newUIOptions;\n    localStorage.setItem('uiOptions', JSON.stringify(objParsed));\n  } else {\n    localStorage.setItem('uiOptions', JSON.stringify({[cluster]: newUIOptions}));\n  }\n\n}\n\nexport const popProduceToTopicValues = () => {\n  const produceToTopicValues = localStorage.getItem('produceToTopicValues');\n  localStorage.removeItem('produceToTopicValues');\n  return produceToTopicValues !== null ? JSON.parse(produceToTopicValues) : {};\n}\n\nexport const setProduceToTopicValues = (newProduceToTopicValues) => {\n  localStorage.setItem('produceToTopicValues', JSON.stringify(newProduceToTopicValues));\n}\n\n\n\n\n","import {createBrowserHistory} from 'history'\nimport { basePath } from './endpoints';\n\nconst customHistory = createBrowserHistory({\n  basename: basePath\n});\n\nexport default customHistory;\n","import React from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport history from './history';\n\nconst configs = {\n  withCredentials: true\n};\n\nconst handleError = err => {\n  let error = {\n    status: err.response ? err.response.status : '',\n    message: err.response ? err.response.data.message : 'Internal Server Error',\n    stacktrace:\n      err.response &&\n      err.response.data &&\n      err.response.data._embedded &&\n      err.response.data._embedded.stacktrace &&\n      err.response.data._embedded.stacktrace.message\n        ? err.response.data._embedded.stacktrace.message\n        : null\n  };\n\n  if (err.response && err.response.status < 500) {\n    toast.warn(error.message);\n    if (err.status === 401) {\n      history.replace('/ui/login');\n    }\n\n    return error;\n  } else {\n    let message = React.createElement('h4', null, error.message);\n\n    if (error.stacktrace) {\n      let detailedReactHTMLElement = React.createElement('pre', null, error.stacktrace);\n      message = React.createElement('div', null, message, detailedReactHTMLElement);\n    }\n\n    toast.error(message, {\n      autoClose: false,\n      className: 'internal-error'\n    });\n\n    return error;\n  }\n};\n\nexport const get = (url, config) =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(url, {...configs, ...config})\n      .then(res => {\n        resolve(res);\n      })\n      .catch(err => {\n        if (!axios.isCancel(err)) {\n          reject(handleError(err));\n        }\n      });\n  });\n\nexport const put = (url, body, config) =>\n  new Promise((resolve, reject) => {\n    axios\n      .put(url, body, {...configs, ...config})\n      .then(res => {\n        resolve(res);\n      })\n      .catch(err => {\n        if (!axios.isCancel(err)) {\n          reject(handleError(err));\n        }\n      });\n  });\n\nexport const post = (url, body, config) =>\n  new Promise((resolve, reject) => {\n    axios\n      .post(url, body, {...configs, ...config})\n      .then(res => {\n        resolve(res);\n      })\n      .catch(err => {\n        if (!axios.isCancel(err)) {\n          reject(handleError(err));\n        }\n      });\n  });\n\nexport const remove = (url, body, config) =>\n  new Promise((resolve, reject) => {\n    axios\n      .delete(url, { ...configs, ...config, data: body })\n      .then(res => {\n        resolve(res);\n      })\n      .catch(err => {\n        if (!axios.isCancel(err)) {\n          reject(handleError(err));\n        }\n      });\n  });\n\nexport const login = (url, body) => {\n  const requestOptions = {\n    method: 'POST',\n    redirect: 'manual',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(body)\n  };\n  return fetch(url, requestOptions);\n};\n\nexport const logout = url => {\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'manual'\n  };\n\n  new Promise((resolve, reject) => {\n    fetch(url, requestOptions)\n      .then(response => {\n        resolve(response);\n      })\n      .catch(function(err) {\n        reject(handleError(err));\n      });\n  });\n};\n\nexport default { get, put, post, remove, login, logout };\n","import prefix from './../prefix';\n\nconst baseUrl = process.env.REACT_APP_BASE_URL ||\n  `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\nexport const basePath = prefix()\n\nexport const apiUrl = baseUrl + prefix() + '/api'\n\nexport const uriLogin = () => {\n  return `${basePath}/login`;\n};\n\nexport const uriAuths = () => {\n  return `${apiUrl}/auths`;\n};\n\nexport const uriOidc = (provider) => {\n  return `${baseUrl}${basePath}/oauth/login/${provider}`;\n};\n\nexport const uriLogout = () => {\n  return `${basePath}/logout`;\n};\n\nexport const uriCurrentUser = () => {\n  return `${apiUrl}/me`;\n};\n\nexport const uriClusters = () => {\n  return `${apiUrl}/cluster`;\n};\n\nexport const uriUIOptions = (clusterId) => {\n  return `${apiUrl}/${clusterId}/ui-options`;\n};\n\nexport const uriTopics = (clusterId, search, show, page, pageSize) => {\n  if(pageSize === 1){\n    return `${apiUrl}/${clusterId}/topic?search=${search}&show=${show}&page=${page}`;\n  }else{\n    return `${apiUrl}/${clusterId}/topic?search=${search}&show=${show}&page=${page}&uiPageSize=${pageSize}`;\n  }\n};\n\nexport const uriTopicDefaultConf = () => `${apiUrl}/topic/defaults-configs`;\n\nexport const uriTopicsName = (clusterId) => `${apiUrl}/${clusterId}/topic/name`;\n\nexport const uriTopicsInfo = (clusterId, topicId) => `${apiUrl}/${clusterId}/topic/${topicId}`;\n\nexport const uriTopicsCreate = clusterId => `${apiUrl}/${clusterId}/topic`;\n\nexport const uriTopicsProduce = (clusterId, topicName) =>\n  `${apiUrl}/${clusterId}/topic/${topicName}/data`;\n\nexport const uriDeleteTopics = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}`;\n};\n\nexport const uriTopicData = (\n  clusterId,\n  topicId,\n  filters,\n  nextPage = ''\n) => {\n  if (nextPage !== '') {\n    return basePath + nextPage;\n  }\n\n  let uri = `${apiUrl}/${clusterId}/topic/${topicId}/data?${filters}`;\n  return uri;\n};\n\nexport const uriTopicDataSearch = (clusterId, topicId, filters, offsets) => {\n  let uri = `${apiUrl}/${clusterId}/topic/${topicId}/data/search`;\n  if(filters) {\n    uri = uri + `?${filters}`\n  }\n  if(offsets) {\n    uri = uri + `&after=${offsets}`\n  }\n  return uri;\n};\n\nexport const uriTopicDataSingleRecord = (clusterId, topicId, partition, offset) => {\n  let uri = `${apiUrl}/${clusterId}/topic/${topicId}/data/record/${partition}/${offset}`;\n  return uri;\n};\n\nexport const uriTopicsPartitions = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/partitions`;\n};\n\nexport const uriTopicsGroups = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/groups`;\n};\nexport const uriTopicsLogs = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/logs`;\n};\nexport const uriTopicsConfigs = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/configs`;\n};\nexport const uriTopicsAcls = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/acls`;\n};\n\nexport const uriTopicsUpdateConfigs = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/configs`;\n};\n\nexport const uriTopicsOffsetsByTimestamp = (clusterId, topicId, timestamp) => {\n  return `${apiUrl}/${clusterId}/topic/${topicId}/offsets/start?timestamp=${timestamp}`;\n};\n\nexport const uriTopicsCopy = (fromClusterId, fromTopicId, toClusterId, toTopicId) => {\n  return `${apiUrl}/${fromClusterId}/topic/${fromTopicId}/copy/${toClusterId}/topic/${toTopicId}`;\n}\n\n\nexport const uriConnects = id => {\n  return `${apiUrl}/connects${id ? '?clusterId=' + id : ''}`;\n};\n\nexport const uriConnectDefinitions = (clusterId, connectId, search, pageNumber) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}?&search=${search}&page=${pageNumber}`;\n};\n\nexport const uriConnectPlugins = (clusterId, connectId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/plugins`;\n};\n\nexport const uriConnectPlugin = (clusterId, connectId, pluginId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/plugins/${pluginId}`;\n};\n\nexport const uriCreateConnect = (clusterId, connectId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}`;\n};\n\nexport const uriGetDefinition = (clusterId, connectId, definitionId) => {\n  // eslint-disable-next-line max-len\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}`;\n};\n\nexport const uriConnectDefinitionConfigs = (clusterId, connectId, definitionId) => {\n  // eslint-disable-next-line max-len\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}/configs`;\n};\n\nexport const uriUpdateDefinition = (clusterId, connectId, definitionId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}/configs`;\n};\n\nexport const uriPauseDefinition = (clusterId, connectId, definitionId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}/pause`;\n};\n\nexport const uriResumeDefinition = (clusterId, connectId, definitionId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}/resume`;\n};\n\nexport const uriRestartDefinition = (clusterId, connectId, definitionId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}/restart`;\n};\n\nexport const uriRestartTask = (clusterId, connectId, definitionId, taskId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}/tasks/${taskId}/restart`;\n};\n\nexport const uriDeleteDefinition = (clusterId, connectId, definitionId) => {\n  return `${apiUrl}/${clusterId}/connect/${connectId}/${definitionId}`;\n};\n\nexport const uriSchemaRegistry = (clusterId, search, pageNumber) => {\n  return `${apiUrl}/${clusterId}/schema?&search=${search}&page=${pageNumber}`;\n};\n\nexport const uriSchemaId = (clusterId, id) => {\n  return `${apiUrl}/${clusterId}/schema/id/${id}`;\n};\n\nexport const uriSchemaVersions = (clusterId, subject) => {\n  return `${apiUrl}/${clusterId}/schema/${subject}/version`;\n};\n\nexport const uriDeleteSchema = (clusterId, subject) => {\n  return `${apiUrl}/${clusterId}/schema/${subject}`;\n};\n\nexport const uriPreferredSchemaForTopic = (clusterId, topicId) => {\n  return `${apiUrl}/${clusterId}/schema/topic/${topicId}`;\n};\n\nexport const uriDeleteSchemaVersion = (clusterId, subject, version) => {\n  return `${apiUrl}/${clusterId}/schema/${subject}/version/${version}`;\n};\n\nexport const uriLatestSchemaVersion = (clusterId, subject) => {\n  return `${apiUrl}/${clusterId}/schema/${subject}`;\n};\n\nexport const uriUpdateSchema = (clusterId, subject) => {\n  return `${apiUrl}/${clusterId}/schema/${subject}`;\n};\n\nexport const uriSchemaCreate = clusterId => {\n  return `${apiUrl}/${clusterId}/schema`;\n};\n\nexport const uriDeleteGroups = () => {\n  return `${apiUrl}/group/delete`;\n};\n\nexport const uriNodes = id => {\n  return `${apiUrl}/${id}/node`;\n};\n\nexport const uriNodePartitions = clusterId => {\n  return `${apiUrl}/${clusterId}/node/partitions`;\n};\n\nexport const uriNodesConfigs = (clusterId, nodeId) => {\n  return `${apiUrl}/${clusterId}/node/${nodeId}/configs`;\n};\n\nexport const uriNodesUpdateConfigs = (clusterId, nodeId) => {\n  return `${apiUrl}/${clusterId}/node/${nodeId}/configs`;\n};\n\nexport const uriNodesLogs = (clusterId, nodeId) => {\n  return `${apiUrl}/${clusterId}/node/${nodeId}/logs`;\n};\n\nexport const uriConsumerGroups = (clusterId, search, pageNumber) => {\n  // eslint-disable-next-line max-len\n  return `${apiUrl}/${clusterId}/group?search=${search}&page=${pageNumber}`;\n};\n\nexport const uriConsumerGroup = (clusterId, groupId) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}`;\n};\n\nexport const uriConsumerGroupTopics = (clusterId, groupId) => {\n  return `${apiUrl}/group/topics?clusterId=${clusterId}&groupId=${groupId}`;\n};\nexport const uriConsumerGroupMembers = (clusterId, groupId) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}/members`;\n};\n\nexport const uriConsumerGroupOffsets = (clusterId, groupId) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}/offsets`;\n};\n\nexport const uriConsumerGroupOffsetsByTimestamp = (clusterId, groupId, timestamp) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}/offsets/start?timestamp=${timestamp}`;\n};\n\nexport const uriConsumerGroupDelete = (clusterId, groupId) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}`;\n};\n\nexport const uriConsumerGroupUpdate = (clusterId, groupId) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}/offsets`;\n};\n\nexport const uriDeleteGroupOffsets = (clusterId, groupId, topicName) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}/topic/${topicName}`;\n};\n\nexport const uriAclsList = (clusterId, search) => {\n  let url = `${apiUrl}/${clusterId}/acls`;\n  return search ? `${url}?search=${search}` : url;\n};\n\nexport const uriConsumerGroupAcls = (clusterId, groupId) => {\n  return `${apiUrl}/${clusterId}/group/${groupId}/acls`;\n};\n\nexport const uriConsumerGroupByTopics = (clusterId, topicList) => {\n  return `${apiUrl}/${clusterId}/group/topics?topics=${topicList}`;\n};\n\nexport const uriAclsByPrincipal = (clusterId, principalEncoded, resourceType = 'ANY') => {\n  return `${apiUrl}/${clusterId}/acls/${principalEncoded}?resourceType=${resourceType}`;\n};\n\nexport const uriLiveTail = (clusterId, search, topics, size) => {\n  let searchUrl = `search=${search}`;\n  let topicsUrl = search.length > 0 ? '&' : '';\n  topics.forEach((topic, index) => {\n    if (index > 0) {\n      topicsUrl += '&topics=' + topic;\n    } else {\n      topicsUrl += 'topics=' + topic;\n    }\n  });\n\n  let sizeUrl = `${search.length > 0 || topics.length > 0 ? '&' : ''}size=${size}`;\n  return `${apiUrl}/${clusterId}/tail/sse?${search.length > 0 ? searchUrl : ''}${\n    topics.length > 0 ? topicsUrl : ''\n  }${size.length > 0 ? sizeUrl : ''}`;\n};\n\n\nexport const uriTopicDataDelete = (clusterId, topicName, partition, key) => {\n  return `${apiUrl}/${clusterId}/topic/${topicName}/data?partition=${partition}&key=${key}`;\n};\n\nexport const uriTopicDataEmpty = (clusterId, topicName) => {\n  return `${apiUrl}/${clusterId}/topic/${topicName}/data/empty`;\n}\n\nexport const uriTopicLastRecord = (clusterId, topicList) => {\n  return `${apiUrl}/${clusterId}/topic/last-record?topics=${topicList}`;\n}\n\nexport default {\n  apiUrl,\n  uriClusters,\n  uriConnects,\n  uriCreateConnect,\n  uriConnectPlugins,\n  uriGetDefinition,\n  uriUpdateDefinition,\n  uriPauseDefinition,\n  uriResumeDefinition,\n  uriRestartDefinition,\n  uriRestartTask,\n  uriConnectDefinitions,\n  uriConnectDefinitionConfigs,\n  uriNodes,\n  uriNodesConfigs,\n  uriTopicsLogs,\n  uriTopicsGroups,\n  uriNodePartitions,\n  uriTopicsPartitions,\n  uriTopicData,\n  uriTopicsProduce,\n  uriTopicsCreate,\n  uriTopics,\n  uriDeleteTopics,\n  uriNodesLogs,\n  uriConsumerGroups,\n  uriConsumerGroupTopics,\n  uriConsumerGroupMembers,\n  uriSchemaRegistry,\n  uriDeleteSchema,\n  uriPreferredSchemaForTopic,\n  uriSchemaCreate,\n  uriConsumerGroupUpdate,\n  uriTopicsConfigs,\n  uriLatestSchemaVersion,\n  uriSchemaVersions,\n  uriAclsList,\n  uriAclsByPrincipal,\n  uriLiveTail,\n  uriTopicDataSearch,\n  uriTopicDataDelete,\n  uriDeleteGroupOffsets\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DateTimePicker from 'react-datepicker';\nimport moment from 'moment';\nimport { formatDateTime } from '../../utils/converters';\n\nclass DatePicker extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func\n  };\n\n  state = {\n    value: '',\n    openDateModal: false\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      value: (this.props.value) ? this.props.value : new Date()\n    });\n  };\n\n  onChange = value => {\n    this.setState({ value }, () => {\n      this.props.onChange && this.props.onChange(value);\n    });\n  };\n\n  getDisplayValue = value => {\n    let date = moment(value);\n    try {\n      return formatDateTime(\n        {\n          year: date.year(),\n          monthValue: date.month(),\n          dayOfMonth: date.date(),\n          hour: date.hour(),\n          minute: date.minute(),\n          second: date.second()\n        },\n        'DD-MM-YYYY HH:mm'\n      );\n    } catch (e) {\n      return '';\n    }\n  };\n\n  render = () => {\n    const { value } = this.state;\n    const { showDateTimeInput, showTimeInput, showTimeSelect, onClear } = this.props;\n    return (\n      <div style={{ display: 'block', padding: 10 }}>\n        {showDateTimeInput && (\n          <div style={{ marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\n            <input\n              value={this.getDisplayValue(value)}\n              className=\"form-control\"\n              placeholder={this.getDisplayValue(value)}\n            />\n            {onClear && (\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  this.setState(\n                    {\n                      value: new Date()\n                    },\n                    () => {\n                      onClear && onClear();\n                    }\n                  );\n                }}\n              >\n                Clear\n              </button>\n            )}\n          </div>\n        )}\n\n        <DateTimePicker\n          className=\"date-block\"\n          calendarClassName={showTimeInput ? 'date-block' : ''}\n          selected={value}\n          onChange={date => {\n            this.onChange(date);\n          }}\n          showTimeSelect={showTimeSelect}\n          showTimeInput={showTimeInput}\n          dateFormat=\"MM/dd/yyyy h:mm aa\"\n          inline\n        />\n      </div>\n    );\n  };\n}\n\nexport default DatePicker;\n","import DatePicker from './DatePicker';\n\nexport default DatePicker;\n","import React from 'react';\n\nimport '../styles.scss';\n\nfunction ConfirmModal({handleConfirm, handleCancel, show, message, confirmLabel, cancelLabel}) {\n    const showHideClassname = show ? 'modal display-block' : 'modal display-none';\n\n    return (\n        <div className={showHideClassname}>\n            <div className=\"swal2-container swal2-center swal2-fade swal2-shown\" style={{overflowY: 'auto'}}>\n                <div aria-labelledby=\"swal2-title\" aria-describedby=\"swal2-content\"\n                     className=\"swal2-popup swal2-modal swal2-show\" tabIndex=\"-1\" role=\"dialog\"\n                     aria-live=\"assertive\" aria-modal=\"true\" style={{display: 'flex'}}>\n                    <div className=\"swal2-header\">\n                        <ul className=\"swal2-progresssteps\" style={{display: 'none'}}/>\n                        <div className=\"swal2-icon swal2-error\" style={{display: 'none'}}>\n                                <span className=\"swal2-x-mark\">\n                                    <span className=\"swal2-x-mark-line-left\"/>\n                                    <span className=\"swal2-x-mark-line-right\"/>\n                                </span>\n                        </div>\n                        <div className=\"swal2-icon swal2-question swal2-animate-question-icon\"\n                             style={{display: 'flex'}}>\n                            <span className=\"swal2-icon-text\">?</span>\n                        </div>\n                        {/*<div className=\"swal2-icon swal2-warning\" style={{display: \"none\"}}>*/}\n                        {/*    <span className=\"swal2-icon-text\">!</span>*/}\n                        {/*</div>*/}\n                        {/*<div className=\"swal2-icon swal2-info\" style={{display: \"none\"}}>*/}\n                        {/*    <span className=\"swal2-icon-text\">i</span>*/}\n                        {/*</div>*/}\n                        {/*<div className=\"swal2-icon swal2-success\" style={{display: \"none\"}}>*/}\n                        {/*    <div className=\"swal2-success-circular-line-left\"*/}\n                        {/*         style={{backgroundColor: \"rgb(255, 255, 255)\"}}/>*/}\n                        {/*    <span className=\"swal2-success-line-tip\"/>*/}\n                        {/*    <span className=\"swal2-success-line-long\"/>*/}\n                        {/*    <div className=\"swal2-success-ring\"/>*/}\n                        {/*    <div className=\"swal2-success-fix\" style={{backgroundColor: \"rgb(255, 255, 255)\"}}/>*/}\n                        {/*    <div className=\"swal2-success-circular-line-right\"*/}\n                        {/*         style={{backgroundColor: \"rgb(255, 255, 255)\"}}/>*/}\n                        {/*</div>*/}\n                        {/*<img alt=\"\" className=\"swal2-image\" style={{display: \"none\"}}/>*/}\n                        {/*<h2 className=\"swal2-title\" id=\"swal2-title\"/>*/}\n                        {/*<button type=\"button\" className=\"swal2-close\" style={{display: \"none\"}}>×</button>*/}\n                    </div>\n                    <div className=\"swal2-content\">\n                        <div id=\"swal2-content\" style={{display: 'block'}}>\n                            {message}\n                        </div>\n                        {/*<input className=\"swal2-input\" style={{display: \"none\"}}/>*/}\n                        {/*<input type=\"file\" className=\"swal2-file\" style={{display: \"none\"}}/>*/}\n                        {/*<div className=\"swal2-range\" style={{display: \"none\"}}>*/}\n                        {/*    <input type=\"range\"/>*/}\n                        {/*</div>*/}\n                        {/*<select className=\"swal2-select\" style={{display: \"none\"}}/>*/}\n                        {/*<div className=\"swal2-radio\" style={{display: \"none\"}}/>*/}\n                        {/*<label htmlFor=\"swal2-checkbox\" className=\"swal2-checkbox\" style={{display: \"none\"}}>*/}\n                        {/*    <input type=\"checkbox\"/><span className=\"swal2-label\"/>*/}\n                        {/*</label>*/}\n                        {/*<textarea className=\"swal2-textarea\" style={{display: \"none\"}}/>*/}\n                        {/*<div className=\"swal2-validation-message\" id=\"swal2-validation-message\"*/}\n                        {/*     style={{display: \"none\"}}/>*/}\n                    </div>\n                    <div className=\"swal2-actions\" style={{display: 'flex'}}>\n                        <button type=\"button\" className=\"swal2-confirm swal2-styled\" aria-label=\"\"\n                                style={{borderLeftColor: 'rgb(48, 133, 214); border-right-color: rgb(48, 133, 214)'}}\n                                onClick={handleConfirm}\n                        >\n                            {confirmLabel ? confirmLabel : 'OK'}\n                        </button>\n                        <button type=\"button\" className=\"swal2-cancel swal2-styled\" aria-label=\"\"\n                                style={{display: 'inline-block'}}\n                                onClick={handleCancel}>\n                            {cancelLabel ? cancelLabel : 'Cancel'}\n                        </button>\n                    </div>\n                    <div className=\"swal2-footer\" style={{display: 'none'}}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ConfirmModal;\n","import React from 'react';\n\nconst Select = ({ name, label, items, error, wrapperClass, selectClass, blankItem, ...rest }) => {\n    let wrapperClassRender = 'form-group';\n    let selectClassRender = 'col-xs-10';\n    if (wrapperClass) {\n        wrapperClassRender = wrapperClass;\n    }\n    if (selectClass) {\n        selectClassRender = selectClass;\n    }\n\n    return (\n    <div className={`${wrapperClassRender} row`}>\n      {label !== '' ? (\n        <label htmlFor={name} className=\"col-sm-2 col-form-label\">\n          {label}\n        </label>\n      ) : (\n        <div/>\n      )}\n      <div className={`${selectClassRender}`}>\n        <select className={'form-control'} id={name} name={name} {...rest}>\n          {blankItem &&\n              <option key=\"\" value=\"\">\n                  Choose item...\n              </option>\n          }\n          {items.map(item => (\n            <option key={item._id} value={item._id}>\n              {item.name}\n            </option>\n          ))}\n        </select>\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Select;\n","import Select from './Select';\n\nexport default Select;\n","import Table from './Table';\n\nexport default Table;\n","import React from 'react';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { organizeRoles } from '../../utils/converters';\nimport { logout } from '../../utils/api';\nimport { uriCurrentUser, uriLogout } from '../../utils/endpoints';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from \"../../components/Root\";\n\nclass Header extends Root {\n  state = {\n    login: sessionStorage.getItem('login'),\n    username: sessionStorage.getItem('user'),\n    auths: JSON.parse(sessionStorage.getItem('auths')),\n    goBack: true\n  };\n\n  // unauthorizedGoBack = ['topic', 'node', 'tail', 'group', 'acls', 'schema'];\n  //\n  // componentDidMount() {\n  //   const url = window.location.pathname.split('/');\n  //   this.unauthorizedGoBack.forEach(el => {\n  //     if ('' === url[url.length - 1] ||  el === url[url.length - 1] || 'connect' === url[url.length - 2]) {\n  //       this.setState({ goBack: false });\n  //     }\n  //   });\n  //   this.goBack = this.goBack.bind(this);\n  // }\n\n  // goBack() {\n  //   this.props.history.goBack();\n  // }\n\n  async logout() {\n    await logout(uriLogout());\n    await this.getApi(uriCurrentUser()).then(res => {\n      let currentUserData = res.data;\n      sessionStorage.setItem('login', currentUserData.logged);\n      sessionStorage.setItem('user', 'default');\n      sessionStorage.setItem('roles', organizeRoles(currentUserData.roles));\n      this.setState({ login: currentUserData.logged }, () => {\n        this.props.history.replace({\n          pathname: '/ui/login',\n          ...this.props.history\n        });\n        window.location.reload(false);\n        toast.success('Logged out successfully');\n      });\n    });\n  }\n\n  _renderLogin() {\n    const { login, username, auths } = this.state;\n    if(auths && auths.loginEnabled) {\n        return (login === 'false' || !login ? (\n            <Link to=\"/ui/login\">\n              <button className=\"btn btn-primary\">\n                {' '}\n                <i className=\"fa fa-fw fa-sign-in\" aria-hidden=\"true\"/>\n                Login\n              </button>\n            </Link>\n        ) : (\n            <Link to=\"#\">\n              <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    this.logout();\n                  }}\n              >\n                {' '}\n                <i className=\"fa fa-fw fa-sign-in\" aria-hidden=\"true\"/>\n                {username} (Logout)\n              </button>\n            </Link>\n        ));\n    } else if (auths && username) {\n      return ( <button\n          className=\"btn btn-primary\"\n          disabled\n      >\n        {' '}\n        <i className=\"fa fa-fw fa-sign-in\" aria-hidden=\"true\"/>\n        {username}\n      </button>);\n    } else {\n      return (<></>);\n    }\n  }\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <React.Fragment>\n        <div\n          className=\"title\"\n          style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n        >\n          {' '}\n          <h1>{title}</h1>{' '}\n          <div>\n            {this._renderLogin()}\n            {children}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import Header from './Header';\n\nexport default Header;\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\n\nconst Input = props => {\n  const { name, label, placeholder, error, noStyle, wrapperClass, inputClass, ...rest } = props;\n  let wrapperClassRender = 'form-group';\n  let inputClassRender = 'col-sm-10';\n  if (noStyle) {\n    wrapperClassRender = '';\n    inputClassRender = '';\n  }\n  if (wrapperClass) {\n    wrapperClassRender = wrapperClass;\n  }\n  if (inputClass) {\n    inputClassRender = inputClass;\n  }\n\n  return (\n    <div className={`${wrapperClassRender} row`}>\n      {label !== '' ? (\n        <label htmlFor={name} className=\"col-sm-2 col-form-label\">\n          {label}\n        </label>\n      ) : (\n        <div/>\n      )}\n      <div className={`${inputClassRender}`}>\n        <input\n          {...rest}\n          key={name}\n          name={name}\n          id={name}\n          className=\"form-control\"\n          placeholder={placeholder}\n        />\n\n        {error && (\n          <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n            {error}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import RadioGroup from './RadioGroup';\n\nexport default RadioGroup;\n","import React, { Component } from 'react';\n\nclass RadioGroup extends Component {\n  renderOptions = (name, items, handleChange) => {\n    let renderedItems = [];\n    for (let item of items) {\n      renderedItems.push(\n        <div id={`radio-option-${name}`} key={item.value} className=\"form-check\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            name={item.name}\n            id={item.value}\n            value={item.value}\n            defaultChecked={item.checked}\n            onChange={() => handleChange(item.value)}\n          />\n          <label className=\"form-check-label\" htmlFor={item.name}>\n            {item.label}\n          </label>\n        </div>\n      );\n    }\n\n    return renderedItems;\n  };\n\n  render() {\n    const { name, label, items, handleChange } = this.props;\n\n    return (\n      <fieldset name={name} className=\"form-group\">\n        <div id={`radio-${name}`} className=\"row\">\n          <legend className=\"col-form-label col-sm-2 pt-0\">{label}</legend>\n          <div id={`radio-options-${name}`} className=\"col-sm-10\">\n            {this.renderOptions(name, items, handleChange)}\n          </div>\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nexport default RadioGroup;\n","import React from 'react';\n\nimport Joi from 'joi-browser';\nimport _ from 'lodash';\n\nimport Input from './Input';\nimport Select from './Select';\nimport RadioGroup from './RadioGroup';\nimport DatePicker from '../DatePicker';\nimport AceEditor from 'react-ace';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport Root from '../Root';\n\nclass Form extends Root {\n  state = {\n    formData: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const { error } = Joi.validate(this.state.formData, this.schema);\n\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) {\n      errors[item.path[0]] = item.message;\n    }\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) {\n      errors[input.name] = errorMessage;\n    } else {\n      delete errors[input.name];\n    }\n\n    const { formData } = this.state;\n    formData[input.name] = input.value;\n    this.setState({ formData, errors });\n  };\n\n  renderButton = (label, click, className, type, children) => {\n    return (\n      <div className=\"khq-submit button-footer\" style={{ marginRight: 0 }}>\n        <aside>\n          {children}\n          <button\n            type={type ? type : 'button'}\n            className={className ? className : 'btn btn-primary'}\n            disabled={this.validate()}\n            onClick={click}\n          >\n            {label}\n          </button>\n        </aside>\n      </div>\n    );\n  };\n\n  renderInput = (\n    name,\n    label,\n    placeholder,\n    type = 'text',\n    onChange = this.handleChange,\n    noStyle,\n    wrapperClass,\n    inputClass,\n    rest\n  ) => {\n    const { formData, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        id={name}\n        value={formData[name] || ''}\n        label={label}\n        placeholder={placeholder}\n        onChange={this.handleChange}\n        error={errors[name]}\n        noStyle={noStyle}\n        wrapperClass={wrapperClass}\n        inputClass={inputClass}\n        {...rest}\n      />\n    );\n  };\n\n  renderJSONInput = (name, label, onChange, textMode, options, rest) => {\n    const { formData, errors } = this.state;\n    const inputMode = textMode ? \"text\" : (formData.schemaType === \"PROTOBUF\" ? \"protobuf\"  : \"json\")\n    return (\n      <div className=\"form-group row\">\n        {label !== '' ? (\n          <label htmlFor={name} className=\"col-sm-2 col-form-label\">\n            {label}\n          </label>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"col-sm-10\" style={{ height: '100%' }}>\n          <AceEditor\n            mode={ inputMode }\n            id={name}\n            theme=\"merbivore_soft\"\n            value={formData[name]}\n            onChange={value => {\n              onChange(value);\n            }}\n            name=\"UNIQUE_ID_OF_DIV\"\n            editorProps={{ $blockScrolling: true }}\n            setOptions={options}\n            style={{ width: '100%', minHeight: '25vh' }}\n            {...rest}\n          />\n          {errors[name] && <div className=\"alert alert-danger mt-1 p-1\">{errors[name]}</div>}\n        </div>\n      </div>\n    );\n  };\n\n  renderSelect = (name, label, items, onChange, selectClass, wrapperClass, blankItem, rest) => {\n    const { formData, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={formData[name]}\n        label={label}\n        items={items}\n        error={errors[name]}\n        onChange={value => {\n          onChange(value);\n        }}\n        selectClass={selectClass}\n        wrapperClass={wrapperClass}\n        blankItem={blankItem}\n        {...rest}\n      />\n    );\n  };\n\n  renderDatePicker = (name, label, onChange) => {\n    const { formData, errors } = this.state;\n\n    return (\n      <DatePicker\n        name={name}\n        label={label}\n        error={errors[name]}\n        value={formData[name]}\n        onChange={value => {\n          onChange(value);\n        }}\n      />\n    );\n  };\n\n  renderRadioGroup = (name, label, options, onChange) => {\n    const { formData } = this.state;\n    const items = [];\n\n    for (let option of options) {\n      const value = _.camelCase(option.toString());\n\n      items[items.length] = {\n        name: name,\n        label: option,\n        value: value,\n        checked: value === formData[name]\n      };\n    }\n\n    return <RadioGroup name={name} label={label} items={items} handleChange={onChange} />;\n  };\n\n  renderDropdown = (name, options, searchValue, selectedKeySchema, onChange, renderResults) => {\n    return (\n      <React.Fragment>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2\">{name}</label>\n          <div className=\"col-sm-10\">\n            <Dropdown className=\"form-group dropdown bootstrap-select show-tick khq-select show\">\n              <Dropdown.Toggle className=\"btn dropdown-toggle btn-white\">\n                <input\n                  type=\"text\"\n                  name=\"searchValue\"\n                  className=\"form-control placeholder\"\n                  placeholder={name}\n                  value={selectedKeySchema}\n                />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <div className=\"bs-searchbox input-group\">\n                  <input\n                    type=\"text\"\n                    name=\"searchValue\"\n                    className=\"form-control col-sm-9 mr-2\"\n                    autoComplete=\"off\"\n                    role=\"combobox\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Search\"\n                    aria-controls=\"bs-select-1\"\n                    aria-autocomplete=\"list\"\n                    placeholder={'search'}\n                    onChange={onChange}\n                    value={searchValue}\n                  />\n                </div>\n                {renderResults}\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  renderCheckbox = (name, label, isChecked, onChange, isDefaultChecked, rest) => {\n    return (\n        <input\n        type=\"checkbox\"\n        name={name}\n        id={name}\n        class=\"form-input-check\"\n        checked={isChecked}\n        onChange={onChange}\n        defaultChecked={ isDefaultChecked ? isDefaultChecked : false}\n        {...rest}\n        />\n    );\n  };\n}\n\nexport default Form;\n\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport PropTypes from 'prop-types';\nimport Form from '../Form/Form';\nimport { SETTINGS_VALUES } from '../../utils/constants';\nimport './styles.scss';\n\nclass SearchBar extends Form {\n  static propTypes = {\n    showPagination: PropTypes.bool,\n    showTopicListView: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    showFilters: PropTypes.string,\n    showKeepSearch: PropTypes.bool\n  };\n  state = {\n    formData: {},\n    errors: {},\n    topicListViewOptions: [\n      {\n        _id: SETTINGS_VALUES.TOPIC.TOPIC_DEFAULT_VIEW.ALL,\n        name: 'Show all topics'\n      },\n      {\n        _id: SETTINGS_VALUES.TOPIC.TOPIC_DEFAULT_VIEW.HIDE_INTERNAL,\n        name: 'Hide internal topics'\n      },\n      {\n        _id: SETTINGS_VALUES.TOPIC.TOPIC_DEFAULT_VIEW.HIDE_INTERNAL_STREAM,\n        name: 'Hide internal & stream topics'\n      },\n      {\n        _id: SETTINGS_VALUES.TOPIC.TOPIC_DEFAULT_VIEW.HIDE_STREAM,\n        name: 'Hide stream topics'\n      }\n    ]\n  };\n\n  schema = {};\n\n  componentDidMount() {\n    this.setState({ formData: this.setupProps() });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { search, topicListView, keepSearch } = this.props;\n\n    if(search !== prevProps.search || topicListView !== prevProps.topicListView || keepSearch !== prevProps.keepSearch) {\n      this.setupProps();\n    }\n  }\n\n  setupProps() {\n    const { showSearch, showTopicListView, showKeepSearch } = this.props;\n    const { formData } = this.state;\n    if (showSearch) {\n      const { search } = this.props;\n      formData['search'] = search;\n      this.schema['search'] = Joi.string().allow('');\n    }\n    if (showTopicListView) {\n      const { topicListView } = this.props;\n      formData['topicListView'] = topicListView;\n      this.schema['topicListView'] = Joi.string().required();\n    }\n    if(showKeepSearch) {\n      formData['keepSearch'] = this.props.keepSearch;\n      this.schema['keepSearch'] = Joi.boolean();\n    }\n    return formData;\n  }\n\n  setValue(value) {\n    this.setState({ value }, () => {\n      this.props.onChangeValue(value);\n    });\n  }\n\n  setTopic(topic) {\n    this.setState({ topic }, () => {\n      this.props.onChangeTopic(topic);\n    });\n  }\n\n  doSubmit = () => {\n    const { pagination, search, topicListView, keepSearch } = this.state.formData;\n    const data = {\n      pagination: pagination,\n      searchData: {\n        search: search,\n        topicListView: topicListView\n      },\n      keepSearch: keepSearch\n    };\n    this.props.doSubmit(data);\n  };\n  openAndCloseFilters() {\n    let { showFilters } = this.state;\n    if (showFilters === 'show') {\n      this.setState({ showFilters: '' });\n    } else {\n      this.setState({ showFilters: 'show' });\n    }\n  }\n\n  render() {\n    const { showSearch, showTopicListView, showKeepSearch } = this.props;\n    const { topicListViewOptions, showFilters, formData } = this.state;\n\n    return (\n      <React.Fragment>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbar-search\"\n          aria-controls=\"navbar-search\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={() => {\n            this.openAndCloseFilters();\n          }}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`collapse navbar-collapse ${showFilters}`} id=\"navbar-search\">\n          <form className=\"form-inline mr-auto khq-form-get\" onSubmit={e => this.handleSubmit(e)}>\n            {showSearch &&\n              this.renderInput(\n                'search',\n                '',\n                'Search',\n                'text',\n                { autoComplete: 'off' },\n                '',\n                'topic-search-wrapper',\n                'topic-search-input'\n              )}\n            {showTopicListView &&\n              this.renderSelect(\n                'topicListView',\n                '',\n                topicListViewOptions,\n                ({ currentTarget: input }) => {\n                  let { formData } = this.state;\n                  formData.topicListView = input.value;\n                  this.setState();\n                  this.props.onTopicListViewChange(input.value);\n                },\n                '',\n                'select-wrapper',\n                { className: 'form-control topic-select' }\n              )}\n\n            <button className=\"btn btn-primary\" type=\"submit\">\n              <span className=\"d-md-none\">Search </span>\n              <i className=\"fa fa-search\" />\n            </button>\n            {showKeepSearch && <span><input\n                type=\"checkbox\"\n                name=\"keepSearch\"\n                id=\"keepSearch\"\n                onClick={(event) => this.props.onKeepSearchChange(event.target.checked)}\n                defaultChecked={formData['keepSearch']}\n              /> Keep search\n            </span>}\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SearchBar;\n","import SearchBar from './SearchBar';\n\nexport default SearchBar;\n","import Pagination from './Pagination';\n\nexport default Pagination;\n","\nexport const handlePageChange = ({ currentTarget: input, state }) => {\n    const { value } = input;\n    state.pageNumber = value;\n};\n\nexport const getPageNumber = (value, totalPageNumber) => {\n    if (value <= 0) {\n        value = 1;\n    } else if (value > totalPageNumber) {\n        value = totalPageNumber;\n    }\n    return value;\n};\n\nexport default {handlePageChange, getPageNumber};\n","import PageSize from './PageSize';\n\nexport default PageSize;\n","import React from 'react';\nimport './styles.scss';\n\nconst PageSize = ({\n  pageNumber,\n  totalPageNumber,\n  currentPageSize,\n  totalRecords,\n  ranges = [10, 25, 50, 100, 150, 200],\n  onChange,\n  editPageNumber,\n  showTotalPageNumber = true\n}) => {\n    var pageSizeOptions = [];\n    var pageSizeOptionsList = [];\n    ranges.forEach(element => pageSizeOptions[element] = element );\n    //if server's pageSize does not belong to ranges, it should be added - when the page is loaded for the first\n    if(!ranges.includes(currentPageSize)){\n      pageSizeOptions[currentPageSize] = currentPageSize;\n    }\n    pageSizeOptions.forEach((k) => {\n        pageSizeOptionsList.push(<option key={k} value={k}>{pageSizeOptions[k]}</option>);\n    })\n  return (\n    <div id=\"result-per-page\">\n        <span>Results</span>\n        <select className=\"pagination mb-0\" id=\"currentPageSize\" name=\"currentPageSize\" value={currentPageSize} onChange={(e) => {e.preventDefault(); onChange(pageSizeOptions[e.target.value])}}>\n          {pageSizeOptionsList}\n        </select>\n      </div>\n  );\n};\n\nexport default PageSize;","import TopicList from './TopicList';\n\nexport default TopicList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Table from '../../../components/Table';\nimport Header from '../../Header';\nimport SearchBar from '../../../components/SearchBar';\nimport Pagination from '../../../components/Pagination';\nimport ConfirmModal from '../../../components/Modal/ConfirmModal';\nimport {uriConsumerGroupByTopics, uriDeleteTopics, uriTopicLastRecord, uriTopics} from '../../../utils/endpoints';\nimport constants from '../../../utils/constants';\nimport {calculateTopicOffsetLag, showBytes} from '../../../utils/converters';\nimport './styles.scss';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Collapse} from 'react-bootstrap';\nimport Root from '../../../components/Root';\nimport DateTime from '../../../components/DateTime';\nimport {getClusterUIOptions} from '../../../utils/functions';\nimport {handlePageChange, getPageNumber} from './../../../utils/pagination';\nimport PageSize from '../../../components/PageSize';\n\nclass TopicList extends Root {\n  state = {\n    topics: [],\n    showDeleteModal: false,\n    topicToDelete: {},\n    selectedCluster: '',\n    deleteMessage: '',\n    deleteData: {},\n    pageNumber: 1,\n    totalPageNumber: 1,\n    currentPageSize: 1,\n    searchData: {\n      search: '',\n      topicListView: constants.SETTINGS_VALUES.TOPIC.TOPIC_DEFAULT_VIEW.HIDE_INTERNAL\n    },\n    keepSearch: false,\n    createTopicFormData: {\n      name: '',\n      partition: 1,\n      replication: 1,\n      cleanup: 'delete',\n      retention: 86400000\n    },\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true,\n    cancel: undefined,\n    collapseConsumerGroups: {},\n    uiOptions: {}\n  };\n\n  componentDidMount() {\n   this._initializeVars(() => {\n     this.getTopics();\n     this.props.history.replace({\n       pathname: `/ui/${this.state.selectedCluster}/topic`,\n       search: this.props.location.search\n     })});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.cancelAxiosRequests();\n      this.renewCancelToken();\n\n      this.setState({ pageNumber: 1 }, () => {\n        this._initializeVars(this.getTopics);\n      });\n    }\n  }\n\n  async _initializeVars(callBackFunction) {\n    const { clusterId } = this.props.match.params;\n    const query =  new URLSearchParams(this.props.location.search);\n    const {searchData, keepSearch} = this.state;\n    let { pageNumber } = this.state;\n    let { currentPageSize } = this.state;\n    const uiOptions = await getClusterUIOptions(clusterId)\n\n    let searchDataTmp;\n    let keepSearchTmp = keepSearch;\n    const topicListSearch = localStorage.getItem('topicListSearch');\n    if(topicListSearch) {\n      searchDataTmp = JSON.parse(topicListSearch);\n      keepSearchTmp = true;\n    } else {\n      searchDataTmp = {\n        search: (query.get('search'))? query.get('search') : searchData.search,\n        topicListView: (query.get('topicListView'))? query.get('topicListView') :\n            (uiOptions && uiOptions.topic && uiOptions.topic.defaultView)? uiOptions.topic.defaultView : searchData.topicListView,\n      }\n      pageNumber = (query.get('page'))? parseInt(query.get('page')) : parseInt(pageNumber)\n      currentPageSize = (query.get('uiPageSize'))? parseInt(query.get('uiPageSize')) : parseInt(currentPageSize)\n    }\n\n    this.setState({\n      selectedCluster: clusterId, \n      searchData: searchDataTmp,\n      keepSearch: keepSearchTmp,\n      uiOptions: uiOptions ?? {},\n      pageNumber: pageNumber,\n      currentPageSize: currentPageSize\n    }, callBackFunction);\n  }\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  deleteTopic = () => {\n    const { selectedCluster, topicToDelete } = this.state;\n\n    this.removeApi(uriDeleteTopics(selectedCluster, topicToDelete.id))\n      .then(() => {\n        toast.success(`Topic '${topicToDelete.name}' is deleted`);\n        this.setState({ showDeleteModal: false, topicToDelete: {} }, () => this.getTopics());\n      })\n      .catch(() => {\n        this.setState({ showDeleteModal: false, topicToDelete: {} }, () => this.getTopics());\n      });\n  };\n\n  handleOnDelete(topic) {\n    this.setState({ topicToDelete: topic }, () => {\n      this.showDeleteModal(\n        <React.Fragment>Do you want to delete topic: {<code>{topic.id}</code>} ?</React.Fragment>\n      );\n    });\n  }\n\n  handleSearch = data => {\n    const { searchData } = data;\n\n    this.setState({ pageNumber: 1, searchData }, () => {\n      this.getTopics();\n      this.handleKeepSearchChange(data.keepSearch);\n      this.props.history.push({\n        pathname: `/ui/${this.state.selectedCluster}/topic`,\n        search: `search=${searchData.search}&topicListView=${this.state.searchData.topicListView}&page=${this.state.pageNumber}`\n      });\n\n    });\n  };\n\n  handlePageChangeSubmission = value => {\n    let pageNumber = getPageNumber(value, this.state.totalPageNumber);\n\n    this.setState({ pageNumber: pageNumber }, () => {\n      this.getTopics();\n      this.props.history.push({\n        pathname: `/ui/${this.state.selectedCluster}/topic`,\n        search: `search=${this.state.searchData.search}&topicListView=${this.state.searchData.topicListView}&page=${pageNumber}`\n      });\n    });\n  };\n\n  handlePageSizeChangeSubmission = value => {\n    let pageNumber = 1;\n    this.setState({ currentPageSize: value, pageNumber: pageNumber},() => {\n      this.getTopics();\n      this.props.history.push({\n        pathname: `/ui/${this.state.selectedCluster}/topic`,\n        search: `search=${this.state.searchData.search}&topicListView=${this.state.searchData.topicListView}&uiPageSize=${value}`\n      });\n    });\n  };\n\n  async getTopics() {\n    const { selectedCluster, pageNumber, currentPageSize } = this.state;\n    const { search, topicListView } = this.state.searchData;\n    this.setState({ loading: true } );\n\n    let response = await this.getApi(uriTopics(selectedCluster, search, topicListView, pageNumber, currentPageSize));\n    let data = response.data;\n\n    if (data) {\n      if (data.results) {\n        this.handleTopics(data.results);\n      } else {\n        this.setState({ topics: [] });\n      }\n      this.setState({ selectedCluster, totalPageNumber: data.page, currentPageSize: data.pageSize, loading: false }  )\n    } else {\n      this.setState({ topics: [], loading: false, totalPageNumber: 0});\n    }\n  }\n\n  handleTopics(topics) {\n    let tableTopics = {};\n    const collapseConsumerGroups = {};\n\n    const { selectedCluster, uiOptions } = this.state;\n    const uiOptionsTopic = uiOptions.topic ?? {};\n\n    const setState = () =>  {\n      this.setState({ topics: Object.values(tableTopics) });\n    }\n\n    topics.forEach(topic => {\n      tableTopics[topic.name] = {\n        id: topic.name,\n        name: topic.name,\n        count: topic.size,\n        lastWrite: undefined,\n        size: showBytes(topic.logDirSize),\n        partitionsTotal: topic.partitions.length,\n        replicationFactor: topic.replicaCount,\n        replicationInSync: topic.inSyncReplicaCount,\n        groupComponent: undefined,\n        internal: topic.internal\n      }\n      collapseConsumerGroups[topic.name] = (uiOptionsTopic.showAllConsumerGroups)  ? true : false;\n    });\n    this.setState({collapseConsumerGroups});\n    setState()\n\n    const topicsName = topics.map(topic => topic.name).join(\",\");\n\n    if(!uiOptionsTopic.skipConsumerGroups) {\n      this.getApi(uriConsumerGroupByTopics(selectedCluster, encodeURIComponent(topicsName)))\n          .then(value => {\n            topics.forEach(topic => {\n              tableTopics[topic.name].groupComponent = (value && value.data) ? value.data.filter(consumerGroup =>\n                  (consumerGroup.activeTopics && consumerGroup.activeTopics.includes(topic.name))\n                  || (consumerGroup.topics && consumerGroup.topics.includes(topic.name))) : [];\n            });\n            setState();\n          });\n    }\n\n    if(!uiOptionsTopic.skipLastRecord) {\n      this.getApi(uriTopicLastRecord(selectedCluster, encodeURIComponent(topicsName)))\n          .then(value => {\n            topics.forEach((topic) => {\n              tableTopics[topic.name].lastWrite = value.data[topic.name] ? value.data[topic.name].timestamp : ''\n            });\n            setState();\n          });\n    }\n  }\n\n\n\n  handleConsumerGroups = (consumerGroups, topicId) => {\n    if (consumerGroups && consumerGroups.length > 0) {\n      return consumerGroups.map(consumerGroup => {\n        let className = 'btn btn-sm mb-1 mr-1 btn-';\n        let offsetLag = calculateTopicOffsetLag(consumerGroup.offsets, topicId);\n\n          const activeTopic = consumerGroup.activeTopics && consumerGroup.activeTopics.find(\n              activeTopic => activeTopic === topicId\n          );\n          activeTopic ? (className += 'success') : (className += 'warning');\n\n          const noPropagation = e => e.stopPropagation();\n\n          return (\n            <Link\n              key={consumerGroup.id}\n              to={`/ui/${this.state.selectedCluster}/group/${encodeURIComponent(consumerGroup.id)}`}\n              className={className}\n              onClick={noPropagation}\n            >\n              {consumerGroup.id} <div className=\"badge badge-secondary\"> Lag: {Number(offsetLag).toLocaleString()}</div>\n            </Link>\n          );\n      });\n    }\n\n    return '';\n  };\n\n\n  handleCollapseConsumerGroups(id) {\n    const tmpGroups = {};\n\n    Object.keys(this.state.collapseConsumerGroups).forEach(key => {\n      tmpGroups[key] = (key === id)?  !this.state.collapseConsumerGroups[key] : this.state.collapseConsumerGroups[key];\n     });\n     this.setState({collapseConsumerGroups : tmpGroups});\n   }\n\n  handleKeepSearchChange(value){\n    const { searchData } = this.state;\n    if(value) {\n      localStorage.setItem('topicListSearch', JSON.stringify(searchData));\n    } else {\n      localStorage.removeItem('topicListSearch');\n    }\n\n  }\n\n  render() {\n    const { topics, selectedCluster, searchData, pageNumber, totalPageNumber, currentPageSize, loading, collapseConsumerGroups, keepSearch, uiOptions } = this.state;\n    const uiOptionsTopic = uiOptions.topic ?? {};\n    const dateTimeFormat = uiOptions.topicData && uiOptions.topicData.dateTimeFormat ?\n      uiOptions.topicData.dateTimeFormat :\n      constants.SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.RELATIVE;\n    const roles = this.state.roles || {};\n    const { clusterId } = this.props.match.params;\n    \n\n    const topicCols =\n        [\n          {\n            id: 'name',\n            accessor: 'name',\n            colName: 'Name',\n            type: 'text'\n          },\n          {\n            id: 'count',\n            accessor: 'count',\n            colName: 'Count',\n            type: 'text',\n            cell: (obj, col) => {\n              return <span className=\"text-nowrap\">≈ {obj[col.accessor]}</span>;\n            }\n          },\n          {\n            id: 'size',\n            accessor: 'size',\n            colName: 'Size',\n            type: 'text'\n          }\n        ];\n\n    if(!uiOptionsTopic.skipLastRecord) {\n        topicCols.push({\n          id: 'lastWrite',\n          accessor: 'lastWrite',\n          colName: 'Last Record',\n          type: 'text',\n          cell: (obj, col) => {\n            return obj[col.accessor] ?\n              <DateTime isoDateTimeString={obj[col.accessor]} dateTimeFormat={dateTimeFormat} /> :\n              '';\n          }\n        });\n    }\n\n    const partitionCols =\n        [\n          {\n            id: 'partitionsTotal',\n            accessor: 'partitionsTotal',\n            colName: 'Total',\n            type: 'text'\n          }];\n    const replicationCols =\n         [\n          {\n            id: 'replicationFactor',\n            accessor: 'replicationFactor',\n            colName: 'Factor',\n            type: 'text'\n          },\n          {\n            id: 'replicationInSync',\n            accessor: 'replicationInSync',\n            colName: 'In Sync',\n            type: 'text',\n            cell: (obj, col) => {\n              return <span>{obj[col.accessor]}</span>;\n            }\n          }];\n\n    const consumerGprCols =\n        [\n          {\n            id: 'groupComponent',\n            accessor: 'groupComponent.id',\n            colName: 'Consumer Groups',\n            type: 'text',\n            cell: obj => {\n              if (obj.groupComponent && obj.groupComponent.length > 0) {\n                const consumerGroups = this.handleConsumerGroups(obj.groupComponent, obj.id);\n                let i = 0;\n                return (\n                    <>\n                      {consumerGroups[0]}\n                      {consumerGroups.length > 1 &&\n                      <span>\n                                  <span\n                                      onClick={() => this.handleCollapseConsumerGroups(obj.id)}\n                                      aria-expanded={collapseConsumerGroups[obj.id]}\n                                  >\n                                    {collapseConsumerGroups[obj.id] && <i className=\"fa fa-fw fa-chevron-up\"/>}\n                                    {!collapseConsumerGroups[obj.id] && <i className=\"fa fa-fw fa-chevron-down\"/>}\n                                  </span>\n                                  <span className=\"badge badge-secondary\">{consumerGroups.length}</span>\n                                  <Collapse in={collapseConsumerGroups[obj.id]}>\n                                    <div>\n                                      {consumerGroups.splice(1, consumerGroups.length).map(group => {\n                                        return (<div key={i++}>{group}</div>);\n                                      })}\n                                    </div>\n                                  </Collapse>\n                                </span>\n                      }\n                    </>\n                );\n              } else if (obj.groupComponent) {\n                return <div className=\"empty-consumergroups\"/>\n              }\n            }\n          }\n        ]\n\n    const firstColumns = [\n      {colName: 'Topics', colSpan: topicCols.length},\n      {colName: 'Partitions', colSpan: partitionCols.length},\n      {colName: 'Replications', colSpan: replicationCols.length}\n    ];\n\n    if(!uiOptionsTopic.skipConsumerGroups) {\n      firstColumns.push({colName: 'Consumer Groups', colSpan: 1});\n    }\n\n    let onDetailsFunction = undefined;\n    const actions = [constants.TABLE_CONFIG];\n    if(roles.topic && roles.topic['topic/data/read']) {\n      actions.push(constants.TABLE_DETAILS);\n      onDetailsFunction = (id) => `/ui/${selectedCluster}/topic/${id}/data`;\n    }\n    if(roles.topic && roles.topic['topic/delete']) {\n      actions.push(constants.TABLE_DELETE);\n    }\n\n    return (\n      <div>\n        <Header title=\"Topics\" history={this.props.history} />\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\n        bg-light mr-auto khq-data-filter khq-sticky khq-nav\"\n        >\n          <SearchBar\n            showSearch={true}\n            search={searchData.search}\n            showPagination={true}\n            pagination={pageNumber}\n            showTopicListView={true}\n            topicListView={searchData.topicListView}\n            showKeepSearch={true}\n            keepSearch={keepSearch}\n            onTopicListViewChange={value => {\n              let { searchData } = { ...this.state };\n              searchData.topicListView = value;\n              this.setState(searchData);\n            }}\n            onKeepSearchChange={value => {\n                this.handleKeepSearchChange(value);\n              }}\n              doSubmit={this.handleSearch}\n          />\n\n          <PageSize\n            pageNumber={pageNumber}\n            totalPageNumber={totalPageNumber}\n            currentPageSize={this.state.currentPageSize}\n            onChange={this.handlePageSizeChangeSubmission}\n          />\n          \n          <Pagination\n            pageNumber={pageNumber}\n            totalPageNumber={totalPageNumber}\n            currentPageSize={currentPageSize}\n            onChange={handlePageChange}\n            onSubmit={this.handlePageChangeSubmission}\n          />\n        </nav>\n\n        <Table\n          loading={loading}\n          history={this.props.history}\n          has2Headers\n          firstHeader={firstColumns}\n          columns={topicCols.concat(partitionCols, replicationCols, (uiOptionsTopic.skipConsumerGroups)?[]: consumerGprCols)}\n          data={topics}\n          updateData={data => {\n            this.setState({ topics: data });\n          }}\n          onDelete={topic => {\n            this.handleOnDelete(topic);\n          }}\n          onDetails={onDetailsFunction}\n          onConfig={(id) => `/ui/${selectedCluster}/topic/${id}/configs`}\n          actions={actions}\n        />\n\n        {roles.topic['topic/insert'] && (\n          <aside>\n            <Link\n              to={{\n                pathname: `/ui/${clusterId}/topic/create`,\n                state: { formData: this.state.createTopicFormData }\n              }}\n              className=\"btn btn-primary\"\n            >\n              Create a topic\n            </Link>\n          </aside>\n        )}\n\n        <ConfirmModal\n          show={this.state.showDeleteModal}\n          handleCancel={this.closeDeleteModal}\n          handleConfirm={this.deleteTopic}\n          message={this.state.deleteMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopicList;\n","import TopicData from './TopicData';\n\nexport default TopicData;\n","import TopicPartitions from './TopicPartitions';\n\nexport default TopicPartitions;\n","import React from 'react';\nimport { uriTopicsPartitions } from '../../../../utils/endpoints';\nimport Table from '../../../../components/Table';\nimport converters from '../../../../utils/converters';\nimport Root from \"../../../../components/Root\";\n\nclass TopicPartitions extends Root {\n  state = {\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedTopic: this.props.topic,\n    loading: true\n  };\n  componentDidMount() {\n    this.getTopicsPartitions();\n  }\n\n  async getTopicsPartitions() {\n    const { selectedCluster, selectedTopic } = this.state;\n\n    let partitions = await this.getApi(uriTopicsPartitions(selectedCluster, selectedTopic));\n    this.handleData(partitions.data);\n  }\n\n  handleData(partitions) {\n    let tablePartitions = partitions.map(partition => {\n      return {\n        id: partition.id,\n        leader: partition.leader.id,\n        replicas: partition.nodes,\n        offsets: (\n          <label>\n            {partition.firstOffset} ⤑ {partition.lastOffset}\n          </label>\n        ),\n        size: partition\n      };\n    });\n    this.setState({ data: tablePartitions, loading: false });\n  }\n\n  handleLeader(leader) {\n    return <span className=\"badge badge-primary\"> {leader}</span>;\n  }\n\n  handleReplicas(replicas) {\n    return replicas.map(replica => {\n      return (\n        <span\n          key={replica.id}\n          className={replica.inSyncReplicas ? 'badge badge-success' : 'badge badge-danger'}\n        >\n          {' '}\n          {replica.id}\n        </span>\n      );\n    });\n  }\n\n  handleSize(size) {\n    return (\n      <label>\n        {size.lastOffset - size.firstOffset} - {converters.showBytes(size.logDirSize, 0)}\n      </label>\n    );\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'leader',\n              accessor: 'leader',\n              colName: 'Leader',\n              type: 'text',\n              cell: (obj, col) => {\n                return this.handleLeader(obj[col.accessor]);\n              }\n            },\n            {\n              id: 'replicas',\n              accessor: 'replicas',\n              colName: 'Replicas',\n              type: 'text',\n              cell: (obj, col) => {\n                return this.handleReplicas(obj[col.accessor]);\n              }\n            },\n            {\n              id: 'offsets',\n              accessor: 'offsets',\n              colName: 'Offsets',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'size',\n              accessor: 'size',\n              colName: 'Size',\n              type: 'text',\n              cell: (obj, col) => {\n                return this.handleSize(obj[col.accessor]);\n              }\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopicPartitions;\n","import TopicGroups from './TopicGroups';\n\nexport default TopicGroups;\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport { uriTopicsGroups } from '../../../../utils/endpoints';\nimport constants from '../../../../utils/constants';\nimport Root from \"../../../../components/Root\";\nimport {Link} from \"react-router-dom\";\n\nclass TopicGroups extends Root {\n  state = {\n    consumerGroups: [],\n    topicId: this.props.topicId,\n    showDeleteModal: false,\n    selectedCluster: this.props.clusterId,\n    deleteMessage: '',\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getConsumerGroup();\n  }\n\n  async getConsumerGroup() {\n    const { selectedCluster, topicId } = this.state;\n\n    let data  = await this.getApi(uriTopicsGroups(selectedCluster, topicId));\n    if (data && data.data) {\n      this.handleGroups(data.data);\n    } else {\n      this.setState({ consumerGroup: [], loading: false });\n    }\n  }\n\n  handleGroups(consumerGroups) {\n    let tableConsumerGroups =\n      consumerGroups.map(consumerGroup => {\n        return {\n          id: consumerGroup.id,\n          state: consumerGroup.state,\n          coordinator: consumerGroup.coordinator.id,\n          members: consumerGroup.members ? consumerGroup.members.length : 0,\n          topics: this.groupTopics(consumerGroup.offsets)\n        };\n      }) || [];\n    this.setState({ consumerGroups: tableConsumerGroups, loading: false });\n  }\n\n  groupTopics(topics) {\n    if (!topics) return {};\n    return topics.reduce(function(a, e) {\n      let key = e.topic;\n      a[key] ? (a[key] = a[key] + e.offsetLag) : (a[key] = e.offsetLag || 0);\n      return a;\n    }, {});\n  }\n\n  handleState(state) {\n    return (\n      <span className={state === 'STABLE' ? 'badge badge-success' : 'badge badge-warning'}>\n        {state}\n      </span>\n    );\n  }\n\n  handleCoordinator(coordinator) {\n    return <span className=\"badge badge-primary\"> {coordinator}</span>;\n  }\n\n  handleTopics(topics) {\n    const noPropagation = e => e.stopPropagation();\n    return Object.keys(topics).map(topic => {\n      return (\n        <Link\n          to={`/ui/${this.state.selectedCluster}/topic/${topic}`}\n          key=\"lagTopic.topicId\"\n          className=\"btn btn-dark btn-sm mb-1 mr-1\"\n          onClick={noPropagation}\n        >\n          {topic}\n          <div className=\"badge badge-secondary\">Lag: {Number(topics[topic]).toLocaleString()}</div>\n        </Link>\n      );\n    });\n  }\n\n  render() {\n    const { selectedCluster, loading } = this.state;\n\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id',\n              sortable: true\n            },\n            {\n              id: 'state',\n              accessor: 'state',\n              colName: 'State',\n              cell: obj => {\n                return this.handleState(obj.state);\n              }\n            },\n            {\n              id: 'coordinator',\n              accessor: 'coordinator',\n              colName: 'Coordinator',\n              cell: obj => {\n                return this.handleCoordinator(obj.coordinator);\n              }\n            },\n            {\n              id: 'members',\n              accessor: 'members',\n              colName: 'Members',\n              sortable: true\n            },\n            {\n              id: 'topics',\n              accessor: 'topics',\n              colName: 'Topics',\n              cell: obj => {\n                if (obj.topics) {\n                  return this.handleTopics(obj.topics);\n                }\n              }\n            }\n          ]}\n          data={this.state.consumerGroups}\n          updateData={data => {\n            this.setState({ consumerGroups: data });\n          }}\n          onDetails={id => `/ui/${selectedCluster}/group/${id}` }\n          actions={[constants.TABLE_DETAILS]}\n        />\n      </div>\n    );\n  }\n}\nexport default TopicGroups;\n","import TopicConfigs from './TopicConfigs';\n\nexport default TopicConfigs;\n","import React from 'react';\nimport { uriTopicsConfigs, uriTopicsUpdateConfigs } from '../../../../utils/endpoints';\nimport Table from '../../../../components/Table';\nimport Form from '../../../../components/Form/Form';\nimport converters from '../../../../utils/converters';\nimport Joi from 'joi-browser';\nimport { MILLI, BYTES, TEXT } from '../../../../utils/constants';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nclass TopicConfigs extends Form {\n  state = {\n    host: '',\n    port: '',\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedTopic: this.props.topicId,\n    formData: {},\n    changedConfigs: {},\n    errors: {},\n    configs: [],\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true\n  };\n\n  schema = {};\n\n  componentDidMount() {\n    this.getTopicsConfig();\n  }\n\n  async getTopicsConfig() {\n    let configs = [];\n    const { selectedCluster, selectedTopic } = this.state;\n\n    configs = await this.getApi(uriTopicsConfigs(selectedCluster, selectedTopic));\n    this.handleData(configs.data);\n  }\n\n  handleData(configs) {\n    configs.forEach(config => {\n      this.createValidationSchema(config);\n    });\n\n    let tableTopics = configs.map(config => {\n      return {\n        id: config.name,\n        name: config.name,\n        description: config.description,\n        value: config.value,\n        readOnly: config.readOnly,\n        dataType: this.getConfigDataType(config.name),\n        type: config.source,\n        sensitive: config.sensitive\n      };\n    });\n    this.setState({ data: tableTopics, configs, loading: false });\n  }\n  getConfigDataType = configName => {\n    switch (configName.substring(configName.lastIndexOf('.'))) {\n      case '.ms':\n        return MILLI;\n      case '.size':\n        return BYTES;\n      default:\n        return TEXT;\n    }\n  };\n  handleDataType(dataType, value) {\n    switch (dataType) {\n      case 'MILLI':\n        return (\n          <small className=\"humanize form-text text-muted\">{converters.showTime(value)}</small>\n        );\n      case 'BYTES':\n        return (\n          <small className=\"humanize form-text text-muted\">{converters.showBytes(value)}</small>\n        );\n      default:\n        return <small></small>;\n    }\n  }\n\n  createValidationSchema(config) {\n    let { formData } = this.state;\n    let validation;\n    if (isNaN(config.value)) {\n      validation = Joi.any();\n    } else {\n      validation = Joi.any();\n    }\n    this.schema[config.name] = validation;\n\n    formData[config.name] = isNaN(+config.value) ? config.value : +config.value;\n    this.setState({ formData });\n  }\n\n  onChange({ currentTarget: input }) {\n    let { data, configs } = this.state;\n    let config = {};\n    let newData = data.map(row => {\n      if (row.id === input.name) {\n        config = configs.find(config => config.name === input.name);\n        let { formData, changedConfigs } = this.state;\n        formData[input.name] = input.value;\n        if (input.value === config.value) {\n          delete changedConfigs[input.name];\n        } else {\n          changedConfigs[input.name] = input.value;\n        }\n\n        this.setState({ formData, changedConfigs });\n        return {\n          id: config.name,\n          name: config.name,\n          description: config.description,\n          value: config.value,\n          readOnly: config.readOnly,\n          dataType: this.getConfigDataType(config.name),\n          type: config.source,\n          sensitive: config.sensitive\n        };\n      }\n      return row;\n    });\n\n    this.setState({ data: newData });\n  }\n\n  async doSubmit() {\n    const { selectedCluster, selectedTopic, changedConfigs } = this.state;\n\n    await this.postApi(uriTopicsUpdateConfigs(selectedCluster, selectedTopic), {\n      clusterId: selectedCluster,\n      topicId: selectedTopic,\n      configs: changedConfigs\n    });\n\n    this.setState({ state: this.state }, () => {\n      toast.success(`Topic configs '${selectedTopic}' updated successfully`);\n    });\n  }\n\n  getInput(value, name, readOnly, dataType) {\n    return (\n      <div>\n        {dataType === 'TEXT' ? (\n          <input\n            type=\"text\"\n            onChange={value => this.onChange(value)}\n            className=\"form-control\"\n            autoComplete=\"off\"\n            value={value}\n            name={name}\n            placeholder=\"default\"\n          />\n        ) : (\n          <input\n            type=\"number\"\n            onChange={value => this.onChange(value)}\n            className=\"form-control\"\n            autoComplete=\"off\"\n            value={value}\n            name={name}\n            placeholder=\"default\"\n          />\n        )}\n        {this.handleDataType(dataType, value)}\n      </div>\n    );\n  }\n\n  handleTypeAndSensitive(configType, configSensitive) {\n    const type = configType === 'DEFAULT_CONFIG' ? 'secondary' : 'warning';\n    return (\n      <div>\n        <span className={'badge badge-' + type}> {configType}</span>\n        {configSensitive ? (\n          <i className=\"sensitive fa fa-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  handleNameAndDescription(name, description) {\n    const descript = description ? (\n      <span className=\"text-secondary\" data-toggle=\"tooltip\" title={description}>\n        <i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n      </span>\n    ) : (\n      ''\n    );\n    return (\n      <span className=\"name-color\">\n        <code>{name}</code> {descript}\n      </span>\n    );\n  }\n\n  renderTabs(tabName, isActive) {\n    const active = isActive ? 'active' : '';\n    return (\n      <li className=\"nav-item\">\n        <div className={`nav-link ${active}`} href=\"#\" role=\"tab\">\n          {tabName}\n        </div>\n      </li>\n    );\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    const roles = this.state.roles || {};\n    return (\n      <form\n        encType=\"multipart/form-data\"\n        className=\"khq-form mb-0\"\n        onSubmit={() => this.handleSubmit()}\n      >\n        <div>\n          <Table\n            loading={loading}\n            history={this.props.history}\n            columns={[\n              {\n                id: 'nameAndDescription',\n                accessor: 'nameAndDescription',\n                colName: 'Name',\n                type: 'text',\n                cell: obj => {\n                  return this.handleNameAndDescription(obj.name, obj.description);\n                }\n              },\n              {\n                id: 'value',\n                accessor: 'value',\n                colName: 'Value',\n                type: 'text',\n                cell: obj => {\n                  return this.getInput(\n                    this.state.formData[obj.name],\n                    obj.name,\n                    obj.readOnly,\n                    obj.dataType\n                  );\n                }\n              },\n              {\n                id: 'typeAndSensitive',\n                accessor: 'typeAndSensitive',\n                colName: 'Type',\n                type: 'text',\n                cell: obj => {\n                  return this.handleTypeAndSensitive(obj.type, obj.sensitive);\n                }\n              }\n            ]}\n            data={data}\n            updateData={data => {\n              this.setState({ data });\n            }}\n            noContent={'No acl for configs for current kafka user.'}\n          />\n          {roles.topic && roles.topic['topic/config/update'] && !this.props.internal ? (\n            <aside>\n              {this.renderButton('Update configs', this.handleSubmit, undefined, 'submit')}\n            </aside>\n          ) : null}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default TopicConfigs;\n","import TopicAcls from './TopicAcls';\n\nexport default TopicAcls;\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport { uriTopicsAcls } from '../../../../utils/endpoints';\nimport Root from \"../../../../components/Root\";\n\nclass TopicAcls extends Root {\n  state = {\n    data: [],\n    selectedCluster: '',\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getAcls();\n  }\n\n  async getAcls() {\n    let acls = [];\n    const { clusterId, topicId } = this.props;\n\n    acls = await this.getApi(uriTopicsAcls(clusterId, topicId));\n    this.handleData(acls.data);\n  }\n\n  handleData(data) {\n    let tableAcls = [];\n    data.map(principal =>\n      principal.acls.forEach((acl, index) => {\n        tableAcls.push({\n          id: index,\n          principal: principal.principal,\n          topic: acl.resource.name || '',\n          host: acl.host || '',\n          permission: acl.operation || ''\n        });\n      })\n    );\n    this.setState({ data: tableAcls, loading: false });\n    return tableAcls;\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'principal',\n              accessor: 'principal',\n              colName: 'Principal',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'host',\n              accessor: 'host',\n              colName: 'Host',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'permission',\n              accessor: 'permission',\n              colName: 'Permissions',\n              type: 'text',\n              cell: (obj, col) => {\n                return (\n                  <React.Fragment>\n                    <span className=\"badge badge-secondary\">\n                      {obj[col.accessor].permissionType}\n                    </span>{' '}\n                    {obj[col.accessor].operation}\n                  </React.Fragment>\n                );\n              }\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n          noContent={\n            <tr>\n              <td colSpan={3}>\n                <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                  No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the\n                  cluster.\n                </div>\n              </td>\n            </tr>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopicAcls;\n","import TopicLogs from './TopicLogs';\n\nexport default TopicLogs;\n","import React from 'react';\nimport { uriTopicsLogs } from '../../../../utils/endpoints';\nimport Table from '../../../../components/Table';\nimport converters from '../../../../utils/converters';\nimport Root from \"../../../../components/Root\";\n\nclass TopicLogs extends Root {\n  state = {\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedTopic: this.props.topic,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getTopicLogs();\n  }\n\n  async getTopicLogs() {\n    const { selectedCluster, selectedTopic } = this.state;\n\n    let logs = await this.getApi(uriTopicsLogs(selectedCluster, selectedTopic));\n    this.handleData(logs.data);\n  }\n\n  handleData(logs) {\n    let tableLogs = logs.map(log => {\n      return {\n        broker: log.brokerId,\n        topic: log.topic,\n        partition: log.partition,\n        size: log.size,\n        offsetLag: Number(log.offsetLag).toLocaleString()\n      };\n    });\n    this.setState({ data: tableLogs, loading: false });\n  }\n\n  handleSize(size) {\n    return <label>{converters.showBytes(size, 0)}</label>;\n  }\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'broker',\n              accessor: 'broker',\n              colName: 'Broker',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'topic',\n              accessor: 'topic',\n              colName: 'Topic',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'partition',\n              accessor: 'partition',\n              colName: 'Partition',\n              type: 'text',\n              sortable: true\n            },\n\n            {\n              id: 'size',\n              accessor: 'size',\n              colName: 'Size',\n              type: 'text',\n              cell: (obj, col) => {\n                return this.handleSize(obj[col.accessor]);\n              }\n            },\n            {\n              id: 'offsetLag',\n              accessor: 'offsetLag',\n              colName: 'OffsetLag',\n              type: 'text',\n              sortable: true\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopicLogs;\n","import Topic from './Topic';\n\nexport default Topic;\n","import React from 'react';\nimport Header from '../../Header';\nimport TopicData from './TopicData';\nimport TopicPartitions from './TopicPartitions';\nimport TopicGroups from './TopicGroups';\nimport TopicConfigs from './TopicConfigs';\nimport TopicAcls from './TopicAcls';\nimport TopicLogs from './TopicLogs';\nimport { uriTopicsConfigs, uriTopicDataEmpty } from '../../../utils/endpoints';\nimport ConfirmModal from '../../../components/Modal/ConfirmModal';\nimport { toast } from 'react-toastify';\nimport {getSelectedTab} from \"../../../utils/functions\";\nimport { Link } from 'react-router-dom';\nimport Root from \"../../../components/Root\";\n\nclass Topic extends Root {\n  state = {\n    clusterId: this.props.clusterId,\n    topicId: this.props.topicId,\n    topic: {},\n    selectedTab: '',\n    showDeleteModal: false,\n    deleteMessage: '',\n    compactMessageToDelete: '',\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    topicInternal: false,\n    configs: []\n  };\n\n  tabs = ['data','partitions','groups','configs','acls','logs'];\n\n  constructor(props) {\n    super(props);\n    this.topicData = React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return state;\n  }\n\n  componentDidMount() {\n    const { clusterId, topicId } = this.props.match.params;\n    const searchParams = this.props.location.search;\n\n    const roles = this.state.roles || {};\n    const tabSelected = getSelectedTab(this.props, this.tabs);\n\n    this.setState(\n      {\n        clusterId,\n        topicId,\n        selectedTab: roles.topic && roles.topic['topic/data/read'] ? tabSelected : 'configs',\n        topicInternal: this.props.location.internal\n      },\n      () => {\n        this.getTopicsConfig();\n        let uri = `/ui/${clusterId}/topic/${topicId}/${this.state.selectedTab}`;\n        if(searchParams) {\n          uri = uri + searchParams;\n        }\n        this.props.history.replace(uri);\n      }\n    );\n  }\n\n  handleOnEmpty() {\n    this.setState(() => {\n      this.showDeleteModal(\n          <React.Fragment>\n            Do you want to empty the Topic: {<code>{this.state.topicId}</code>} ?\n          </React.Fragment>\n      );\n    });\n  }\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  canEmptyTopic = () => {\n    const { configs } = this.state;\n    const res = configs.filter( config => config.name === 'cleanup.policy');\n    if(res && res.length === 1 && res[0].value === 'delete') return true;\n    return false;\n  }\n\n  emptyTopic = () => {\n    const { clusterId, topicId } = this.props.match.params;\n\n    this.removeApi(\n        uriTopicDataEmpty(clusterId, topicId)\n    )\n        .then(() => {\n          toast.success(`Topic '${topicId}' will be emptied`);\n          this.setState({ showDeleteModal: false }, () => {\n            this.topicData.current.getMessages();\n          });\n        })\n        .catch(() => {\n          this.setState({ showDeleteModal: false });\n        });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      const tabSelected = getSelectedTab(this.props, this.tabs);\n      this.setState({ selectedTab: tabSelected });\n    }\n  }\n\n  async getTopicsConfig() {\n    const { clusterId, topicId } = this.state;\n    let configs = [];\n    try {\n      configs = await this.getApi(uriTopicsConfigs(clusterId, topicId));\n      this.setState({ configs: configs.data });\n    } catch (err) {\n      console.error('Error:', err);\n    }\n  }\n\n  selectTab = tab => {\n    this.setState({ selectedTab: tab });\n\n  };\n\n  tabClassName = tab => {\n    const { selectedTab } = this.state;\n    return selectedTab === tab ? 'nav-link active' : 'nav-link';\n  };\n\n  renderSelectedTab = () => {\n    const { selectedTab, topicId, clusterId, roles, topicInternal } = this.state;\n    const { history, match, location } = this.props;\n\n    switch (selectedTab) {\n      case 'data':\n        return <TopicData ref={this.topicData} history={history} match={match} location={location} />;\n      case 'partitions':\n        return <TopicPartitions clusterId={clusterId} topic={topicId} history={history} />;\n      case 'groups':\n        return (\n          <TopicGroups\n            clusterId={clusterId}\n            topicId={topicId}\n            history={history}\n          />\n        );\n      case 'configs':\n        return (\n          <TopicConfigs\n            internal={topicInternal}\n            history={history}\n            topicId={topicId}\n            clusterId={clusterId}\n          />\n        );\n      case 'acls':\n        return <TopicAcls history={history} topicId={topicId} clusterId={clusterId} />;\n      case 'logs':\n        return <TopicLogs clusterId={clusterId} topic={topicId} history={history} />;\n      default:\n        return roles.topic && roles.topic['topic/data/read'] ? (\n          <TopicData history={history} match={match} location={location}/>\n        ) : (\n          <TopicPartitions history={history} />\n        );\n    }\n  };\n\n  render() {\n    const { topicId, clusterId, selectedTab } = this.state;\n\n    const roles = this.state.roles || {};\n    return (\n      <div>\n        <Header title={`Topic: ${topicId}`} history={this.props.history} />\n        <div className=\"tabs-container\" style={{ marginBottom: '4%' }}>\n          <ul className=\"nav nav-tabs\" role=\"tablist\">\n            {roles.topic && roles.topic['topic/data/read'] && (\n              <li className=\"nav-item\">\n                <Link to={`/ui/${clusterId}/topic/${topicId}/data`}\n                  className={this.tabClassName('data')}\n                >\n                  Data\n                </Link>\n              </li>\n            )}\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/topic/${topicId}/partitions`}\n                className={this.tabClassName('partitions')}\n              >\n                Partitions\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/topic/${topicId}/groups`}\n                className={this.tabClassName('groups')}\n              >\n                Consumer Groups\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/topic/${topicId}/configs`}\n                className={this.tabClassName('configs')}\n              >\n                Configs\n              </Link>\n            </li>\n            {roles.acls && roles.acls['acls/read'] && (\n              <li className=\"nav-item\">\n                <Link to={`/ui/${clusterId}/topic/${topicId}/acls`}\n                  className={this.tabClassName('acls')}\n                >\n                  ACLS\n                </Link>\n              </li>\n            )}\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/topic/${topicId}/logs`}\n                className={this.tabClassName('logs')}\n              >\n                Logs\n              </Link>\n            </li>\n          </ul>\n\n          <div className=\"tab-content\">\n            <div className=\"tab-pane active\" role=\"tabpanel\">\n              {this.renderSelectedTab()}\n            </div>\n          </div>\n        </div>\n        {selectedTab !== 'configs' && roles.topic && roles.topic['topic/data/insert'] && (\n          <aside>\n            <li className=\"aside-button\">\n              { this.canEmptyTopic()?\n                  <div\n                      onClick={() => {\n                        this.handleOnEmpty();\n                      }}\n                      className=\"btn btn-secondary mr-2\">\n                    <i className=\"fa fa-fw fa-eraser\" aria-hidden={true} /> Empty Topic\n                  </div>\n                  :\n                  <div title=\"Only enabled for topics with Delete Cleanup Policy\"\n                       className=\"btn disabled-black-button mr-2\">\n                    <i className=\"fa fa-fw fa-eraser\" aria-hidden={true} /> Empty Topic\n                  </div>\n              }\n\n              <Link to={{\n                pathname: `/ui/${clusterId}/topic/${topicId}/copy`\n              }}\n                    className=\"btn btn-secondary mr-2\"\n              >\n                <i className=\"fa fa-fw fa-level-down\" aria-hidden={true} /> Copy Topic\n              </Link>\n\n              <Link to={{  pathname: `/ui/${clusterId}/tail`,\n                search: `?topicId=${topicId}` }} className=\"btn btn-secondary mr-2\">\n\n                <i className=\"fa fa-fw fa-level-down\" aria-hidden={true} /> Live Tail\n              </Link>\n\n              <Link to={ `/ui/${clusterId}/topic/${topicId}/produce`}\n                className=\"btn btn-primary\">\n                <i className=\"fa fa-plus\" aria-hidden={true} /> Produce to topic\n              </Link>\n            </li>\n          </aside>\n        )}\n        <ConfirmModal show={this.state.showDeleteModal}\n                      handleCancel={this.closeDeleteModal}\n                      handleConfirm={this.emptyTopic}\n                      message={this.state.deleteMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Topic;\n","import React from 'react';\nimport Header from '../../Header';\nimport Table from '../../../components/Table';\nimport * as constants from '../../../utils/constants';\nimport { uriNodes } from '../../../utils/endpoints';\nimport { uriNodePartitions } from '../../../utils/endpoints';\nimport Root from '../../../components/Root';\n\nclass NodesList extends Root {\n  state = {\n    data: [],\n    selectedCluster: '',\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getNodes();\n  }\n\n  async getNodes() {\n    let nodes = [];\n    const { clusterId } = this.props.match.params;\n    nodes = await this.getApi(uriNodes(clusterId));\n    this.handleData(nodes.data);\n    this.setState({ selectedCluster: clusterId });\n  }\n\n  handleData(nodes) {\n    const { clusterId } = this.props.match.params;\n    let tableNodes = {}\n    const setState = () =>  {\n      this.setState({ data: Object.values(tableNodes), loading: false});\n    }\n\n    nodes.nodes.forEach(node => {\n      tableNodes[node.id] = {\n        id: JSON.stringify(node.id) || '',\n        host: `${node.host}:${node.port}` || '',\n        rack: node.rack || '',\n        controller: nodes.controller.id === node.id ? 'True' : 'False' || '',\n        partition: undefined\n      };\n    });\n\n    setState();\n\n    this.getApi(uriNodePartitions(clusterId))\n        .then(value => {\n          for (let node of value.data) {\n            const topicNode = tableNodes[node.id];\n            tableNodes[node.id].partition = topicNode ?\n                (node.countLeader) + ' (' + (((node.countLeader) / node.totalPartitions) * 100).toFixed(2) + '%)' :\n                '';\n          }\n\n          setState();\n        })\n\n    return Object.values(tableNodes);\n  }\n\n  render() {\n    const { history } = this.props;\n    const { data, selectedCluster, loading } = this.state;\n    return (\n      <div>\n        <Header title=\"Nodes\" history={history} />\n        <Table\n          loading={loading}\n          history={history}\n          columns={[\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id',\n              type: 'text',\n              sortable: true,\n              cell: (obj, col) => {\n                return <span className=\"badge badge-info\">{obj[col.accessor] || ''}</span>;\n              }\n            },\n            {\n              id: 'host',\n              accessor: 'host',\n              colName: 'Host',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'controller',\n              accessor: 'controller',\n              colName: 'Controller',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'partition',\n              accessor: 'partition',\n              colName: 'Partitions (% of total)',\n              type: 'text',\n              sortable: false\n            },\n            {\n              id: 'rack',\n              accessor: 'rack',\n              colName: 'Rack',\n              type: 'text',\n              sortable: true\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n          actions={[constants.TABLE_DETAILS]}\n          onDetails={id => `/ui/${selectedCluster}/node/${id}`}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NodesList;\n","import React from 'react';\nimport { uriNodesConfigs, uriNodesUpdateConfigs } from '../../../../utils/endpoints';\nimport { BYTES, MILLI, TEXT } from '../../../../utils/constants';\nimport Table from '../../../../components/Table';\nimport Form from '../../../../components/Form/Form';\nimport converters from '../../../../utils/converters';\nimport Joi from 'joi-browser';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nclass NodeConfigs extends Form {\n  state = {\n    host: '',\n    port: '',\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedNode: this.props.nodeId,\n    formData: {},\n    changedConfigs: {},\n    errors: {},\n    configs: [],\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true\n  };\n\n  schema = {};\n\n  componentDidMount() {\n    this.getNodesConfig();\n  }\n\n  async getNodesConfig() {\n    const { selectedCluster, selectedNode } = this.state;\n\n    let configs = await this.getApi(uriNodesConfigs(selectedCluster, selectedNode));\n    this.handleData(configs.data);\n  }\n\n  handleData(configs) {\n    configs.forEach(config => {\n      this.createValidationSchema(config);\n    });\n\n    let tableNodes = configs.map(config => {\n      return {\n        id: config.name,\n        name: config.name,\n        description: config.description,\n        readOnly: config.readOnly,\n        dataType: this.getConfigDataType(config.name),\n        type: config.source,\n        sensitive: config.sensitive\n      };\n    });\n    this.setState({ data: tableNodes, configs, loading: false });\n  }\n\n  handleDataType(dataType, value) {\n    switch (dataType) {\n      case MILLI:\n        return (\n          <small className=\"humanize form-text text-muted\">{converters.showTime(value)}</small>\n        );\n      case BYTES:\n        return (\n          <small className=\"humanize form-text text-muted\">{converters.showBytes(value)}</small>\n        );\n      default:\n        return <small></small>;\n    }\n  }\n\n  getConfigDataType = configName => {\n    if (configName === undefined) {\n      return TEXT;\n    }\n\n    switch (configName.substring(configName.lastIndexOf('.'))) {\n      case '.ms':\n        return MILLI;\n      case '.size':\n        return BYTES;\n      default:\n        return TEXT;\n    }\n  };\n\n  createValidationSchema(config) {\n    let { formData } = this.state;\n    let validation;\n    if (isNaN(config.value)) {\n      validation = Joi.any();\n    } else {\n      validation = Joi.any();\n    }\n    this.schema[config.name] = validation;\n\n    formData[config.name] = isNaN(+config.value) ? config.value : +config.value;\n    this.setState({ formData });\n  }\n\n  onChange({ currentTarget: input }) {\n    let { data, configs } = this.state;\n    let config = {};\n    let newData = data.map(row => {\n      if (row.id === input.name) {\n        config = configs.find(config => config.name === input.name);\n        let { formData, changedConfigs } = this.state;\n        formData[input.name] = input.value;\n        if (input.value === config.value) {\n          delete changedConfigs[input.name];\n        } else {\n          changedConfigs[input.name] = input.value;\n        }\n\n        this.setState({ formData, changedConfigs });\n        return {\n          id: config.name,\n          name: config.name,\n          description: config.description,\n          readOnly: config.readOnly,\n          dataType: this.getConfigDataType(config.name),\n          type: config.source,\n          sensitive: config.sensitive\n        };\n      }\n      return row;\n    });\n\n    this.setState({ data: newData });\n  }\n\n  async doSubmit() {\n    const { selectedCluster, selectedNode, changedConfigs } = this.state;\n    let { configs } = this.state;\n\n    await this.postApi(uriNodesUpdateConfigs(selectedCluster, selectedNode), {\n      configs: changedConfigs\n    });\n\n    this.setState({ state: this.state });\n    toast.success(`Node configs '${selectedNode}' updated successfully.`);\n    Object.keys(changedConfigs).forEach(key => {\n      const changedConfig = changedConfigs[key];\n      const configIndex = configs.findIndex(config => config.name === key);\n      configs[configIndex].value = changedConfig;\n    });\n  }\n\n  getInput(value, name, readOnly, dataType) {\n    return (\n      <div>\n        {dataType === 'TEXT' ? (\n          <input\n            type=\"text\"\n            onChange={value => this.onChange(value)}\n            className=\"form-control\"\n            autoComplete=\"off\"\n            value={value}\n            readOnly={readOnly}\n            name={name}\n            placeholder=\"Default\"\n          />\n        ) : (\n          <input\n            type=\"number\"\n            onChange={value => this.onChange(value)}\n            className=\"form-control\"\n            autoComplete=\"off\"\n            value={value}\n            readOnly={readOnly}\n            name={name}\n            placeholder=\"Default\"\n          />\n        )}\n        {this.handleDataType(dataType, value)}\n      </div>\n    );\n  }\n\n  handleTypeAndSensitive(configType, configSensitive) {\n    const type = configType === 'DEFAULT_CONFIG' ? 'secondary' : 'warning';\n    return (\n      <div>\n        <span className={'badge badge-' + type}> {configType}</span>\n        {configSensitive ? (\n          <i className=\"sensitive fa fa-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  handleNameAndDescription(name, description) {\n    const descript = description ? (\n      <span className=\"text-secondary\" data-toggle=\"tooltip\" title={description}>\n        <i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n      </span>\n    ) : (\n      ''\n    );\n    return (\n      <div>\n        <code>{name}</code> {descript}\n      </div>\n    );\n  }\n\n  renderTabs(tabName, isActive) {\n    const active = isActive ? 'active' : '';\n    return (\n      <li className=\"nav-item\">\n        <div className={`nav-link ${active}`} role=\"tab\">\n          {tabName}\n        </div>\n      </li>\n    );\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    const roles = this.state.roles || {};\n    return (\n      <form\n        encType=\"multipart/form-data\"\n        className=\"khq-form mb-0\"\n        onSubmit={() => this.handleSubmit()}\n      >\n        <div>\n          <Table\n            loading={loading}\n            history={this.props.history}\n            columns={[\n              {\n                id: 'nameAndDescription',\n                accessor: 'nameAndDescription',\n                colName: 'Name',\n                type: 'text',\n                cell: obj => {\n                  return this.handleNameAndDescription(obj.name, obj.description);\n                }\n              },\n              {\n                id: 'value',\n                accessor: 'value',\n                colName: 'Value',\n                type: 'text',\n                cell: obj => {\n                  return this.getInput(\n                    this.state.formData[obj.name],\n                    obj.name,\n                    obj.readOnly,\n                    obj.dataType\n                  );\n                }\n              },\n              {\n                id: 'typeAndSensitive',\n                accessor: 'typeAndSensitive',\n                colName: 'Type',\n                type: 'text',\n                cell: obj => {\n                  return this.handleTypeAndSensitive(obj.type, obj.sensitive);\n                }\n              }\n            ]}\n            data={data}\n            updateData={data => {\n              this.setState({ data });\n            }}\n          />\n          {roles.node['node/config/update'] &&\n            this.renderButton('Update configs', this.handleSubmit, undefined, 'submit')}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default NodeConfigs;\n","import React from 'react';\nimport { uriNodesLogs } from '../../../../utils/endpoints';\nimport Table from '../../../../components/Table';\nimport { showBytes } from '../../../../utils/converters';\nimport { sortBy } from '../../../../utils/constants';\nimport Root from \"../../../../components/Root\";\n\nclass NodeLogs extends Root {\n  state = {\n    host: '',\n    port: '',\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedNode: this.props.nodeId,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getNodesLogs();\n  }\n\n  async getNodesLogs() {\n    let logs = [];\n    const { selectedCluster, selectedNode } = this.state;\n\n    logs = await this.getApi(uriNodesLogs(selectedCluster, selectedNode));\n    logs = logs.data.sort(sortBy('partition', false))\n                    .sort(sortBy('topic', false));\n    this.handleData(logs);\n  }\n\n  handleData(logs) {\n    let tableNodes = logs.map(log => {\n      return {\n        broker: log.brokerId,\n        topic: log.topic,\n        partition: log.partition,\n        size: showBytes(log.size),\n        offsetLag: Number(log.offsetLag).toLocaleString()\n      };\n    });\n    this.setState({ data: tableNodes, loading: false });\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'broker',\n              accessor: 'broker',\n              colName: 'Broker',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'topic',\n              accessor: 'topic',\n              colName: 'Topic',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'partition',\n              accessor: 'partition',\n              colName: 'Partition',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'size',\n              accessor: 'size',\n              colName: 'Size',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'offsetLag',\n              accessor: 'offsetLag',\n              colName: 'OffsetLag',\n              type: 'text',\n              sortable: true\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NodeLogs;\n","import Node from './Node';\n\nexport default Node;\n","import React, { Component } from 'react';\nimport Header from '../../Header';\nimport NodeConfigs from './/NodeConfigs/NodeConfigs';\nimport NodeLogs from './/NodeLogs/NodeLogs';\nimport {getSelectedTab} from \"../../../utils/functions\";\nimport {Link} from \"react-router-dom\";\n\nclass Node extends Component {\n  state = {\n    host: '',\n    port: '',\n    data: [],\n    clusterId: this.props.match.params.clusterId,\n    selectedNode: this.props.match.params.nodeId,\n    selectedTab: 'configs'\n  };\n\n  tabs = ['configs', 'logs'];\n\n  componentDidMount() {\n    const { clusterId, nodeId } = this.props.match.params;\n    const tabSelected = getSelectedTab(this.props, this.tabs);\n    this.setState(\n        {\n          selectedTab: (tabSelected)? tabSelected : 'configs'\n        },\n        () => {\n          this.props.history.replace(`/ui/${clusterId}/node/${nodeId}/${this.state.selectedTab}`);\n        }\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      const tabSelected = getSelectedTab(this.props, this.tabs);\n      this.setState({ selectedTab: tabSelected });\n    }\n  }\n\n  tabClassName = tab => {\n    const { selectedTab } = this.state;\n    return selectedTab === tab ? 'nav-link active' : 'nav-link';\n  };\n\n  renderSelectedTab() {\n    const { selectedTab } = this.state;\n\n    switch (selectedTab) {\n      case 'configs':\n        return (\n          <NodeConfigs\n            nodeId={this.props.match.params.nodeId}\n            clusterId={this.props.match.params.clusterId}\n            history={this.props.history}\n          />\n        );\n      case 'logs':\n        return (\n          <NodeLogs\n            nodeId={this.props.match.params.nodeId}\n            clusterId={this.props.match.params.clusterId}\n            history={this.props.history}\n          />\n        );\n      default:\n        return (\n          <NodeConfigs\n            nodeId={this.props.match.params.nodeId}\n            clusterId={this.props.match.params.clusterId}\n            history={this.props.history}\n          />\n        );\n    }\n  }\n\n  render() {\n    const { selectedNode, clusterId } = this.state;\n    return (\n      <div>\n        <Header title={`Node ${selectedNode}`} history={this.props.history} />\n        <div className=\"tabs-container\">\n          <ul className=\"nav nav-tabs\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/node/${selectedNode}/configs`}\n                className={this.tabClassName('configs')}\n              >\n                Configs\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/node/${selectedNode}/logs`}\n                className={this.tabClassName('logs')}\n              >\n                Logs\n              </Link>\n            </li>\n          </ul>\n\n          <div className=\"tab-content\">\n            <div className=\"tab-pane active\" role=\"tabpanel\">\n              {this.renderSelectedTab()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Node;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { matchPath } from 'react-router';\nimport constants from '../../utils/constants';\nimport _ from 'lodash';\nimport './styles.scss';\nimport SideNav, { NavIcon, NavItem, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nclass Sidebar extends Component {\n  state = {\n    selectedTab: constants.TOPIC,\n    selectedCluster: '',\n    selectedConnect: '',\n    allClusters: [],\n    allConnects: [],\n    showClusters: false,\n    showConnects: false,\n    enableRegistry: false,\n    enableConnect: false,\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    height: 'auto'\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let selectedTab = nextProps.selectedTab || prevState.selectedTab;\n    return { selectedTab };\n  }\n\n  componentDidMount() {\n    let tabs = [\n      constants.CLUSTER,\n      constants.CONNECT,\n      constants.GROUP,\n      constants.NODE,\n      constants.SCHEMA,\n      constants.TAIL,\n      constants.TOPIC,\n      constants.ACLS\n    ];\n    let path = this.props.location.pathname.split('/');\n    if (tabs.find(el => el === path[2])) {\n      this.setState({ selectedTab: path[2] });\n    }\n    if (this.props.clusters && this.props.clusters.length > 0) {\n      this.handleGetClusters(this.props.clusters || [], selectedCluster => {\n        this.handleRegistryAndConnects(selectedCluster);\n      });\n    }\n  }\n\n  handleGetClusters(clusters, callback = () => {}) {\n    const match = matchPath(this.props.history.location.pathname, {\n      path: '/ui/:clusterId/',\n      exact: false,\n      strict: false\n    });\n\n    const clusterId = match ? match.params.clusterId || '' : '';\n    let allClusters =\n      _(clusters)\n        .sortBy(cluster => cluster.id)\n        .value() || [];\n    const cluster = allClusters.find(cluster => cluster.id === clusterId);\n    this.setState(\n      {\n        allClusters: allClusters,\n        selectedCluster: (cluster ? cluster.id : allClusters[0].id) || allClusters[0].id\n      },\n      () => {\n        const { selectedCluster } = this.state;\n        callback(selectedCluster);\n      }\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.setState({ height: document.getElementById('root').offsetHeight });\n    }\n    if (this.props.clusters !== prevProps.clusters) {\n      this.handleGetClusters(this.props.clusters || [], selectedCluster => {\n        this.handleRegistryAndConnects(selectedCluster);\n      });\n    }\n  }\n\n  handleRegistryAndConnects(selectedCluster) {\n    const { allClusters } = this.state;\n    const cluster = allClusters.find(cluster => cluster.id === selectedCluster);\n    const enableConnects = cluster.connects !== undefined;\n    if (enableConnects) {\n      this.setState({\n        enableRegistry: cluster.registry,\n        enableConnect: enableConnects,\n        allConnects: cluster.connects,\n        selectedConnect: cluster.connects[0]\n      });\n    } else {\n      this.setState({\n        enableRegistry: cluster.registry,\n        enableConnect: enableConnects,\n        allConnects: [],\n        selectedConnect: ''\n      });\n    }\n  }\n\n  setClustersAndConnects = () => {\n    const { allClusters, allConnects, selectedCluster, selectedConnect } = this.state;\n    const listClusters = allClusters.map(cluster => (\n      <NavItem\n        key={`cluster/${cluster.id}`}\n        eventKey={`cluster/${cluster.id}`}\n        onClick={() => this.changeSelectedCluster(cluster)}\n      >\n        <NavText style={{ color: '#32a9d4' }}>\n          {' '}\n          <Link to={`/ui/${cluster.id}/topic`}>\n          <div\n            className={selectedCluster === cluster.id ? ' active' : ''}\n            style={{ color: '#759dac' }}\n          >\n            {cluster.id}\n          </div>\n          </Link>\n        </NavText>\n      </NavItem>\n    ));\n    const listConnects = allConnects.map(connect => (\n      <NavItem\n        key={`cluster/${connect}`}\n        eventKey={`cluster/${connect}`}\n        onClick={() => this.changeSelectedConnect(connect)}\n      >\n        <NavText>\n          <Link to={`/ui/${selectedCluster}/connect/${connect}`}>\n          <div\n            className={selectedConnect === connect ? ' active' : ''}\n            style={{ color: '#759dac' }}\n          >\n            {connect}\n          </div>\n          </Link>\n        </NavText>\n      </NavItem>\n    ));\n\n    return { listClusters, listConnects };\n  };\n\n  changeSelectedCluster(newSelectedCluster) {\n\n    this.setState(\n      {\n        selectedCluster: newSelectedCluster.id,\n        showClusters: false\n      },\n      () => {\n        const { selectedCluster } = this.state;\n        this.props.history.push({\n          pathname: `/ui/${selectedCluster}/topic`,\n          selectedCluster\n        });\n\n        this.handleRegistryAndConnects(selectedCluster);\n      }\n    );\n  }\n\n  changeSelectedConnect(connect) {\n    this.setState({ selectedConnect: connect, showConnects: false }, () => {\n      const { selectedConnect, selectedCluster } = this.state;\n      this.props.history.push({\n        pathname: `/ui/${selectedCluster}/connect/${selectedConnect}`,\n        selectedCluster\n      });\n    });\n  }\n\n  renderMenuItem(iconClassName, tab, label) {\n    const { selectedCluster } = this.state;\n    const pathname = window.location.pathname;\n    return (\n\n      <NavItem\n        eventKey={label}\n        className={pathname.includes(tab) ? 'active' : ''}\n        onClick={() => {\n          this.setState({ selectedTab: tab });\n          this.props.history.push({\n            pathname: `/ui/${selectedCluster}/${tab}`\n          });\n          return false;\n        }}\n      >\n        <NavIcon>\n          {' '}\n           <Link to={`/ui/${selectedCluster}/${tab}`}\n                 onClick={(e) => {\n                   this.setState({ selectedTab: tab });\n                   e.preventDefault();\n           }}>\n               <i className={iconClassName} aria-hidden=\"true\" />\n           </Link>\n        </NavIcon>\n        <NavText>\n          {' '}\n          <Link to={`/ui/${selectedCluster}/${tab}`}\n                onClick={(e) => {\n                  this.setState({ selectedTab: tab });\n                  e.preventDefault();\n                }}>\n              {label}\n          </Link>\n        </NavText>\n      </NavItem>\n    );\n  }\n\n  render() {\n    const {\n      selectedConnect,\n      selectedCluster,\n      showClusters,\n      showConnects,\n      selectedTab,\n      height,\n      enableRegistry,\n      enableConnect\n    } = this.state;\n    const roles = this.state.roles || {};\n    const tag = sessionStorage.getItem('version');\n    const { listConnects, listClusters } = this.setClustersAndConnects();\n    return (\n      <SideNav\n        expanded={this.props.expanded}\n        onToggle={expanded => {\n          this.props.toggleSidebar(expanded);\n        }}\n        style={{ background: 'black', height: height, position: 'fixed' }}\n      >\n        <SideNav.Toggle />\n        <div className=\"logo-wrapper\">\n          <span className=\"logo\" />\n        </div>\n        <SideNav.Nav defaultSelected={`${constants.TOPIC}`} style={{ background: 'black' }}>\n          <NavItem style={{ backgroundColor: 'Black', cursor: 'default' }}>\n            <NavIcon />\n            <NavText\n              style={{\n                color: 'grey',\n                fontStyle: 'Italic',\n                paddingLeft: '9%'\n              }}\n            >\n              {''}\n              {tag}\n            </NavText>\n          </NavItem>\n          <NavItem eventKey=\"cluster\">\n            <NavIcon>\n              <i className=\"fa fa-fw fa fa-database\" aria-hidden=\"true\" />\n            </NavIcon>\n            <NavText>\n              <div\n                data-toggle=\"collapse\"\n                aria-expanded={showClusters}\n                className=\"dropdown-toggle text-center\"\n                onClick={() => {\n                  this.setState({ showClusters: !showClusters, selectedTab: constants.CLUSTER });\n                }}\n              >\n                <span className=\"badge badge-primary clusters\">{selectedCluster}</span>\n              </div>\n            </NavText>\n            {listClusters}\n          </NavItem>\n          {roles &&\n            roles.node &&\n            this.renderMenuItem('fa fa-fw fa-laptop', constants.NODE, 'Nodes')}\n          {roles &&\n            roles.topic &&\n            roles.topic['topic/read'] &&\n            this.renderMenuItem('fa fa-fw fa-list', constants.TOPIC, 'Topics')}\n          {roles &&\n            roles.topic &&\n            roles.topic['topic/data/read'] &&\n            this.renderMenuItem('fa fa-fw fa-level-down', constants.TAIL, 'Live Tail')}\n          {roles &&\n            roles.group &&\n            roles.group['group/read'] &&\n            this.renderMenuItem('fa fa-fw fa-object-group', constants.GROUP, 'Consumer Groups')}\n          {roles &&\n            roles.acls &&\n            roles.acls['acls/read'] &&\n            this.renderMenuItem('fa fa-fw fa-key', constants.ACLS, 'ACLS')}\n          {enableRegistry &&\n            roles &&\n            roles.registry &&\n            roles.registry['registry/read'] &&\n            this.renderMenuItem('fa fa-fw fa-cogs', constants.SCHEMA, 'Schema Registry')}\n          {enableConnect && roles && roles.connect && roles.connect['connect/read'] && (\n            <NavItem\n              eventKey=\"connects\"\n              className={selectedTab === constants.CONNECT ? 'active' : ''}\n            >\n              <NavIcon>\n                <i className=\"fa fa-fw fa fa-exchange\" aria-hidden=\"true\" />\n              </NavIcon>\n              <NavText>\n                <div\n                  to={`/ui/${selectedCluster}/connect/${selectedConnect}`}\n                  data-toggle=\"collapse\"\n                  aria-expanded={showConnects}\n                  className=\"dropdown-toggle text-center\"\n                  onClick={() => {\n                    this.setState({ showConnects: !showConnects, selectedTab: constants.CONNECT });\n                  }}\n                >\n                  <span className=\"badge badge-primary clusters\">{selectedConnect}</span>\n                </div>\n              </NavText>\n\n              {listConnects}\n            </NavItem>\n          )}\n          {this.renderMenuItem('fa fa-fw fa-gear', constants.SETTINGS, 'Settings')}\n        </SideNav.Nav>\n      </SideNav>\n    );\n  }\n}\n\nexport default withRouter(Sidebar);\n","import Sidebar from './Sidebar';\n\nexport default Sidebar;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport './styles.scss';\nimport image from '../../images/icon.svg';\nclass Loading extends Component {\n  render() {\n    const { show } = this.props;\n    let loadingContainer = show ? 'loading-container' : 'loading-none';\n    return (\n      <div>\n        <div className={loadingContainer}>\n          <div className=\"loading\">\n            <h3 className=\"logo\">\n              <img src={image}  alt=\"\" />\n              <sup>\n                <strong>HQ</strong>\n              </sup>\n            </h3>\n          </div>\n        </div>\n\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import './Base.scss';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Sidebar from '../../containers/SideBar';\nimport constants from '../../utils/constants';\nimport Loading from '../../containers/Loading';\nimport { Helmet } from 'react-helmet';\nclass Base extends Component {\n  state = {\n    clusterId: '',\n    topicId: '',\n    selectedTab: constants.CLUSTER, //cluster | node | topic | tail | group | acls | schema | connect\n    action: '',\n    loading: false,\n    expanded: !!localStorage.getItem('expanded')\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    const clusterId = nextProps.match.params.clusterId;\n    const topicId = nextProps.match.params.topicId;\n    const action = nextProps.match.params.action;\n    const { loading, tab } = nextProps.location;\n    return {\n      topicId: topicId,\n      clusterId: clusterId,\n      selectedTab: tab,\n      action: action,\n      loading\n    };\n  }\n\n  handleTitle() {\n    const page = window.location.pathname;\n    let title = '';\n    if (page.includes('node')) {\n      title = 'Nodes |';\n    }\n    if (page.includes('topic')) {\n      title = 'Topics |';\n    }\n    if (page.includes('tail')) {\n      title = 'Live Tail |';\n    }\n    if (page.includes('group')) {\n      title = 'Consumer Groups |';\n    }\n    if (page.includes('acls')) {\n      title = 'Acls |';\n    }\n    if (page.includes('schema')) {\n      title = 'Schema Registry |';\n    }\n    if (page.includes('connect')) {\n      title = 'Connect |';\n    }\n\n    return title + ' akhq.io';\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, clusters } = this.props;\n    const { loading, selectedTab, expanded } = this.state;\n    return (\n      <>\n        <Helmet title={this.handleTitle()} />\n        <Loading show={loading} />\n        {this.props.location.pathname !== '/ui/login' &&\n          this.props.location.pathname !== '/ui/page-not-found' && (\n            <Sidebar\n              clusters={clusters}\n              expanded={expanded}\n              toggleSidebar={newExpanded => {\n                newExpanded ? localStorage.setItem('expanded', newExpanded) : localStorage.removeItem('expanded');\n                this.setState({ expanded: newExpanded });\n              }}\n              selectedTab={selectedTab}\n            />\n          )}\n        <div id=\"content\" className={expanded ? 'expanded' : 'collapsed'}>\n          {children}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Base);\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport _ from 'lodash';\nimport Input from '../../components/Form/Input';\nimport Header from '../Header';\nimport { SETTINGS_VALUES } from '../../utils/constants';\nimport { getClusterUIOptions } from '../../utils/functions';\nimport { uriLiveTail, uriTopicsName } from '../../utils/endpoints';\nimport Table from '../../components/Table';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport Root from '../../components/Root';\nimport DateTime from '../../components/DateTime';\n\nconst STATUS = {\n  STOPPED: 'STOPPED',\n  STARTED: 'STARTED',\n  PAUSED: 'PAUSED'\n};\n\nconst MAX_RECORDS = [50, 100, 250, 500, 1000, 2500];\n\nclass Tail extends Root {\n  state = {\n    search: '',\n    dropdownSearch: '',\n    topics: [],\n    showDropdown: false,\n    selectedTopics: [],\n    selectedStatus: 'STOPPED',\n    maxRecords: 50,\n    data: [],\n    showFilters: '',\n    dateTimeFormat: SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.RELATIVE\n  };\n  eventSource;\n\n  componentDidMount = async () => {\n    const { clusterId } = this.props.match.params;\n    const query =  new URLSearchParams(this.props.location.search);\n\n    let data = await this.getApi(uriTopicsName(clusterId));\n    data = data.data;\n    let topics = [];\n    if (query && query.get('topicId')) {\n      topics = [ query.get('topicId') ];\n    }\n\n    if (data) {\n      this.setState({ topics: data, selectedTopics: topics }, () => {\n        if (query && query.get('topicId')) {\n          this.setState({ selectedStatus: STATUS.STARTED });\n          this.startEventSource();\n        }\n      });\n    } else {\n      this.setState({ topics: [], selectedTopics: topics }, () => {\n        if (query && query.get('topicId')) {\n          this.setState({ selectedStatus: STATUS.STARTED });\n          this.startEventSource();\n        }\n      });\n    }\n\n    this.initDateTimeFormat();\n  }\n\n  initDateTimeFormat = async () => {\n    const { clusterId } = this.props.match.params;\n    const uiOptions = await getClusterUIOptions(clusterId)\n    if(uiOptions.topicData && uiOptions.topicData.dateTimeFormat) {\n      this.setState(({\n        dateTimeFormat: uiOptions.topicData.dateTimeFormat\n      }));\n    }\n  }\n\n  componentWillUnmount = () => {\n    super.componentWillUnmount();\n    this.onStop();\n  };\n\n  startEventSource = () => {\n    const { clusterId } = this.props.match.params;\n    const { search, selectedTopics, maxRecords } = this.state;\n    this.eventSource = new EventSource(\n      uriLiveTail(clusterId, search, selectedTopics, JSON.stringify(maxRecords))\n    );\n    let self = this;\n    this.eventSource.addEventListener('tailBody', function(e) {\n      let res = JSON.parse(e.data);\n      let { data } = self.state;\n\n\n      if (res.records) {\n        data = data.concat(res.records);\n        if (data.length > maxRecords) {\n          data = data.slice(data.length - maxRecords);\n        }\n      }\n\n      self.setState({ data: data });\n      self.scrollToBottom();\n    });\n\n    this.eventSource.onerror = e => {\n      this.setState({ selectedStatus: STATUS.STOPPED });\n    };\n  };\n\n  onStop = () => {\n    if (this.eventSource) this.eventSource.close();\n  };\n\n  onStart = () => {\n    this.startEventSource();\n  };\n\n  scrollToBottom = () => {\n    const followScroll = (document.body.scrollTop || document.documentElement.scrollTop) + window.innerHeight >=\n        (document.documentElement.scrollHeight - document.documentElement.clientHeight)\n\n    if (followScroll) {\n      this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: [e.target.value] });\n  };\n\n  handleSelectedTopics = topic => {\n    let selectedTopics = this.state.selectedTopics;\n    if (\n      selectedTopics.find(el => {\n        return el === topic;\n      })\n    ) {\n      let updatedSelected = _.remove(selectedTopics, el => {\n        return el !== topic;\n      });\n      this.setState({\n        selectedTopics: updatedSelected\n      });\n    } else {\n      selectedTopics.push(topic);\n      this.setState({ selectedTopics: selectedTopics });\n    }\n  };\n\n  renderTopicList = () => {\n    let { topics, dropdownSearch, selectedTopics } = this.state;\n\n    return (\n      <div style={{ maxHeight: '678px', overflowY: 'auto', minHeight: '89px' }}>\n        <ul\n          className=\"dropdown-menu inner show\"\n          role=\"presentation\"\n          style={{ marginTop: '0px', marginBottom: '0px' }}\n        >\n          {topics\n            .filter(topic => {\n              if (dropdownSearch.length > 0) {\n                return topic.includes(dropdownSearch);\n              }\n              return topic;\n            })\n            .map((topic, index) => {\n              let selected = selectedTopics.find(selected => selected === topic);\n              return (\n                <li key={`topic_${topic}_${index}`}>\n                  <div\n                    onClick={() => {\n                      this.onStop();\n                      this.setState({ data: [] });\n                      this.handleSelectedTopics(topic);\n                    }}\n                    role=\"option\"\n                    className={`dropdown-item ${selected ? 'selected' : ''}`}\n                    id={`bs-select-${index}-0`}\n                    aria-selected=\"false\"\n                  >\n                    <span className=\"text\">{topic}</span>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>{' '}\n      </div>\n    );\n  };\n\n  openAndCloseFilters() {\n    let { showFilters } = this.state;\n    if (showFilters === 'show') {\n      this.setState({ showFilters: '' });\n    } else {\n      this.setState({ showFilters: 'show' });\n    }\n  }\n\n  render() {\n    const {\n      search,\n      dropdownSearch,\n      selectedTopics,\n      topics,\n      selectedStatus,\n      maxRecords,\n      data,\n      showFilters\n    } = this.state;\n\n    return (\n      <div>\n        <Header title=\"Live Tail\" history={this.props.history} />\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\n        bg-light mr-auto khq-data-filter khq-sticky khq-nav\"\n        >\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbar-search\"\n            aria-controls=\"navbar-search\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n            onClick={() => {\n              this.openAndCloseFilters();\n            }}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className={`form-inline collapse navbar-collapse ${showFilters}`} id=\"navbar-search\">\n            <Input\n              type=\"text\"\n              name=\"search\"\n              id=\"search\"\n              value={search}\n              label={''}\n              placeholder={'Search...'}\n              onChange={e => {\n                this.onStop();\n                this.setState({ data: [] });\n                this.handleChange(e);\n              }}\n              wrapperClass={'tail-search-wrapper'}\n              inputClass={'tail-search-input'}\n            />\n            <Dropdown className=\"form-group dropdown bootstrap-select show-tick khq-select show\">\n              <Dropdown.Toggle className=\"btn dropdown-toggle btn-white\">\n                {selectedTopics.length === 0\n                  ? 'Topics'\n                  : selectedTopics.length === 1\n                  ? selectedTopics[0]\n                  : `${selectedTopics.length} Topics Selected`}\n              </Dropdown.Toggle>\n              <Dropdown.Menu style={{ maxHeight: '771px', overflow: 'hidden', minHeight: '182px' }}>\n                <div className=\"bs-searchbox\">\n                  <input\n                    type=\"text\"\n                    name=\"dropdownSearch\"\n                    id=\"dropdownSearch\"\n                    className=\"form-control\"\n                    autoComplete=\"off\"\n                    role=\"combobox\"\n                    aria-label=\"Search\"\n                    aria-controls=\"bs-select-1\"\n                    aria-autocomplete=\"list\"\n                    aria-expanded=\"false\"\n                    placeholder={'search'}\n                    onChange={this.handleChange}\n                    value={dropdownSearch}\n                  />\n                </div>\n                <div className=\"bs-actionsbox\">\n                  <div className=\"btn-group btn-group-sm btn-block\">\n                    <button\n                      onClick={() => {\n                        this.onStop();\n\n                        this.setState({\n                          data: [],\n                          selectedTopics: JSON.parse(JSON.stringify(topics)).filter(topic => {\n                            if (dropdownSearch.length > 0) {\n                              return topic.includes(dropdownSearch);\n                            }\n                            return topic;\n                          })\n                        });\n                      }}\n                      type=\"button\"\n                      className=\"actions-btn bs-select-all btn btn-light\"\n                    >\n                      Select All\n                    </button>\n                    <button\n                      onClick={() => {\n                        this.onStop();\n                        this.setState({ data: [], selectedTopics: [] });\n                      }}\n                      type=\"button\"\n                      className=\"actions-btn bs-deselect-all btn btn-light\"\n                    >\n                      Deselect All\n                    </button>\n                  </div>\n                </div>\n                {this.renderTopicList()}\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown className=\"form-group dropdown bootstrap-select show-tick khq-select show\">\n              <Dropdown.Toggle className=\"btn dropdown-toggle btn-white\">\n                Max Records: {maxRecords}\n              </Dropdown.Toggle>\n              <Dropdown.Menu style={{ maxHeight: '771px', overflow: 'hidden', minHeight: '182px' }}>\n                {MAX_RECORDS.map(maxRecord => {\n                  return (\n                    <li key={`record_${maxRecord}`}>\n                      <div\n                        onClick={() => {\n                          this.onStop();\n                          this.setState({ maxRecords: maxRecord, data: [] });\n                        }}\n                        role=\"option\"\n                        className=\"dropdown-item\"\n                        aria-selected=\"false\"\n                      >\n                        {maxRecord}\n                      </div>\n                    </li>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n            <button\n              onClick={() => {\n                this.onStop();\n                this.setState({ selectedStatus: STATUS.STARTED }, () => {\n                  this.onStart();\n                });\n              }}\n              className=\"btn btn-primary\"\n              type=\"submit\"\n            >\n              <span className=\"d-md-none\">Search </span>\n              <i className=\"fa fa-search\" />\n            </button>\n            <div className=\"btn-group actions\" role=\"group\">\n              <button\n                className={`btn btn-secondary pause ${\n                  selectedStatus === STATUS.STARTED ? '' : 'd-none'\n                }`}\n                onClick={() => {\n                  this.onStop();\n                  this.setState({ selectedStatus: STATUS.PAUSED });\n                }}\n              >\n                <i className={'fa fa-pause'} />\n                <span> Pause</span>\n              </button>\n              <button\n                className={`btn btn-secondary resume ${\n                  selectedStatus === STATUS.PAUSED ? '' : 'd-none'\n                }`}\n                onClick={() => {\n                  this.onStart();\n                  this.setState({ selectedStatus: STATUS.STARTED });\n                }}\n              >\n                <i className=\"fa fa-play\" /> <span> Resume</span>\n              </button>\n              <button\n                className={`btn btn-secondary empty ${\n                  selectedStatus === STATUS.STARTED || selectedStatus === STATUS.PAUSED\n                    ? ''\n                    : 'd-none'\n                }`}\n                onClick={() => {\n                  this.setState({ data: [] });\n                }}\n              >\n                <i className=\"fa fa-remove\" /> <span> Clear</span>\n              </button>\n            </div>\n          </div>\n        </nav>\n        {selectedStatus !== STATUS.STOPPED && (\n          <Table\n            history={this.props.history}\n            rowId={data => {\n              return data.topic.name + '-' + data.partition + '-' + data.offset;\n            }}\n            columns={[\n              {\n                id: 'topic',\n                accessor: 'topic',\n                colName: 'Topic',\n                type: 'text',\n                cell: obj => {\n                  return obj.topic.name;\n                }\n              },\n              {\n                id: 'key',\n                accessor: 'key',\n                colName: 'Key',\n                type: 'text',\n                cell: obj => {\n                  return <span style={{ color: 'red' }}>{obj.key}</span>;\n                }\n              },\n              {\n                id: 'timestamp',\n                accessor: 'timestamp',\n                colName: 'Date',\n                type: 'text',\n                cell: obj => {\n                  return (\n                    <div className=\"tail-headers\">\n                      <DateTime \n                        isoDateTimeString={obj.timestamp} \n                        dateTimeFormat={this.state.dateTimeFormat}\n                      />                \n                    </div>\n                  );\n                }\n              },\n              {\n                id: 'partition',\n                accessor: 'partition',\n                colName: 'Partition',\n                type: 'text'\n              },\n              {\n                id: 'offset',\n                accessor: 'offset',\n                colName: 'Offset',\n                type: 'text'\n              },\n              {\n                id: 'headers',\n                accessor: 'headers',\n                colName: 'Headers',\n                type: 'text',\n                expand: true,\n                cell: obj => {\n                  return (\n                    <div className=\"tail-headers\">\n                      {obj.headers ? Object.keys(obj.headers).length : 0}\n                    </div>\n                  );\n                }\n              },\n              {\n                id: 'value',\n                accessor: 'value',\n                colName: 'Schema',\n                type: 'text',\n                extraRow: true,\n                extraRowContent: (obj, index) => {\n                  return (\n                    <AceEditor\n                      mode=\"json\"\n                      id={'value' + index}\n                      theme=\"merbivore_soft\"\n                      value={obj.value}\n                      readOnly\n                      name=\"UNIQUE_ID_OF_DIV\"\n                      editorProps={{ $blockScrolling: true }}\n                      style={{ width: '100%', minHeight: '25vh' }}\n                    />\n                  );\n                },\n                cell: obj => {\n                  return (\n                    <pre className=\"mb-0 khq-data-highlight\">\n                      <code>{obj.value}</code>\n                    </pre>\n                  );\n                }\n              }\n            ]}\n            extraRow\n            noStripes\n            data={data}\n            updateData={data => {\n              this.setState({ data: data });\n            }}\n            noContent={<tr />}\n            onExpand={obj => {\n              return Object.keys(obj.headers).map(header => {\n                return (\n                  <tr\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'row',\n                      width: '100%'\n                    }}\n                  >\n                    <td\n                      style={{\n                        width: '100%',\n                        display: 'flex',\n                        borderStyle: 'dashed',\n                        borderWidth: '1px',\n                        backgroundColor: '#171819'\n                      }}\n                    >\n                      {header}\n                    </td>\n                    <td\n                      style={{\n                        width: '100%',\n                        display: 'flex',\n                        borderStyle: 'dashed',\n                        borderWidth: '1px',\n                        backgroundColor: '#171819'\n                      }}\n                    >\n                      {obj.headers[header]}\n                    </td>\n                  </tr>\n                );\n              });\n            }}\n          />\n        )}\n        <div ref={(el) => { this.messagesEnd = el; }}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tail;\n","import Tail from './Tail';\n\nexport default Tail;\n","import Acls from './Acls';\n\nexport default Acls;\n","import React from 'react';\nimport Header from '../../Header';\nimport Table from '../../../components/Table';\nimport * as constants from '../../../utils/constants';\nimport { uriAclsList } from '../../../utils/endpoints';\nimport SearchBar from '../../../components/SearchBar';\nimport Root from \"../../../components/Root\";\n\nclass Acls extends Root {\n  state = {\n    data: [],\n    selectedCluster: '',\n    searchData: {\n      search: ''\n    },\n    loading: true\n  };\n\n  componentDidMount() {\n    const { searchData } = this.state;\n    const query =  new URLSearchParams(this.props.location.search);\n    const { clusterId } = this.props.match.params;\n\n    this.setState({ selectedCluster: clusterId, searchData: { search: (query.get('search'))? query.get('search') : searchData.search }}, () => {\n      this.getAcls();\n    });\n  }\n\n  async getAcls() {\n    let acls = [];\n    const { selectedCluster } = this.state;\n\n    acls = await this.getApi(uriAclsList(selectedCluster, this.state.searchData.search));\n    this.handleData(acls.data);\n  }\n\n  handleData(acls) {\n    let tableAcls = acls.map(acl => {\n      acl.principalEncoded = btoa(acl.principal);\n      return {\n        id: acl,\n        user: acl.principal || ''\n      };\n    });\n    this.setState({ data: tableAcls, loading: false });\n    return tableAcls;\n  }\n\n  handleSearch = data => {\n    const { searchData } = data;\n    this.setState({ searchData, loading: true }, () => {\n      this.getAcls();\n      this.props.history.push({\n        pathname: `/ui/${this.state.selectedCluster}/acls`,\n        search: `search=${searchData.search}`\n      });\n    });\n  };\n\n  render() {\n    const { data, searchData, loading } = this.state;\n    const { clusterId } = this.props.match.params;\n\n    return (\n      <div>\n        <Header title=\"Acls\" history={this.props.history} />\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light bg-light mr-auto\n         khq-data-filter khq-sticky khq-nav\"\n        >\n          <SearchBar\n            showSearch={true}\n            search={searchData.search}\n            showPagination={false}\n            showTopicListView={false}\n            showConsumerGroup\n            groupListView={'ALL'}\n            doSubmit={this.handleSearch}\n          />\n        </nav>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'user',\n              accessor: 'user',\n              colName: 'Principals',\n              type: 'text',\n              sortable: true\n            }\n          ]}\n          actions={[constants.TABLE_DETAILS]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n          noContent={\n            <tr>\n              <td colSpan={3}>\n                <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                  No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the\n                  cluster.\n                </div>\n              </td>\n            </tr>\n          }\n          onDetails={acl => `/ui/${clusterId}/acls/${acl.principalEncoded}`}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Acls;\n","import React from 'react';\nimport Header from '../../Header';\nimport Table from '../../../components/Table/Table';\nimport constants from '../../../utils/constants';\nimport { Link } from 'react-router-dom';\nimport { uriConnectDefinitions, uriDeleteDefinition } from '../../../utils/endpoints';\nimport ConfirmModal from '../../../components/Modal/ConfirmModal/ConfirmModal';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from \"../../../components/Root\";\nimport SearchBar from \"../../../components/SearchBar\";\nimport Pagination from \"../../../components/Pagination\";\nimport {handlePageChange, getPageNumber} from \"./../../../utils/pagination\"\n\nclass ConnectList extends Root {\n  state = {\n    clusterId: '',\n    connectId: '',\n    tableData: [],\n    showDeleteModal: false,\n    definitionToDelete: '',\n    deleteMessage: '',\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true,\n    pageNumber: 1,\n    totalPageNumber: 1,\n    history: this.props,\n    searchData: {\n      search: ''\n    },\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const clusterId = nextProps.match.params.clusterId;\n    const connectId = nextProps.match.params.connectId;\n\n    return {\n      clusterId: clusterId,\n      connectId: connectId\n    };\n  }\n\n  componentDidMount() {\n    const { searchData, pageNumber } = this.state;\n    const query =  new URLSearchParams(this.props.location.search);\n    this.setState({\n      searchData: { search: (query.get('search'))? query.get('search') : searchData.search },\n      pageNumber: (query.get('page')) ? parseInt(query.get('page')) : parseInt(pageNumber)\n    }, () => {\n      this.getConnectDefinitions();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.cancelAxiosRequests();\n      this.renewCancelToken();\n\n      this.setState({ pageNumber: 1 }, () => {\n        this.componentDidMount();\n      });\n    }\n  }\n\n  async getConnectDefinitions() {\n    const { clusterId, connectId, pageNumber } = this.state;\n    const { search } = this.state.searchData;\n\n    this.setState({ loading: true });\n\n    let response = await this.getApi(uriConnectDefinitions(clusterId, connectId, search, pageNumber));\n    let data = response.data;\n    if (data.results) {\n      this.handleData(data);\n      this.setState({ selectedCluster: clusterId, totalPageNumber: data.page }, () => {\n        this.props.history.push({\n          pathname: `/ui/${this.state.clusterId}/connect/${this.state.connectId}`,\n          search: `search=${this.state.searchData.search}&page=${pageNumber}`\n        })\n      });\n    } else {\n      this.setState({ clusterId, tableData: [], totalPageNumber: 0, loading: false });\n    }\n  }\n\n  deleteDefinition = () => {\n    const { clusterId, connectId, definitionToDelete: definition } = this.state;\n\n    this.removeApi(uriDeleteDefinition(clusterId, connectId, definition))\n        .then(() => {\n          toast.success(`Definition '${definition}' is deleted`);\n          this.setState({ showDeleteModal: false, definitionToDelete: '' }, () => {\n            this.getConnectDefinitions();\n          });\n        })\n        .catch(() => {\n          this.setState({ showDeleteModal: false, topicToDelete: {} });\n        });\n  };\n\n  handleData = data => {\n    let tableData = [];\n    tableData = data.results.map(connectDefinition => {\n      return {\n        id: connectDefinition.name || '',\n        config: JSON.stringify(connectDefinition.configs) || '',\n        type:\n          {\n            type: connectDefinition.type,\n            shortClassName: connectDefinition.shortClassName\n          } || '',\n        tasks: connectDefinition.tasks || ''\n      };\n    });\n\n    this.setState({ tableData, loading: false, totalPageNumber: data.page });\n  };\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  getTableActions = () => {\n    const roles = this.state.roles || {};\n    let actions = [];\n\n    if (roles.connect && roles.connect['connect/read']) {\n      actions.push(constants.TABLE_DETAILS);\n    }\n    if (roles.connect && roles.connect['connect/delete']) {\n      actions.push(constants.TABLE_DELETE);\n    }\n\n    return actions;\n  };\n\n  handleOnDelete(definition) {\n    this.setState({ definitionToDelete: definition }, () => {\n      this.showDeleteModal(\n        <React.Fragment>\n          Do you want to delete definition: {<code>{definition}</code>} ?\n        </React.Fragment>\n      );\n    });\n  }\n\n  handleSearch = data => {\n    const { searchData } = data;\n    this.setState({ pageNumber: 1, searchData }, () => {\n      this.getConnectDefinitions();\n    });\n  };\n\n  handlePageChangeSubmission = value => {\n    let pageNumber = getPageNumber(value, this.state.totalPageNumber);\n    this.setState({ pageNumber: pageNumber }, () => {\n      this.getConnectDefinitions();\n    });\n  };\n\n  renderTasks = tasks => {\n    let renderedTasks = [];\n\n    for (let task of tasks) {\n      let className = 'btn btn-sm mb-1 btn-';\n      switch (task.state) {\n        case 'RUNNING':\n          className += 'success';\n          break;\n        case 'FAILED':\n          className += 'danger';\n          break;\n        default:\n          className += 'warning';\n          break;\n      }\n\n      renderedTasks.push(\n        <React.Fragment>\n          <span className={`btn btn-sm mb-1 ${className}`}>\n            {`${task.workerId} (${task.id}) `}\n            <span className=\"badge badge-light\">{task.state}</span>\n          </span>\n          <br />\n        </React.Fragment>\n      );\n    }\n\n    return renderedTasks;\n  };\n\n  render() {\n    const { clusterId, connectId, tableData, loading, searchData, pageNumber, totalPageNumber } = this.state;\n    const roles = this.state.roles || {};\n    const { history } = this.props;\n\n    return (\n      <div>\n        <Header title={`Connect: ${connectId}`} history={history} />\n        <nav\n            className=\"navbar navbar-expand-lg navbar-light bg-light mr-auto\n         khq-data-filter khq-sticky khq-nav\"\n        >\n          <SearchBar\n              showSearch={true}\n              search={searchData.search}\n              showPagination={true}\n              pagination={pageNumber}\n              doSubmit={this.handleSearch}\n          />\n\n          <Pagination\n              pageNumber={pageNumber}\n              totalPageNumber={totalPageNumber}\n              onChange={handlePageChange}\n              onSubmit={this.handlePageChangeSubmission}\n          />\n        </nav>\n\n        <Table\n          loading={loading}\n          history={history}\n          columns={[\n            {\n              id: 'id',\n              name: 'id',\n              accessor: 'id',\n              colName: 'Name',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'config',\n              name: 'config',\n              accessor: 'config',\n              colName: 'Config',\n              type: 'text',\n              extraRow: true,\n              extraRowContent: (obj, col, index) => {\n                return (\n                  <AceEditor\n                    mode=\"json\"\n                    id={'value' + index}\n                    theme=\"merbivore_soft\"\n                    value={JSON.stringify(JSON.parse(obj[col.accessor]), null, 2)}\n                    readOnly\n                    name=\"UNIQUE_ID_OF_DIV\"\n                    editorProps={{ $blockScrolling: true }}\n                    style={{ width: '100%', minHeight: '25vh' }}\n                  />\n                );\n              },\n              cell: (obj, col) => {\n                return (\n                  <pre className=\"mb-0 khq-data-highlight\">\n                    <code onClick={() => JSON.stringify(JSON.parse(obj[col.accessor]), null, 2)}>\n                      {obj[col.accessor]}\n                    </code>\n                  </pre>\n                );\n              }\n            },\n            {\n              id: 'type',\n              accessor: 'type',\n              colName: 'Type',\n              type: 'text',\n              cell: (obj, col) => {\n                if (obj[col.accessor].type === 'source') {\n                  return (\n                    <React.Fragment>\n                      <i className=\"fa fa-forward\" aria-hidden=\"true\" />\n                      {` ${obj[col.accessor].shortClassName}`}\n                    </React.Fragment>\n                  );\n                }\n                return (\n                  <React.Fragment>\n                    <i className=\"fa fa-backward\" aria-hidden=\"true\" />\n                    {` ${obj[col.accessor].shortClassName}`}\n                  </React.Fragment>\n                );\n              }\n            },\n            {\n              id: 'tasks',\n              accessor: 'tasks',\n              colName: 'Tasks',\n              type: 'text',\n              cell: (obj, col) => {\n                return this.renderTasks(obj[col.accessor]);\n              }\n            }\n          ]}\n          data={tableData}\n          updateData={data => {\n            this.setState({ tableData: data });\n          }}\n          actions={this.getTableActions()}\n          onDetails={name => `/ui/${clusterId}/connect/${connectId}/definition/${name}` }\n          onDelete={row => {\n            this.handleOnDelete(row.id);\n          }}\n          extraRow\n          noStripes\n          onExpand={obj => {\n            return Object.keys(obj.headers).map(header => {\n              return (\n                <tr\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    width: '100%'\n                  }}\n                >\n                  <td\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      borderStyle: 'dashed',\n                      borderWidth: '1px',\n                      backgroundColor: '#171819'\n                    }}\n                  >\n                    {header}\n                  </td>\n                  <td\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      borderStyle: 'dashed',\n                      borderWidth: '1px',\n                      backgroundColor: '#171819'\n                    }}\n                  >\n                    {obj.headers[header]}\n                  </td>\n                </tr>\n              );\n            });\n          }}\n          noContent={'No connectors available'}\n        />\n        {roles.connect && roles.connect['connect/insert'] && (\n          <aside>\n            <Link to={`/ui/${clusterId}/connect/${connectId}/create`} className=\"btn btn-primary\">\n              Create a definition\n            </Link>\n          </aside>\n        )}\n        <ConfirmModal\n          show={this.state.showDeleteModal}\n          handleCancel={this.closeDeleteModal}\n          handleConfirm={this.deleteDefinition}\n          message={this.state.deleteMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectList;\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport './styles.scss';\nimport { uriConnectPlugins, uriCreateConnect } from '../../../utils/endpoints';\nimport { withRouter } from 'react-router-dom';\nimport Header from '../../Header/Header';\nimport constants from '../../../utils/constants';\nimport Select from '../../../components/Form/Select';\nimport AceEditor from 'react-ace';\nimport _ from 'lodash';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from \"../../../components/Root\";\n\nclass ConnectCreate extends Root {\n  state = {\n    clusterId: this.props.match.params.clusterId,\n    connectId: this.props.match.params.connectId,\n    formData: {},\n    errors: {},\n    plugins: [],\n    selectedType: '',\n    display: '',\n    plugin: {}\n  };\n\n  schema = {};\n  componentDidMount() {\n    this.getPlugins();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location === prevProps.location) {\n      let height = document.getElementById('root').offsetHeight;\n      document.getElementsByClassName('sidenav---sidenav---_2tBP')[0].style.height = height + 'px';\n    }\n  }\n\n  async getPlugins() {\n    const { connectId, clusterId } = this.state;\n\n    let plugins = await this.getApi(uriConnectPlugins(clusterId, connectId));\n    this.setState({ clusterId, connectId, plugins: plugins.data });\n  }\n\n  onTypeChange = value => {\n    let formData = {};\n    this.setState({ selectedType: value, formData }, () => {\n      this.renderForm();\n    });\n  };\n\n  handleShema(definitions) {\n    this.schema = {};\n    let formData = {};\n    formData.type = this.state.selectedType;\n    this.schema['type'] = Joi.string().required();\n    formData.subject = '';\n    this.schema['subject'] = Joi.string().required();\n    definitions.forEach(definition => {\n      let config = this.handleDefinition(definition);\n      formData[definition.name] = '';\n      this.schema[definition.name] = config;\n      if (definition.name === 'transforms') {\n        formData['transformsprops'] = '{}';\n        this.schema['transformsprops'] = Joi.object().required();\n      }\n    });\n    this.setState({ formData });\n  }\n\n  handleDefinition(definition) {\n    let def = '';\n    if (definition.name !== 'name' && definition.name !== 'connect.class') {\n      if (definition.required) {\n        switch (definition.type) {\n          case constants.TYPES.LONG:\n          case constants.TYPES.INT:\n          case constants.TYPES.DOUBLE:\n          case constants.TYPES.SHORT:\n            def = Joi.number().required();\n            break;\n          case constants.TYPES.PASSWORD:\n            def = Joi.password().required();\n            break;\n          case constants.TYPES.BOOLEAN:\n            def = Joi.boolean().required();\n            break;\n          default:\n            def = Joi.string().required();\n            break;\n        }\n      } else {\n        switch (definition.type) {\n          case constants.TYPES.LONG:\n          case constants.TYPES.INT:\n          case constants.TYPES.DOUBLE:\n          case constants.TYPES.SHORT:\n            def = Joi.number().allow('');\n            break;\n\n          case constants.TYPES.BOOLEAN:\n            def = Joi.boolean().allow('');\n            break;\n          default:\n            def = Joi.string().allow('');\n            break;\n        }\n      }\n    } else {\n      def = Joi.string().allow('');\n    }\n\n    return def;\n  }\n\n  renderTableRows(plugin) {\n    let rows = '';\n    let title = '';\n    let { formData } = this.state;\n    const errors = [];\n    const errorMessage = this.validateProperty({ name: plugin.name, value: formData[plugin.name] });\n    if (errorMessage) {\n      errors[plugin.name] = errorMessage;\n    }\n\n    switch (plugin.importance) {\n      case 'HIGH':\n        title = (\n          <span>\n            {plugin.displayName}\n            {''}\n            <i\n              className=\"fa fa-exclamation text-danger\"\n              style={{ marginleft: '2%' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n        );\n        break;\n      case 'MEDIUM':\n        title = (\n          <span>\n            {plugin.displayName}\n            <i\n              className=\"fa fa-info text-warning\"\n              style={{ marginleft: '2%' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n        );\n        break;\n      default:\n        title = <span>{plugin.displayName}</span>;\n        break;\n    }\n    let name = <code>{plugin.name}</code>;\n    let required = {};\n    if (plugin.required) {\n      required = <code style={{ color: 'red' }}>Required</code>;\n    } else {\n      required = <React.Fragment></React.Fragment>;\n    }\n\n    let documentation = (\n      <small\n        className=\"form-text text-muted\"\n        dangerouslySetInnerHTML={{ __html: plugin.documentation }}\n      ></small>\n    );\n\n    rows = (\n      <React.Fragment key={plugin.name}>\n        <td>\n          {title}\n          <br></br>\n          {name}\n          <br></br>\n          {required}\n          <br></br>\n          {documentation}\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={formData[plugin.name]}\n            name={plugin.name}\n            disabled={plugin.name === 'name' || plugin.name === 'connector.class'}\n            placeholder={plugin.defaultValue > 0 ? plugin.defaultValue : ''}\n            onChange={({ currentTarget: input }) => {\n              let { formData } = this.state;\n              formData[plugin.name] = input.value;\n              this.handleData();\n              this.setState({ formData });\n            }}\n          >\n            {formData[plugin.required]}\n          </input>\n\n          {errors[plugin.name] && (\n            <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n              {errors[plugin.name]}\n            </div>\n          )}\n          <small className=\"humanize form-text text-muted\" />\n        </td>\n      </React.Fragment>\n    );\n    return rows;\n  }\n\n  handleData() {\n    let { plugin } = this.state;\n    let actualGroup = '';\n    let sameGroup = [];\n    let allOfIt = [];\n    _(plugin.definitions)\n      .filter(plugin => plugin.name !== 'name' && plugin.name !== 'connector.class')\n      .value()\n      .forEach(definition => {\n        if (definition.group !== actualGroup) {\n          if (actualGroup === '') {\n            actualGroup = definition.group;\n            sameGroup = [definition];\n          } else {\n            allOfIt.push(this.handleGroup(sameGroup));\n            sameGroup = [definition];\n            actualGroup = definition.group;\n          }\n        } else {\n          sameGroup.push(definition);\n        }\n      });\n    allOfIt.push(this.handleGroup(sameGroup));\n    this.setState({ display: allOfIt });\n    return allOfIt;\n  }\n\n  handleGroup(group) {\n    let { formData } = this.state;\n    let groupDisplay = [\n      <tr className=\"bg-primary\">\n        <td colSpan=\"3\">{group[0].group}</td>\n      </tr>\n    ];\n\n    if (formData['transformsprops'] === undefined) {\n      formData['transformsprops'] = '{}';\n    }\n\n    group.forEach(element => {\n      const rows = this.renderTableRows(element);\n      const errors = [];\n\n      groupDisplay.push(<tr>{rows}</tr>);\n      if (element.name === 'transforms') {\n        const errorMessage = this.validateProperty({\n          name: 'transformsprops',\n          value: formData['transformsprops']\n        });\n        if (errorMessage) {\n          errors['transformsprops'] = errorMessage;\n        }\n        let transform = (\n          <React.Fragment>\n            <td>\n              <code>Transforms additional properties</code>\n              <small className=\"form-text text-muted\">\n                {`Json object to be added to configurations. example:\n                  {\n                      \"transforms.createKey.type\":\"org.apache.kafka.connect.transforms.ValueToKey\",\n                      \"transforms.createKey.fields\":\"c1\",\n                      \"transforms.extractInt.type\":\"org.apache.kafka.connect.transforms.ExtractField$Key\",\n                      \"transforms.extractInt.field\":\"c1\"\n                  }`}\n              </small>\n            </td>\n            <td>\n              <AceEditor\n                mode=\"json\"\n                id={'transformsprops'}\n                theme=\"merbivore_soft\"\n                value={formData['transformsprops']}\n                onChange={value => {\n                  let { formData } = this.state;\n                  const errors = { ...this.state.errors };\n                  const errorMessage = this.validateProperty({ name: 'transformsprops', value });\n                  if (errorMessage) {\n                    errors['transformsprops'] = errorMessage;\n                  } else {\n                    delete errors['transformsprops'];\n                  }\n                  formData['transformsprops'] = value;\n                  this.handleData();\n                  this.setState({ formData });\n                }}\n                name=\"UNIQUE_ID_OF_DIV\"\n                editorProps={{ $blockScrolling: true }}\n                style={{ width: '100%', minHeight: '25vh' }}\n              />\n              {errors['transformsprops'] && (\n                <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n                  {errors['transformsprops']}\n                </div>\n              )}\n            </td>\n          </React.Fragment>\n        );\n        groupDisplay.push(transform);\n      }\n    });\n    return groupDisplay;\n  }\n\n  renderForm() {\n    let plugin = this.getPlugin();\n    if(plugin.definitions){\n      this.setState({ plugin }, () => {\n        this.handleShema(\n          _(plugin.definitions)\n            .filter(plugin => plugin.name !== 'name' && plugin.name !== 'connector.class')\n            .value()\n        );\n        this.handleData();\n      });\n    }\n  }\n\n  getPlugin() {\n    return this.state.plugins.find(plugin => this.state.selectedType === plugin.className);\n  }\n\n  validate = () => {\n    const { error } = Joi.validate(this.state.formData, this.schema);\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) {\n      if (Object.keys(this.schema).find(el => el === item.path[0])) {\n        errors[item.path[0]] = item.message;\n      }\n    }\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  renderDropdown() {\n    const label = 'Types';\n    let items = [{ _id: '', name: '' }];\n    this.state.plugins.forEach(plugin => {\n      let name = [plugin.className, ' [', plugin.version, ']'];\n      items.push({ _id: plugin.className, name: name });\n    });\n    return (\n      <Select\n        name={'selectedType'}\n        selectClass={'col-sm-10'}\n        value={this.state.selectedType}\n        label={label}\n        items={items}\n        onChange={value => {\n          this.onTypeChange(value.target.value);\n        }}\n      />\n    );\n  }\n\n  async doSubmit() {\n    const { clusterId, connectId, formData } = this.state;\n    let body = {\n      clusterId,\n      connectId,\n      name: formData.subject\n    };\n    let configs = {};\n    Object.keys(formData).forEach(key => {\n      if (\n        key !== 'subject' &&\n        key !== 'transformsprops' &&\n        key !== 'type' &&\n        key !== 'name' &&\n        formData[key] !== ''\n      ) {\n        configs[`${key}`] = formData[key];\n      } else if (key === 'type') {\n        configs['connector.class'] = formData[key];\n      }\n    });\n\n    const transformsValue = JSON.parse(formData.transformsprops);\n    Object.keys(transformsValue).forEach(key => {\n      configs[key] = transformsValue[key];\n    });\n\n    body.configs = configs;\n\n    this.postApi(uriCreateConnect(clusterId, connectId), body)\n      .then(() => {\n        this.props.history.push({\n          pathname: `/ui/${clusterId}/connect/${connectId}`,\n        });\n\n        toast.success(`${`Connection '${formData.subject}' was created successfully`}`);\n      });\n  }\n\n  render() {\n    const { formData, selectedType } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div>\n        <form\n          encType=\"multipart/form-data\"\n          className=\"khq-form khq-form-config\"\n          onSubmit={e => {\n            e.preventDefault();\n            this.doSubmit();\n          }}\n        >\n          <Header title={'Create a definition'} history={history} />\n          {this.renderDropdown()}\n          {selectedType.length > 0 && (\n            <React.Fragment>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">{'Name'}</label>\n\n                <div className=\"col-sm-10\">\n                  <input\n                    className=\"form-control\"\n                    name=\"subject\"\n                    id=\"name\"\n                    value={formData['subject']}\n                    onChange={({ currentTarget: input }) => {\n                      let { formData } = this.state;\n                      const errors = { ...this.state.errors };\n                      const errorMessage = this.validateProperty(input);\n                      if (errorMessage) {\n                        errors[input.name] = errorMessage;\n                      } else {\n                        delete errors[input.name];\n                      }\n                      formData['subject'] = input.value;\n                      this.setState({ formData });\n                    }}\n                    placeholder=\"Subject\"\n                  />\n                </div>\n              </div>\n              <div className=\"table-responsive\">\n                <table className=\"table table-bordered table-striped mb-0 khq-form-config\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th style={{ width: '50%' }}>Name</th>\n                      <th>Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>{this.state.display}</tbody>\n                </table>\n              </div>\n\n              <div className=\"khq-submit button-footer\" style={{ marginRight: 0 }}>\n                <aside>\n                  <button type={'submit'} className=\"btn btn-primary\" disabled={this.validate()}>\n                    Create\n                  </button>\n                </aside>\n              </div>\n            </React.Fragment>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ConnectCreate);\n","import React from 'react';\nimport './styles.scss';\nimport Table from '../../../../components/Table/Table';\nimport constants from '../../../../utils/constants';\nimport {\n  uriGetDefinition,\n  uriPauseDefinition,\n  uriResumeDefinition,\n  uriRestartDefinition,\n  uriRestartTask\n} from '../../../../utils/endpoints';\nimport ConfirmModal from '../../../../components/Modal/ConfirmModal/ConfirmModal';\nimport './styles.scss';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AceEditor from 'react-ace';\nimport Root from \"../../../../components/Root\";\n\nclass ConnectTasks extends Root {\n  state = {\n    clusterId: this.props.clusterId || this.props.match.params.clusterId,\n    connectId: this.props.connectId || this.props.match.params.connectId,\n    definitionId: this.props.definitionId || this.props.match.params.clusterId,\n    definition: {},\n    definitionModifyMessage: '',\n    definitionModifyData: {},\n    tableData: [],\n    showActionModal: false,\n    actionMessage: '',\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true\n  };\n\n  definitionState = {\n    PAUSE: 'PAUSE',\n    RESUME: 'RESUME',\n    RESTART: 'RESTART',\n    RESTART_TASK: 'RESTART_TASK'\n  };\n\n  componentDidMount() {\n    this.getDefinition();\n  }\n\n  handleTasks() {\n    const tasks = this.state.definition.tasks || [];\n    let tableData = [];\n    tasks.forEach(task => {\n      tableData.push({\n        id: JSON.stringify(task.id),\n        worker: task.workerId,\n        state: task.state,\n        trace: task.trace\n      });\n    });\n    this.setState({ tableData, loading: false });\n  }\n\n  async getDefinition() {\n    let definition = {};\n    const { clusterId, connectId, definitionId } = this.state;\n\n    this.setState({ loading: true });\n    definition = await this.getApi(uriGetDefinition(clusterId, connectId, definitionId));\n    this.setState({ definition: definition.data }, () => this.handleTasks());\n  }\n\n  modifyDefinitionState = () => {\n    const { definitionId } = this.state;\n    const { uri, action, taskId } = this.state.definitionModifyData;\n\n    this.getApi(uri)\n      .then(() => this.getDefinition())\n      .then(() => {\n        toast.success(\n          `${\n            taskId !== undefined\n              ? `Definition '${definitionId}' tasks ${taskId} is restarted`\n              : `Definition '${definitionId}' is ${action}`\n          }`\n        );\n        this.closeActionModal();\n      });\n  };\n\n  showActionModal = definitionModifyMessage => {\n    this.setState({ showActionModal: true, definitionModifyMessage });\n  };\n\n  closeActionModal = () => {\n    this.setState({\n      showActionModal: false,\n      definitionModifyMessage: '',\n      definitionModifyData: {}\n    });\n  };\n\n  handleAction = (option, taskId) => {\n    const { clusterId, connectId, definitionId } = this.state;\n    let uri = '';\n    let action = '';\n    let failedAction = '';\n\n    switch (option) {\n      case 'PAUSE':\n        uri = uriPauseDefinition(clusterId, connectId, definitionId);\n        action = 'paused';\n        failedAction = 'pause';\n        break;\n      case 'RESUME':\n        uri = uriResumeDefinition(clusterId, connectId, definitionId);\n        action = 'resumed';\n        failedAction = 'resume';\n        break;\n      case 'RESTART':\n        uri = uriRestartDefinition(clusterId, connectId, definitionId);\n        action = 'restarted';\n        failedAction = 'restart';\n        break;\n      case 'RESTART_TASK':\n        uri = uriRestartTask(clusterId, connectId, definitionId, taskId);\n        action = 'restarted';\n        failedAction = 'restart';\n        break;\n      default:\n        uri = uriResumeDefinition(clusterId, connectId, definitionId);\n        action = 'resumed';\n        failedAction = 'resume';\n        break;\n    }\n\n    let definitionModifyData = {\n      uri,\n      action,\n      failedAction\n    };\n\n    if (taskId !== undefined) definitionModifyData.taskId = taskId;\n\n    this.setState({ definitionModifyData }, () => {\n      this.showActionModal(\n        taskId !== undefined ? (\n          <React.Fragment>\n            Do you want to restart task:{' '}\n            {\n              <code>\n                {taskId} from {this.state.definitionId}\n              </code>\n            }{' '}\n            ?\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            Do you want to {failedAction} definition: {<code>{this.state.definitionId}</code>} ?\n          </React.Fragment>\n        )\n      );\n    });\n  };\n\n  renderTask = task => {\n    let className = 'btn btn-sm mb-1 btn-';\n    switch (task) {\n      case 'RUNNING':\n        className += 'success';\n        break;\n      case 'FAILED':\n        className += 'danger';\n        break;\n      default:\n        className += 'warning';\n        break;\n    }\n    return <span className={`btn btn-sm mb-1 ${className}`}>{task}</span>;\n  };\n\n  render() {\n    const { tableData, definition, loading } = this.state;\n    const roles = this.state.roles || {};\n    return (\n      <div className=\"tab-pane active\" role=\"tabpanel\">\n        <div className=\"table-responsive\">\n          <Table\n            loading={loading}\n            history={this.props.history}\n            columns={[\n              {\n                id: 'id',\n                name: 'id',\n                accessor: 'id',\n                colName: 'Id',\n                type: 'text',\n                sortable: true\n              },\n              {\n                id: 'worker',\n                name: 'worker',\n                accessor: 'worker',\n                colName: 'Worker',\n                type: 'text',\n                sortable: true\n              },\n              {\n                id: 'state',\n                name: 'state',\n                accessor: 'state',\n                colName: 'State',\n                type: 'text',\n                cell: (obj, col) => {\n                  return this.renderTask(obj[col.accessor]);\n                }\n              },\n              {\n                id: 'trace',\n                name: 'trace',\n                accessor: 'trace',\n                colName: 'Trace',\n                type: 'text',\n                extraRow: true,\n                extraRowContent: (obj, index) => {\n                  return (\n                    <AceEditor\n                      mode=\"text\"\n                      id={'value' + index}\n                      theme=\"merbivore_soft\"\n                      value={obj.trace}\n                      readOnly\n                      name=\"UNIQUE_ID_OF_DIV\"\n                      editorProps={{ $blockScrolling: true }}\n                      style={{ width: '100%', minHeight: '25vh' }}\n                    />\n                  );\n                },\n                cell: (obj) => {\n                  return obj.trace ? (\n                    <pre className=\"mb-0 khq-data-highlight\">\n                      <code>{obj.trace}</code>\n                    </pre>\n                  ) : null;\n                }\n              }\n            ]}\n            extraRow\n            noStripes\n            data={tableData}\n            updateData={data => {\n              this.setState({ tableData: data });\n            }}\n            actions={\n              roles.connect && roles.connect['connect/state/update'] && [constants.TABLE_RESTART]\n            }\n            onRestart={row => {\n              this.handleAction(this.definitionState.RESTART_TASK, row.id);\n            }}\n          />\n        </div>\n        {roles.connect && roles.connect['connect/state/update'] && (\n          <aside>\n            {definition.paused ? (\n              <li className=\"aside-button\">\n                <div\n                  //href=\"#\"\n                  className=\"btn btn-primary mr-2\"\n                  onClick={() => this.handleAction(this.definitionState.RESUME)}\n                >\n                  <i className=\"fa fa-play\" aria-hidden=\"true\" /> Resume Definition\n                </div>\n              </li>\n            ) : (\n              <React.Fragment>\n                <li className=\"aside-button\">\n                  <div\n                    //href=\"#\"\n                    type=\"pause\"\n                    className=\"btn btn-primary mr-2\"\n                    onClick={() => this.handleAction(this.definitionState.PAUSE)}\n                  >\n                    <i className=\"fa fa-pause\" aria-hidden=\"true\" /> Pause Definition\n                  </div>\n                </li>\n\n                <li className=\"aside-button\">\n                  <div\n                    //href=\"#\"\n                    className=\"btn btn-primary mr-2\"\n                    onClick={() => this.handleAction(this.definitionState.RESTART)}\n                  >\n                    <i className=\"fa fa-refresh\" aria-hidden=\"true\" /> Restart Definition\n                  </div>\n                </li>\n              </React.Fragment>\n            )}\n          </aside>\n        )}\n        <ConfirmModal\n          show={this.state.showActionModal}\n          handleCancel={this.closeActionModal}\n          handleConfirm={this.modifyDefinitionState}\n          message={this.state.definitionModifyMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectTasks;\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport './styles.scss';\nimport {\n  uriConnectDefinitionConfigs,\n  uriConnectPlugin,\n  uriUpdateDefinition\n} from '../../../../utils/endpoints';\nimport constants from '../../../../utils/constants';\nimport Form from '../../../../components/Form/Form';\nimport AceEditor from 'react-ace';\nimport _ from 'lodash';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass ConnectConfigs extends Form {\n  state = {\n    clusterId: this.props.match.params.clusterId,\n    connectId: this.props.match.params.connectId,\n    definitionId: this.props.match.params.definitionId,\n    formData: {},\n    errors: {},\n    configs: {},\n    plugin: {},\n    config: {},\n    selectedType: '',\n    display: '',\n    roles: JSON.parse(sessionStorage.getItem('roles'))\n  };\n\n  schema = {};\n  componentDidMount() {\n    this.getConfigs();\n  }\n\n  async getConfigs() {\n    const { connectId, clusterId, definitionId } = this.state;\n    let configs = [];\n\n    configs = await this.getApi(uriConnectDefinitionConfigs(clusterId, connectId, definitionId));\n    this.setState({ configs: configs.data }, () => {\n      const pluginId = this.state.configs['connector.class'];\n      this.getPlugin(pluginId);\n    });\n  }\n\n  async getPlugin(pluginId) {\n    const { connectId, clusterId } = this.state;\n    let plugin = {};\n\n    plugin = await this.getApi(uriConnectPlugin(clusterId, connectId, pluginId));\n    this.setState({ plugin: plugin.data }, () => {\n      this.renderForm();\n    });\n  }\n\n  handleSchema = definitions => {\n    this.schema = {};\n    let { formData } = { ...this.state };\n    formData.type = this.getConfigValue('connector.class');\n    this.schema['type'] = Joi.string().required();\n    formData.name = this.getConfigValue('name');\n    this.schema['name'] = Joi.string().required();\n\n    definitions.forEach(definition => {\n      formData[definition.name] = this.getConfigValue(definition.name);\n      this.schema[definition.name] = this.handleDefinition(definition);\n      if (definition.name === 'transforms') {\n        formData['transformsprops'] = this.getTransformAdditionalProperties() || '{}';\n        this.schema['transformsprops'] = Joi.object().required();\n      }\n    });\n    this.setState({ formData });\n  };\n\n  getConfigValue = name => {\n    const { configs } = this.state;\n    const existingConfig = Object.keys(configs).find(configKey => configKey === name);\n\n    return existingConfig ? configs[existingConfig] : '';\n  };\n\n  getTransformAdditionalProperties() {\n    const { configs } = this.state;\n    const filtered = Object.keys(configs).filter(configKey => configKey.startsWith('transforms.'))\n        .reduce((obj, configKey) => {\n          obj[configKey] = configs[configKey];\n          return obj;\n        }, {});\n    return JSON.stringify(filtered, null, 2);\n  };\n\n\n  handleDefinition = definition => {\n    let def = '';\n    if (definition.required) {\n      switch (definition.type) {\n        case constants.TYPES.LONG:\n        case constants.TYPES.INT:\n        case constants.TYPES.DOUBLE:\n        case constants.TYPES.SHORT:\n          def = Joi.number().required();\n          break;\n        case constants.TYPES.PASSWORD:\n          def = Joi.string().required();\n          break;\n        case constants.TYPES.BOOLEAN:\n          def = Joi.boolean().required();\n          break;\n        default:\n          def = Joi.string().required();\n          break;\n      }\n    } else {\n      switch (definition.type) {\n        case constants.TYPES.LONG:\n        case constants.TYPES.INT:\n        case constants.TYPES.DOUBLE:\n        case constants.TYPES.SHORT:\n          def = Joi.number().allow('');\n          break;\n\n        case constants.TYPES.BOOLEAN:\n          def = Joi.boolean().allow('');\n          break;\n        default:\n          def = Joi.string().allow('');\n          break;\n      }\n    }\n    return def;\n  };\n\n  renderTableRows(plugin) {\n    let rows = '';\n    let title = '';\n    let { formData } = this.state;\n    const errors = [];\n    const roles = this.state.roles || {};\n    const errorMessage = this.validateProperty({ name: plugin.name, value: formData[plugin.name] });\n    if (errorMessage) {\n      errors[plugin.name] = errorMessage;\n    }\n\n    switch (plugin.importance) {\n      case 'HIGH':\n        title = (\n          <span>\n            {plugin.displayName}{' '}\n            <i\n              className=\"fa fa-exclamation text-danger\"\n              style={{ marginleft: '2%' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n        );\n        break;\n      case 'MEDIUM':\n        title = (\n          <span>\n            {plugin.displayName}{' '}\n            <i\n              className=\"fa fa-info text-warning\"\n              style={{ marginleft: '2%' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n        );\n        break;\n      default:\n        title = <span>{plugin.displayName}</span>;\n        break;\n    }\n    let name = <code>{plugin.name}</code>;\n    let required = {};\n    if (plugin.required) {\n      required = <code style={{ color: 'red' }}>Required</code>;\n    } else {\n      required = <React.Fragment></React.Fragment>;\n    }\n\n    let documentation = <small className=\"form-text text-muted\">{plugin.documentation}</small>;\n\n    rows = (\n      <React.Fragment key={plugin.name}>\n        <td>\n          {title}\n          <br />\n          {name}\n          <br />\n          {required}\n          <br />\n          {documentation}\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={formData[plugin.name]}\n            name={plugin.name}\n            disabled={plugin.name === 'name' || plugin.name === 'connector.class' || !(roles.connect && roles.connect['connect/update']) }\n            placeholder={plugin.defaultValue > 0 ? plugin.defaultValue : ''}\n            onChange={({ currentTarget: input }) => {\n              let { formData } = this.state;\n              formData[plugin.name] = input.value;\n              this.handleData();\n              this.setState({ formData });\n            }}\n          >\n            {formData[plugin.required]}\n          </input>\n\n          {errors[plugin.name] && (\n            <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n              {errors[plugin.name]}\n            </div>\n          )}\n          <small className=\"humanize form-text text-muted\" />\n        </td>\n      </React.Fragment>\n    );\n    return rows;\n  }\n\n  handleData = () => {\n    let { plugin } = this.state;\n    let actualGroup = '';\n    let sameGroup = [];\n    let allOfIt = [];\n    _(plugin.definitions)\n      .filter(plugin => plugin.name !== 'name' && plugin.name !== 'connector.class')\n      .value()\n      .forEach(definition => {\n        if (definition.group !== actualGroup) {\n          if (actualGroup === '') {\n            actualGroup = definition.group;\n            sameGroup = [definition];\n          } else {\n            allOfIt.push(this.handleGroup(sameGroup));\n            sameGroup = [definition];\n            actualGroup = definition.group;\n          }\n        } else {\n          sameGroup.push(definition);\n        }\n      });\n    allOfIt.push(this.handleGroup(sameGroup));\n    this.setState({ display: allOfIt });\n  };\n\n  handleGroup(group) {\n    let { formData } = this.state;\n    let groupDisplay = [\n      <tr className=\"bg-primary\">\n        <td colSpan=\"3\">{group[0].group}</td>\n      </tr>\n    ];\n\n    group.forEach(element => {\n      const rows = this.renderTableRows(element);\n      const errors = [];\n      const roles = this.state.roles || {};\n\n      groupDisplay.push(<tr>{rows}</tr>);\n      if (element.name === 'transforms') {\n        const errorMessage = this.validateProperty({\n          name: 'transformsprops',\n          value: formData['transformsprops']\n        });\n        if (errorMessage) {\n          errors['transformsprops'] = errorMessage;\n        }\n        let transform = (\n          <React.Fragment>\n            <td>\n              <code>Transforms additional properties</code>\n              <small className=\"form-text text-muted\">\n                {`Json object to be added to configurations. example:\n                  {\n                      \"transforms.createKey.type\":\"org.apache.kafka.connect.transforms.ValueToKey\",\n                      \"transforms.createKey.fields\":\"c1\",\n                      \"transforms.extractInt.type\":\"org.apache.kafka.connect.transforms.ExtractField$Key\",\n                      \"transforms.extractInt.field\":\"c1\"\n                  }`}\n              </small>\n            </td>\n            <td>\n              <AceEditor\n                mode=\"json\"\n                id={'transformsprops'}\n                theme=\"merbivore_soft\"\n                value={formData['transformsprops']}\n                onChange={value => {\n                  let { formData } = this.state;\n                  const errors = { ...this.state.errors };\n                  const errorMessage = this.validateProperty({ name: 'transformsprops', value });\n                  if (errorMessage) {\n                    errors['transformsprops'] = errorMessage;\n                  } else {\n                    delete errors['transformsprops'];\n                  }\n                  formData['transformsprops'] = value;\n                  this.handleData();\n                  this.setState({ formData });\n                }}\n                name=\"UNIQUE_ID_OF_DIV\"\n                readOnly={!(roles.connect && roles.connect['connect/update'])}\n                editorProps={{ $blockScrolling: true }}\n                style={{ width: '100%', minHeight: '25vh' }}\n              />\n              {errors['transformsprops'] && (\n                <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n                  {errors['transformsprops']}\n                </div>\n              )}\n            </td>\n          </React.Fragment>\n        );\n        groupDisplay.push(transform);\n      }\n    });\n    return groupDisplay;\n  }\n\n  renderForm = () => {\n    const { plugin } = this.state;\n    this.handleSchema(plugin.definitions);\n    this.handleData();\n  };\n\n  async doSubmit() {\n    const { clusterId, connectId, definitionId, formData } = this.state;\n    let body = {\n      name: formData.name\n    };\n    let configs = {};\n    Object.keys(formData).forEach(key => {\n      if (\n        key !== 'subject' &&\n        key !== 'transformsprops' &&\n        key !== 'type' &&\n        key !== 'name' &&\n        formData[key] !== ''\n      ) {\n        configs[`${key}`] = formData[key];\n      } else if (key === 'type') {\n        configs['connector.class'] = formData[key];\n      }\n    });\n\n    const transformsValue = JSON.parse(formData.transformsprops);\n    Object.keys(transformsValue).forEach(key => {\n      configs[key] = transformsValue[key];\n    });\n\n    body.configs = configs;\n\n    const { history } = this.props;\n\n    await this.postApi(uriUpdateDefinition(clusterId, connectId, definitionId), body);\n\n    history.push({\n      pathname: `/ui/${clusterId}/connect/${connectId}`,\n    });\n\n    toast.success(`${`Definition '${formData.name}' is updated`}`);\n  }\n\n  render() {\n    const { plugin, display } = this.state;\n    const { name } = this.state.formData;\n    const roles = this.state.roles || {};\n    return (\n      <div>\n        <form\n          encType=\"multipart/form-data\"\n          className=\"khq-form khq-form-config\"\n          onSubmit={e => this.handleSubmit(e)}\n        >\n          {plugin && (\n            <React.Fragment>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">Type</label>\n                <div className=\"col-sm-10\">\n                  <select disabled className=\"form-control\" name=\"type\" id=\"type\">\n                    <option>{plugin.shortClassName}</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">{'Name'}</label>\n                <div className=\"col-sm-10\">\n                  <input\n                    className=\"form-control\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    disabled\n                    placeholder=\"Subject\"\n                  />\n                </div>\n              </div>\n              <div className=\"table-responsive\">\n                <table className=\"table table-bordered table-striped mb-0 khq-form-config\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th style={{ width: '50%' }}>Name</th>\n                      <th>Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>{display}</tbody>\n                </table>\n              </div>\n              {roles.connect && roles.connect['connect/update'] && (\n                <div style={{ left: 0, width: '100%' }} className=\"khq-submit\">\n                  <button\n                    type={'submit'}\n                    className=\"btn btn-primary\"\n                    style={{ marginRight: '2%' }}\n                    disabled={this.validate()}\n                  >\n                    Update\n                  </button>\n                </div>\n              )}\n            </React.Fragment>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ConnectConfigs;\n","import React, { Component } from 'react';\nimport Header from '../../Header/Header';\nimport ConnectTasks from './ConnectTasks/ConnectTasks';\nimport ConnectConfigs from './ConnectConfigs/ConnectConfigs';\nimport {getSelectedTab} from \"../../../utils/functions\";\nimport {Link} from \"react-router-dom\";\n\nclass Connect extends Component {\n  state = {\n    clusterId: this.props.history.clusterId || this.props.match.params.clusterId,\n    connectId: this.props.history.connectId || this.props.match.params.connectId,\n    definitionId: this.props.history.definitionId || this.props.match.params.definitionId,\n    selectedTab: 'tasks'\n  };\n\n  tabs = ['tasks', 'configs'];\n\n  componentDidMount() {\n    const { clusterId, connectId, definitionId } = this.props.match.params;\n    const tabSelected = getSelectedTab(this.props, this.tabs);\n    this.setState({ selectedTab: (tabSelected)? tabSelected : 'tasks' },\n        () => {\n          this.props.history.replace(`/ui/${clusterId}/connect/${connectId}/definition/${definitionId}/${this.state.selectedTab}`);\n        });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      const tabSelected = getSelectedTab(this.props, this.tabs);\n      this.setState({ selectedTab: tabSelected });\n    }\n  }\n\n  tabClassName = tab => {\n    const { selectedTab } = this.state;\n    return selectedTab === tab ? 'nav-link active' : 'nav-link';\n  };\n\n  renderSelectedTab() {\n    const { clusterId, connectId, definitionId, selectedTab } = this.state;\n    const { history, match } = this.props;\n\n    switch (selectedTab) {\n      case 'tasks':\n        return (\n          <ConnectTasks\n            clusterId={clusterId}\n            connectId={connectId}\n            definitionId={definitionId}\n            history={history}\n            match={match}\n          />\n        );\n      case 'configs':\n        return (\n          <ConnectConfigs\n            clusterId={clusterId}\n            connectId={connectId}\n            definitionId={definitionId}\n            history={history}\n            match={match}\n          />\n        );\n      default:\n        return (\n          <ConnectTasks\n            clusterId={clusterId}\n            connectId={connectId}\n            definitionId={definitionId}\n            history={history}\n            match={match}\n          />\n        );\n    }\n  }\n\n  render() {\n    const { clusterId, connectId, definitionId } = this.state;\n\n    return (\n      <div>\n        <Header title={`Connect: ${definitionId}`} history={this.props.history} />\n        <div className=\"tabs-container\">\n          <ul className=\"nav nav-tabs\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/connect/${connectId}/definition/${definitionId}/tasks`}\n                className={this.tabClassName('tasks')}\n              >\n                Tasks\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/connect/${connectId}/definition/${definitionId}/configs`}\n                className={this.tabClassName('configs')}\n              >\n                Configs\n              </Link>\n            </li>\n          </ul>\n\n          <div className=\"tab-content\">\n            <div className=\"tab-pane active\" role=\"tabpanel\">\n              {this.renderSelectedTab()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Connect;\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../../../components/Form/Form';\nimport Header from '../../Header';\nimport { uriTopicsCreate, uriTopicDefaultConf } from '../../../utils/endpoints';\nimport { toast } from 'react-toastify';\n\nclass TopicCreate extends Form {\n  state = {\n    formData: {\n      name: '',\n      partition: 1,\n      replication: 1,\n      cleanup: 'delete',\n      retention: 86400000\n    },\n    errors: {}\n  };\n\n  componentDidMount() {\n    this.getTopicDefaultConf();\n  }\n\n  async getTopicDefaultConf() {\n    let { formData } = { ...this.state }\n    const defaults = await this.getApi(uriTopicDefaultConf());\n\n    formData.retention = defaults.data.retention\n    formData.partition = defaults.data.partition\n    formData.replication = defaults.data.replication\n\n    this.setState({ formData });\n  }\n\n  schema = {\n    name: Joi.string()\n      .required()\n      .label('Name'),\n    partition: Joi.number()\n      .min(1)\n      .label('Partition')\n      .required(),\n    replication: Joi.number()\n      .min(1)\n      .label('Replication')\n      .required(),\n    cleanup: Joi.string().required(),\n    retention: Joi.number().label('Retention')\n  };\n\n  onCleanupChange = value => {\n    let { formData } = { ...this.state };\n    formData.cleanup = value;\n\n    this.setState({ formData });\n  };\n\n  async doSubmit() {\n    const { formData } = this.state;\n    const { clusterId } = this.props.match.params;\n    const topic = {\n      cluster: clusterId,\n      name: formData.name,\n      partition: formData.partition,\n      replication: formData.replication,\n      configs: {\n        'cleanup.policy': formData.cleanup === 'deleteAndCompact' ? '' : formData.cleanup,\n        'retention.ms': formData.retention\n      }\n    };\n\n    this.postApi(uriTopicsCreate(clusterId), topic)\n      .then(() => {\n        this.props.history.push({\n          pathname: `/ui/${clusterId}/topic`,\n        });\n        toast.success(`Topic '${formData.name}' is created`);\n      });\n  }\n  render() {\n    return (\n      <div>\n        <form\n          encType=\"multipart/form-data\"\n          className=\"khq-form khq-form-config\"\n          onSubmit={() => this.doSubmit()}\n        >\n          <Header title=\"Create a topic\" history={this.props.history} />\n          {this.renderInput('name', 'Name', 'Name')}\n          {this.renderInput('partition', 'Partition', 'Partition', 'number')}\n          {this.renderInput('replication', 'Replicator Factor', 'Replicator Factor', 'number')}\n          {this.renderRadioGroup(\n            'cleanup',\n            'Cleanup Policy',\n            ['Delete', 'Compact', 'Delete and Compact'],\n            this.onCleanupChange\n          )}\n          {this.renderInput('retention', 'Retention', 'Retention', 'number')}\n\n          {this.renderButton(\n            'Create',\n            () => {\n              this.doSubmit();\n            },\n            undefined,\n            'button'\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TopicCreate);\n","import TopicProduce from './TopicProduce';\n\nexport default TopicProduce;\n","import React from 'react';\nimport Form from '../../../components/Form/Form';\nimport Header from '../../Header';\nimport Joi from 'joi-browser';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { formatDateTime } from '../../../utils/converters';\nimport { popProduceToTopicValues } from '../../../utils/localstorage';\nimport {\n  uriTopics,\n  uriPreferredSchemaForTopic,\n  uriTopicsPartitions,\n  uriTopicsProduce\n} from '../../../utils/endpoints';\nimport moment from 'moment';\nimport DatePicker from '../../../components/DatePicker';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass TopicProduce extends Form {\n  state = {\n    partitions: [],\n    nHeaders: 1,\n    formData: {\n      partition: '',\n      key: '',\n      hKey0: '',\n      hValue0: '',\n      value: '',\n      keyValueSeparator: ':'\n    },\n    datetime: new Date(),\n    openDateModal: false,\n    errors: {},\n    selectableValueFormats: [\n      { _id: 'string', name: 'string' },\n      { _id: 'json', name: 'json' }\n    ],\n    keySchema: [],\n    keySchemaSearchValue: '',\n    selectedKeySchema: '',\n    valueSchema: [],\n    valueSchemaSearchValue: '',\n    selectedValueSchema: '',\n    clusterId: '',\n    topicId: '',\n    topics: [],\n    topicsSearchValue: '',\n    multiMessage: false,\n    tombstone: false,\n    valuePlaceholder: '{\"param\": \"value\"}'\n  };\n\n  schema = {\n    partition: Joi.number()\n      .allow(null)\n      .label('Partition'),\n    key: Joi.string()\n      .allow('')\n      .label('Key'),\n    hKey0: Joi.string()\n      .allow('')\n      .label('hKey0'),\n    hValue0: Joi.string()\n      .allow('')\n      .label('hValue0'),\n    value: Joi.string()\n      .allow('')\n      .label('Value'),\n    keyValueSeparator: Joi.string()\n      .min(1)\n      .label('keyValueSeparator')\n  };\n\n  async componentDidMount() {\n    const { clusterId, topicId } = this.props.match.params;\n\n    let response = await this.getApi(uriTopicsPartitions(clusterId, topicId));\n    let partitions = response.data.map(item => {\n      return { name: item.id, _id: Number(item.id) };\n    });\n    partitions.unshift({name: 'auto assign', _id: null});\n\n    this.setState(({\n      partitions,\n      topicId,\n      formData: {\n        ...this.state.formData,\n        partition: partitions[0]._id,\n      },\n    }));\n\n    await this.getPreferredSchemaForTopic();\n    const topicEventData = popProduceToTopicValues();\n    if (Object.keys(topicEventData).length) {\n      await this.initByTopicEvent(topicEventData);\n    }\n\n    this.setState({ clusterId, topicId });\n\n    this.initAvailableTopics();\n  }\n\n  async initAvailableTopics() {\n    const {clusterId} = this.props.match.params;\n\n    const topics = [];\n    let page = 0;\n    let topicResponseData = {};\n    do {\n      page = page + 1;\n      topicResponseData = await this.getApi(uriTopics(clusterId, '', '', page))\n          .then(res => res.data);\n      topicResponseData.results\n          .forEach(topicData => topics.push(topicData.name));\n    } while(page < topicResponseData.pages);\n\n    this.setState({\n      topics,\n    });\n  }\n\n  async getPreferredSchemaForTopic() {\n    const { clusterId } = this.props.match.params;\n    let schema = await this.getApi(uriPreferredSchemaForTopic(clusterId, this.state.topicId));\n    let keySchema = [];\n    let valueSchema = [];\n    schema.data && schema.data.key && schema.data.key.map(index => keySchema.push(index));\n    schema.data && schema.data.value && schema.data.value.map(index => valueSchema.push(index));\n    this.setState({ keySchema: keySchema, valueSchema: valueSchema });\n  }\n\n  async initByTopicEvent(copyValues) {\n    const {header, keySchemaId, valueSchemaId, ...topicValuesDefault} = copyValues;\n\n    const keySchema = this.state.keySchema.find(schema => schema.id === keySchemaId);\n    const valueSchema = this.state.valueSchema.find(schema => schema.id === valueSchemaId);\n\n    this.setState(({\n      formData: {\n        ...this.state.formData,\n        ...topicValuesDefault,\n      },\n      selectedKeySchema: keySchema ? keySchema.subject : '',\n      selectedValueSchema: valueSchema ? valueSchema.subject : '',\n      nHeaders: Object.keys(header).length ? 0 : 1\n    }));\n\n    Object.entries(header).forEach(([key, value]) => this.handlePlus(key, value));\n  }\n\n  doSubmit() {\n    const {\n      formData,\n      topicId,\n      datetime,\n      selectedKeySchema,\n      selectedValueSchema,\n      keySchema,\n      valueSchema,\n      multiMessage,\n      tombstone\n    } = this.state;\n    const { clusterId } = this.props.match.params;\n\n    let schemaKeyToSend = keySchema.find(key => key.subject === selectedKeySchema);\n    let schemaValueToSend = valueSchema.find(value => value.subject === selectedValueSchema);\n    let value;\n    if (tombstone) {\n      value = null;\n    } else {\n      value = multiMessage ? formData.value : JSON.parse(JSON.stringify(formData.value))\n    }\n    const topic = {\n      clusterId,\n      topicId,\n      topics: [topicId],\n      partition: formData.partition,\n      key: formData.key,\n      timestamp: datetime.toISOString(),\n      value: value,\n      keySchema: schemaKeyToSend ? schemaKeyToSend.id : '',\n      valueSchema: schemaValueToSend ? schemaValueToSend.id : '',\n      multiMessage: multiMessage,\n      keyValueSeparator: formData.keyValueSeparator\n    };\n\n    let headers = {};\n    Object.keys(formData).forEach(key => {\n      if (key.includes('hKey')) {\n        let keyNumbers = key.replace(/\\D/g, '');\n        headers[formData[key]] = formData[`hValue${keyNumbers}`];\n      }\n    });\n\n    topic.headers = headers;\n\n    this.postApi(uriTopicsProduce(clusterId, topicId), topic)\n      .then(() => {\n        this.props.history.push({\n          pathname: `/ui/${clusterId}/topic/${topicId}`,\n        });\n        toast.success(`Produced to ${topicId}.`);\n      });\n  }\n\n  renderMultiMessage(tombstone) {\n    const { formData, multiMessage } = this.state;\n\n    return (\n      <div className=\"form-group row\">\n        <label className=\"col-sm-2 col-form-label\">Multi message</label>\n          <div className=\"row khq-multiple col-sm-7\">\n            {this.renderCheckbox(\n              'isMultiMessage',\n              '',\n              multiMessage,\n              () => {\n                this.setState({multiMessage: !multiMessage,\n                  valuePlaceholder: this.getPlaceholderValue(!multiMessage, formData.keyValueSeparator)})\n              },\n              false,\n              { disabled: tombstone }\n            )}\n\n            <label className=\"col-auto col-form-label\">Separator</label>\n            <input\n                type='text'\n                name='keyValueSeparator'\n                id='keyValueSeparator'\n                placeholder=':'\n                className='col-sm-2 form-control'\n                disabled={ !multiMessage }\n                onChange={\n                    event => {\n                        this.setState({\n                            formData: { ...formData,\n                                keyValueSeparator: event.target.value},\n                            valuePlaceholder: this.getPlaceholderValue(!multiMessage, event.target.value)})\n                    }\n                }\n            />\n          </div>\n      </div>\n    );\n  }\n\n  renderTombstone(multiMessage) {\n    const { tombstone } = this.state;\n\n    return (\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Tombstone</label>\n          <div className=\"row khq-multiple col-sm-7\">\n            {this.renderCheckbox(\n                'isTombstone',\n                '',\n                tombstone,\n                () => {\n                  this.setState({tombstone: !tombstone} )\n                },\n                false,\n                { disabled: multiMessage }\n            )}\n          </div>\n        </div>\n    );\n  }\n\n  getPlaceholderValue(isMultiMessage, keyValueSeparator) {\n    if(isMultiMessage) {\n      return 'key1' + keyValueSeparator + '{\"param\": \"value1\"}\\n'\n        + 'key2' + keyValueSeparator + '{\"param\": \"value2\"}';\n    } else {\n        return '{\"param\": \"value\"}';\n    }\n  }\n\n  renderHeaders() {\n    let headers = [];\n\n    Object.keys(this.state.formData).forEach(key => {\n      if (key.includes('hKey')) {\n        let keyNumbers = key.replace(/\\D/g, '');\n        headers.push(this.renderHeader(Number(keyNumbers)));\n      }\n    });\n    return <div data-testId=\"headers\">{headers.map(head => head)}</div>;\n  }\n\n  renderHeader(position) {\n    return (\n      <div className=\"row header-wrapper\">\n        <label className=\"col-sm-2 col-form-label\">{position === 0 ? 'Header' : ''}</label>\n\n        <div className=\"row col-sm-10 khq-multiple\">\n          <div>\n            {this.renderInput(\n              `hKey${position}`,\n              '',\n              'Key',\n              'text',\n              undefined,\n              true,\n              'col-sm-6',\n              'input-class'\n            )}\n\n            {this.renderInput(\n              `hValue${position}`,\n              '',\n              'Value',\n              'text',\n              undefined,\n              true,\n              'col-sm-6',\n              'input-class'\n            )}\n          </div>\n          <div className=\"add-button\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testId={`button_${position}`}\n              onClick={() => {\n                position === 0 ? this.handlePlus() : this.handleRemove(position);\n              }}\n            >\n              <i className={`fa ${position === 0 ? 'fa-plus' : 'fa-trash'}`}></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handlePlus(providedKey, providedValue) {\n    const { formData, nHeaders } = this.state;\n\n    let newFormData = {\n      ...formData,\n      [`hKey${nHeaders}`]: providedKey || '',\n      [`hValue${nHeaders}`]: providedValue || '',\n    };\n    this.schema = {\n      ...this.schema,\n      [`hKey${nHeaders}`]: Joi.string()\n        .min(1)\n        .label(`hKey${nHeaders}`),\n      [`hValue${nHeaders}`]: Joi.string()\n        .min(1)\n        .label(`hValue${nHeaders}`)\n    };\n    this.setState({ nHeaders: this.state.nHeaders + 1, formData: newFormData });\n  }\n\n  handleRemove(position) {\n    const state = {\n      ...this.state\n    };\n    delete state.formData[`hKey${position}`];\n    delete state.formData[`hValue${position}`];\n    this.setState(state);\n  }\n\n  renderResults = (results, searchValue, selectedValue, tag) => {\n    return (\n      <div style={{ maxHeight: '678px', overflowY: 'auto', minHeight: '89px' }}>\n        <ul\n          className=\"dropdown-menu inner show\"\n          role=\"presentation\"\n          style={{ marginTop: '0px', marginBottom: '0px' }}\n        >\n          {results\n            .filter(key => {\n              if (searchValue.length > 0) {\n                return key.includes(searchValue);\n              }\n              return results;\n            })\n            .map((key, index) => {\n              let selected = selectedValue === key ? 'selected' : '';\n              return (\n                <li>\n                  <Tooltip\n                    title={\n                      selectedValue === key && tag !== 'topicId' ? 'Click to unselect option' : 'Click to select option'\n                    }\n                  >\n                    <div\n                      onClick={e => {\n                        if (tag === 'key') {\n                          selectedValue === key\n                            ? this.setState({ selectedKeySchema: '' })\n                            : this.setState({ selectedKeySchema: key });\n                        } else if (tag === 'value') {\n                          selectedValue === key\n                            ? this.setState({ selectedValueSchema: '' })\n                            : this.setState({ selectedValueSchema: key });\n                        } else if (tag === 'topicId') {\n                          if( selectedValue !== key) {\n                            this.setState({topicId: key});\n                            this.getPreferredSchemaForTopic();\n                          }\n                        }\n                      }}\n                      role=\"option\"\n                      className={`dropdown-item ${selected}`}\n                      id={`bs-select-${index}-0`}\n                      aria-selected=\"false\"\n                    >\n                      <span className=\"text\">{key}</span>\n                    </div>\n                  </Tooltip>\n                </li>\n              );\n            })}\n        </ul>{' '}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      topicId,\n      topics,\n      topicsSearchValue,\n      formData,\n      partitions,\n      datetime,\n      keySchema,\n      keySchemaSearchValue,\n      selectedKeySchema,\n      valueSchema,\n      valueSchemaSearchValue,\n      selectedValueSchema,\n      multiMessage,\n      tombstone\n    } = this.state;\n    let date = moment(datetime);\n    return (\n      <div>\n        <form encType=\"multipart/form-data\" className=\"khq-form khq-form-config\">\n            <Header title={`Produce to ${topicId} `} />\n            {this.renderDropdown(\n                'Topic',\n                topics,\n                topicsSearchValue,\n                topicId,\n                value => {\n                  this.setState({\n                    topicsSearchValue: value.target.value\n                  });\n                },\n                this.renderResults(\n                    topics,\n                    topicsSearchValue,\n                    topicId,\n                    'topicId'\n                )\n            )}\n            {this.renderSelect('partition', 'Partition', partitions, value => {\n              this.setState({ formData: { ...formData, partition: value.target.value } });\n            }, 'col-sm-10')}\n            {this.renderDropdown(\n              'Key schema',\n              keySchema.map(key => key.subject),\n              keySchemaSearchValue,\n              selectedKeySchema,\n              value => {\n                this.setState({\n                  keySchemaSearchValue: value.target.value,\n                  selectedKeySchema: value.target.value\n                });\n              },\n              this.renderResults(\n                keySchema.map(key => key.subject),\n                keySchemaSearchValue,\n                selectedKeySchema,\n                'key'\n              )\n            )}\n\n          {(this.renderInput('key', 'Key', 'Key', 'Key', undefined, undefined, undefined, undefined,{ disabled: multiMessage }))}\n\n          {this.renderHeaders()}\n\n          {this.renderDropdown(\n            'Value schema',\n            valueSchema.map(value => value.subject),\n            valueSchemaSearchValue,\n            selectedValueSchema,\n            value => {\n              this.setState({\n                valueSchemaSearchValue: value.target.value,\n                selectedValueSchema: value.target.value\n              });\n            },\n            this.renderResults(\n              valueSchema.map(value => value.subject),\n              valueSchemaSearchValue,\n              selectedValueSchema,\n              'value'\n            )\n          )}\n\n          {this.renderMultiMessage(tombstone)}\n\n          {this.renderTombstone(multiMessage)}\n\n          {this.renderJSONInput('value', 'Value', value => {\n            this.setState({\n                formData: {\n                    ...formData,\n                    value: value\n                }\n            })},\n          multiMessage, // true -> 'text' mode; json, protobuff, ... mode otherwise\n          { placeholder: this.getPlaceholderValue(multiMessage, formData.keyValueSeparator) },\n          { readOnly: tombstone }\n          )}\n          <div style={{ display: 'flex', flexDirection: 'row', width: '100%', padding: 0 }}>\n            <label\n              style={{ padding: 0, alignItems: 'center', display: 'flex' }}\n              className=\"col-sm-2 col-form-label\"\n            >\n              Timestamp\n            </label>\n            <Dropdown style={{ width: '100%', padding: 0, margin: 0 }}>\n              <Dropdown.Toggle\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  padding: 0,\n                  margin: 0\n                }}\n                className=\"nav-link dropdown-toggle\"\n              >\n                <input\n                  className=\"form-control\"\n                  value={\n                    datetime !== '' &&\n                    ' ' +\n                      formatDateTime(\n                        {\n                          year: date.year(),\n                          monthValue: date.month(),\n                          dayOfMonth: date.date(),\n                          hour: date.hour(),\n                          minute: date.minute(),\n                          second: date.second()\n                        },\n                        'DD-MM-YYYY HH:mm'\n                      )\n                  }\n                  placeholder={\n                    datetime !== '' &&\n                    ' ' +\n                      formatDateTime(\n                        {\n                          year: date.year(),\n                          monthValue: date.month(),\n                          dayOfMonth: date.date(),\n                          hour: date.hour(),\n                          minute: date.minute(),\n                          second: date.second()\n                        },\n                        'DD-MM-YYYY HH:mm'\n                      )\n                  }\n                />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <div className=\"input-group\">\n                  <DatePicker\n                    showDateTimeInput\n                    showTimeInput\n                    value={datetime}\n                    onChange={value => {\n                      this.setState({\n                        datetime: value\n                      });\n                    }}\n                  />\n                </div>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n\n          {this.renderButton(\n            'Produce',\n            () => {\n              this.doSubmit();\n            },\n            undefined,\n            'button'\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TopicProduce;\n\n","import TopicCopy from './TopicCopy';\n\nexport default TopicCopy;\n","import React from 'react';\nimport Header from '../../Header/Header';\nimport Form from '../../../components/Form/Form';\nimport {\n    formatDateTime,\n    transformListObjsToViewOptions,\n    transformStringArrayToViewOptions\n} from '../../../utils/converters';\nimport Joi from 'joi-browser';\nimport {\n    uriClusters,\n    uriTopicsCopy,\n    uriTopicsInfo,\n    uriTopicsName, uriTopicsOffsetsByTimestamp\n} from '../../../utils/endpoints';\nimport './styles.scss';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DatePicker from \"../../../components/DatePicker\";\nimport moment from \"moment\";\nimport Input from \"../../../components/Form/Input\";\n\nclass TopicCopy extends Form {\n  state = {\n    clusterId: '',\n    topicId: '',\n    clusters: [],\n    topics: [],\n    selectedTopic: undefined,\n    checked: {},\n    formData: {},\n    errors: {},\n    loading: true\n  };\n\n  schema = {};\n\n  componentDidMount() {\n    const { clusterId, topicId } = this.props.match.params;\n\n    this.schema['clusterListView'] = Joi.string().required();\n    this.schema['topicListView'] = Joi.string().required();\n    this.schema['lastMessagesNr'] = Joi.string().allow('');\n\n    this.setState({ clusterId, topicId, formData: { clusterListView: clusterId, lastMessagesNr: ''} }, () => {\n      this.setupInitialData(clusterId, topicId);\n    });\n  }\n\n\n  setupInitialData = (clusterId, topicId) => {\n    const { formData, checked } = this.state;\n\n    const requests = [\n        this.getApi(uriClusters()),\n        this.getApi(uriTopicsName(clusterId)),\n        this.getApi(uriTopicsInfo(clusterId, topicId))\n        ];\n\n    Promise.all(requests)\n        .then(data => {\n          data[2].data.partitions.forEach(partition => {\n                const name = `partition-${partition.id}`;\n                const checkName = `check-${name}`;\n\n                this.schema[name] = Joi.number()\n                    .min(partition.firstOffset || 0)\n                    .max(partition.lastOffset || 0)\n                    .required()\n                    .label(`Partition ${partition.id} offset`);\n\n                formData[name] = partition.firstOffset || '0';\n                checked[checkName] = true;\n          });\n\n          this.setState({\n            formData,\n            checked,\n            selectedTopic: data[2].data,\n            clusters: transformListObjsToViewOptions(data[0].data, 'id', 'id'),\n            topics: transformStringArrayToViewOptions(data[1].data),\n            loading: false\n          });\n        })\n        .catch(err => {\n          console.error('Error:', err);\n        });\n  }\n\n  getTopics = (clusterId) => {\n    this\n        .getApi(uriTopicsName(clusterId))\n        .then(res => {\n          this.setState(\n              { topics: transformStringArrayToViewOptions(res.data), loading: false }\n          );\n        })\n        .catch(err => {\n          console.error('Error:', err);\n        });\n  };\n\n  handleOnChangeTopic = () => {\n    const { formData } = this.state;\n\n    this\n        .getApi(uriTopicsInfo(formData.clusterListView, formData.topicListView))\n        .then(res => {\n          this.setState(\n              { selectedTopic: res.data, loading: false }\n          );\n        })\n        .catch(err => {\n          console.error('Error:', err);\n        });\n  };\n\n  createSubmitBody = (formData, checked) => {\n    let body = [];\n    let splitName = [];\n    let partition = '';\n    const checkedPartition= [];\n\n    Object.keys(checked).forEach(checkedName => {\n        splitName = checkedName.split('-');\n        partition = splitName.pop();\n        checkedPartition[partition] = checked[checkedName];\n    });\n\n    Object.keys(formData).filter(value => value.startsWith('partition')).forEach(name => {\n      splitName = name.split('-');\n      partition = splitName.pop();\n\n      if(checkedPartition[partition] === true) {\n          body.push({\n              partition,\n              offset: formData[name]\n          });\n      }\n    });\n    return body;\n  };\n\n  async doSubmit() {\n    const { clusterId, topicId, formData, checked } = this.state;\n    const result = await this.postApi(\n        uriTopicsCopy(clusterId, topicId, formData.clusterListView, formData.topicListView),\n        this.createSubmitBody(formData, checked)\n    );\n\n    toast.success(`Copied ${result.data.records} records to topic '${formData.topicListView}' successfully.`);\n  }\n\n  checkedTopicOffset = (event) => {\n    const { checked } = this.state;\n    checked[event.target.value] = event.target.checked;\n\n    this.setState({ checked: checked });\n  }\n\n  renderTopicPartition = () => {\n    const { selectedTopic } = this.state;\n    const renderedItems = [];\n\n    if(selectedTopic) {\n\n      renderedItems.push(\n          <fieldset id={`fieldset-${selectedTopic.name}`} key={selectedTopic.name}>\n            <legend id={`legend-${selectedTopic.name}`}>Partitions</legend>\n            {this.renderPartitionInputs(selectedTopic.partitions)}\n          </fieldset>\n      );\n    }\n    return renderedItems;\n  };\n\n  renderPartitionInputs = (partitions) => {\n    const { checked } = this.state;\n    const renderedInputs = [];\n\n    partitions.forEach(partition => {\n      const name = `partition-${partition.id}`;\n      const checkName = `check-${name}`;\n\n      renderedInputs.push(\n        <div className=\"form-group row row-checkbox\" key={name}>\n            { <input\n                type=\"checkbox\"\n                value={checkName}\n                checked={checked[checkName] || false}\n                onChange={this.checkedTopicOffset}/>\n\n            }\n          <div className=\"col-sm-10 partition-input\">\n            <span id={`partition-${partition.id}-input`}>\n\n              {this.renderInput(\n                name,\n                `Partition: ${partition.id}`,\n                'Offset',\n                'number',\n                undefined,\n                true,\n                'partition-input-div',\n                `partition-input ${name}-input`\n              )}\n            </span>\n          </div>\n        </div>\n      );\n    });\n\n    return renderedInputs;\n  };\n\n  unCheckAll = (value)  => {\n    const {checked} = this.state;\n\n    Object.keys(checked).forEach(name => {\n        checked[name] = value;\n    });\n\n    this.setState({ checked});\n  }\n\n  resetToFirstOffsets = () => {\n    const { selectedTopic, formData } = this.state;\n\n    selectedTopic.partitions.forEach(partition => {\n      const name = `partition-${partition.id}`;\n      formData[name] = partition.firstOffset || '0';\n    });\n\n    this.setState({ formData });\n  };\n\n  resetToLastOffsets = () => {\n    const { selectedTopic, formData } = this.state;\n\n    selectedTopic.partitions.forEach(partition => {\n        const name = `partition-${partition.id}`;\n        formData[name] = partition.lastOffset || '0';\n    });\n\n    this.setState({ formData });\n  };\n\n  resetToCalculatedOffsets = ({ currentTarget: input }) => {\n    const { selectedTopic, formData } = this.state;\n\n    selectedTopic.partitions.forEach(partition => {\n        const name = `partition-${partition.id}`;\n        const calculatedOffset = (partition.lastOffset || 0) - input.value;\n        formData[name] = (!calculatedOffset || calculatedOffset < 0 )? '0' : calculatedOffset;\n    });\n\n    formData['lastMessagesNr'] = input.value;\n    this.setState({ formData });\n  };\n\n  async getTopicOffset() {\n    const { clusterId, topicId, timestamp} = this.state;\n    const momentValue = moment(timestamp);\n\n    const date =\n        timestamp.toString().length > 0\n            ? formatDateTime(\n            {\n                year: momentValue.year(),\n                monthValue: momentValue.month(),\n                dayOfMonth: momentValue.date(),\n                hour: momentValue.hour(),\n                minute: momentValue.minute(),\n                second: momentValue.second(),\n                milli: momentValue.millisecond()\n            },\n            'YYYY-MM-DDTHH:mm:ss.SSS'\n        ) + 'Z'\n            : '';\n\n    let data = {};\n    if (date !== '') {\n        data = await this.getApi(uriTopicsOffsetsByTimestamp(clusterId, topicId, date));\n        data = data.data;\n        this.handleOffsetsByTimestamp(data);\n    }\n  }\n\n  handleOffsetsByTimestamp = partitions => {\n    const { formData } = this.state;\n    partitions.forEach(partition => {\n        const name = `partition-${partition.partition}`;\n        formData[name] = partition.offset || '0';\n    });\n    this.setState({ formData });\n  };\n\n  renderResetButton = () => {\n    const { timestamp, formData} = this.state;\n    const { loading } = this.props.history.location;\n\n    return (\n        <span>\n\n    <div\n        className=\"btn btn-secondary\"\n        type=\"button\"\n        style={{ marginRight: '0.5rem' }}\n        onClick={() => this.unCheckAll(true)}\n    >\n      Check all\n    </div>\n    <div\n        className=\"btn btn-secondary\"\n        type=\"button\"\n        style={{ marginRight: '0.5rem' }}\n        onClick={() => this.unCheckAll(false)}\n    >\n      Uncheck all\n    </div>\n    <div\n        className=\"btn btn-secondary\"\n        type=\"button\"\n        style={{ marginRight: '0.5rem' }}\n        onClick={() => this.resetToFirstOffsets()}\n    >\n      Reset to first offsets\n    </div>\n    <div\n        className=\"btn btn-secondary\"\n        type=\"button\"\n        style={{ marginRight: '0.5rem' }}\n        onClick={() => this.resetToLastOffsets()}\n    >\n      Reset to last offsets\n    </div>\n    <div\n        className=\"btn btn-secondary\"\n        type=\"button\"\n        style={{ marginRight: '0.5rem', padding: 0 }}\n    >\n      <Dropdown>\n        <Dropdown.Toggle>Filter datetime</Dropdown.Toggle>\n          {!loading && (\n              <Dropdown.Menu>\n                  <div>\n                      <DatePicker\n                          showTimeInput\n                          showDateTimeInput\n                          value={timestamp}\n                          label={''}\n                          onChange={value => {\n                              this.setState({ timestamp: value }, () => this.getTopicOffset());\n                          }}\n                      />\n                  </div>\n              </Dropdown.Menu>\n          )}\n      </Dropdown>\n\n    </div>\n\n    <div\n        className=\"btn btn-secondary\"\n        type=\"button\"\n        style={{ marginRight: '0.5rem', padding: 0 }}\n    >\n      <Dropdown>\n        <Dropdown.Toggle>Last x messages per partition</Dropdown.Toggle>\n          {!loading && (\n              <Dropdown.Menu>\n                  <div>\n                      <Input\n                          type='number'\n                          name='lastMessagesNr'\n                          id='lastMessagesNr'\n                          value={formData['lastMessagesNr'] || ''}\n                          label=''\n                          placeholder='Last x messages'\n                          onChange={this.resetToCalculatedOffsets}\n                          noStyle=''\n                          wrapperClass='input-nr-messages'\n                          inputClass=''\n                      />\n                  </div>\n              </Dropdown.Menu>\n          )}\n      </Dropdown>\n\n    </div>\n  </span>\n    );\n  };\n\n\n  render() {\n    const { clusterId, topicId, clusters, topics } = this.state;\n\n    return (\n      <div>\n        <Header title={`Copy topic ${topicId} from cluster ${clusterId}`} history={this.props.history} />\n        <form\n          className=\"khq-form khq-copy-topic\"\n          onSubmit={() => this.handleSubmit()}\n        >\n          {this.renderTopicPartition()}\n            <fieldset id=\"cluster\" key=\"cluster\">\n                <legend id=\"cluster\">Target Topic</legend>\n\n          {this.renderSelect(\n              'clusterListView',\n              'Cluster',\n              clusters,\n              ({ currentTarget: input }) => {\n                    const { formData } = this.state;\n                    formData.clusterListView = input.value;\n                    this.setState({formData});\n                    this.getTopics(input.value);\n                },\n              'col-sm-10',\n              'select-wrapper select-wrapper-copy',\n              false,\n              { className: 'form-control' }\n          )}\n\n          {this.renderSelect(\n              'topicListView',\n              'Topic',\n              topics,\n              ({ currentTarget: input }) => {\n                    const { formData } = this.state;\n                    formData.topicListView = input.value;\n                    this.setState({formData});\n\n              },\n              'col-sm-10',\n              'select-wrapper select-wrapper-copy',\n              true,\n              { className: 'form-control' }\n          )}\n            </fieldset>\n\n            {this.renderButton(\n                'Copy',\n                this.handleSubmit,\n                undefined,\n                'submit',\n                this.renderResetButton()\n            )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TopicCopy;\n","import ConsumerGroupList from './ConsumerGroupList';\n\nexport default ConsumerGroupList;\n","import React from 'react';\nimport Table from '../../../components/Table';\nimport { uriConsumerGroups, uriConsumerGroupDelete } from '../../../utils/endpoints';\nimport constants from '../../../utils/constants';\nimport {calculateTopicOffsetLag, groupedTopicOffset} from '../../../utils/converters';\nimport Header from '../../Header';\nimport SearchBar from '../../../components/SearchBar';\nimport Pagination from '../../../components/Pagination';\nimport ConfirmModal from '../../../components/Modal/ConfirmModal';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from \"../../../components/Root\";\nimport {Link} from \"react-router-dom\";\nimport {handlePageChange, getPageNumber} from \"./../../../utils/pagination\"\n\nclass ConsumerGroupList extends Root {\n  state = {\n    consumerGroups: [],\n    showDeleteModal: false,\n    selectedCluster: '',\n    deleteMessage: '',\n    groupToDelete: {},\n    deleteData: {},\n    pageNumber: 1,\n    totalPageNumber: 1,\n    history: this.props,\n    search: '',\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true\n  };\n\n  componentDidMount() {\n    const { clusterId } = this.props.match.params;\n    const { search, pageNumber} = this.state;\n    const query =  new URLSearchParams(this.props.location.search);\n\n    this.setState({ selectedCluster: clusterId,\n      search: (query.get('search'))? query.get('search') : search,\n      pageNumber: (query.get('page'))? parseInt(query.get('page')) : parseInt(pageNumber)\n    }, () => {\n      this.getConsumerGroup();\n    });\n  }\n\n  handleSearch = data => {\n    this.setState({ pageNumber: 1, search: data.searchData.search }, () => {\n      this.getConsumerGroup();\n    });\n  };\n\n  handlePageChangeSubmission = value => {\n    let pageNumber = getPageNumber(value, this.state.totalPageNumber);\n    this.setState({ pageNumber: pageNumber }, () => {\n      this.getConsumerGroup();\n    });\n  };\n\n\n  async getConsumerGroup() {\n    const { selectedCluster, pageNumber, search } = this.state;\n    this.setState({ loading: true });\n\n    let response = await this.getApi(uriConsumerGroups(selectedCluster, search, pageNumber));\n    response = response.data;\n    if (response.results) {\n      this.handleConsumerGroup(response.results);\n      this.setState({ selectedCluster, totalPageNumber: response.page }, () =>\n          this.props.history.push({\n            pathname: `/ui/${this.state.selectedCluster}/group`,\n            search: `search=${this.state.search}&page=${pageNumber}`\n          })\n      );\n    } else {\n      this.setState({ selectedCluster, consumerGroups: [], totalPageNumber: 1, loading: false });\n    }\n  }\n\n  handleConsumerGroup(consumerGroup) {\n    let tableConsumerGroup = [];\n    consumerGroup.forEach(consumerGroup => {\n      tableConsumerGroup.push({\n        id: consumerGroup.id,\n        state: consumerGroup.state,\n        coordinator: consumerGroup.coordinator.id,\n        members: consumerGroup.members ? consumerGroup.members.length : 0,\n        topics: consumerGroup.offsets ? groupedTopicOffset(consumerGroup.offsets) : {}\n      });\n    });\n\n    this.setState({ consumerGroups: tableConsumerGroup, loading: false });\n  }\n\n  handleState(state) {\n    let className = '';\n\n    switch (state) {\n      case 'STABLE':\n        className = 'badge badge-success';\n        break;\n      case 'PREPARING_REBALANCE':\n        className = 'badge badge-primary';\n        break;\n      default:\n        className = 'badge badge-warning';\n        break;\n    }\n\n    return <span className={className}>{state.replace('_', ' ')}</span>;\n  }\n\n  handleCoordinator(coordinator) {\n    return <span className=\"badge badge-primary\"> {coordinator}</span>;\n  }\n\n  handleTopics(group, groupedTopicOffset) {\n    const noPropagation = e => e.stopPropagation();\n    return Object.keys(groupedTopicOffset).map(topicId => {\n      const topicOffsets = groupedTopicOffset[topicId];\n      const offsetLag = calculateTopicOffsetLag(topicOffsets, topicId);\n\n      return (\n        <Link\n          to={`/ui/${this.state.selectedCluster}/topic/${topicId}`}\n          key={group + '-' + topicId}\n          className=\"btn btn-dark btn-sm mb-1 mr-1\"\n          onClick={noPropagation}\n        >\n          {topicId + ' '}\n\n          <div className=\"badge badge-secondary\">Lag: {Number(offsetLag).toLocaleString()}</div>\n        </Link>\n      );\n    });\n  }\n\n  handleOnDelete(group) {\n    this.setState({ groupToDelete: group }, () => {\n      this.showDeleteModal(\n        <React.Fragment>\n          Do you want to delete consumer group: {<code>{group.id}</code>} ?\n        </React.Fragment>\n      );\n    });\n  }\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  deleteConsumerGroup = () => {\n    const { selectedCluster, groupToDelete } = this.state;\n\n    this.removeApi(uriConsumerGroupDelete(selectedCluster, encodeURIComponent(groupToDelete.id)))\n      .then(() => {\n        toast.success(`Consumer Group '${groupToDelete.id}' is deleted`);\n        this.setState({ showDeleteModal: false, groupToDelete: {} }, () => this.getConsumerGroup());\n      })\n      .catch(() => {\n        this.setState({ showDeleteModal: false, groupToDelete: {} });\n      });\n  };\n  render() {\n    const { selectedCluster, search, pageNumber, totalPageNumber, loading} = this.state;\n    const roles = this.state.roles || {};\n    const { history } = this.props;\n\n    return (\n      <div>\n        <Header title=\"Consumer Groups\" history={history} />\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light bg-light mr-auto\n         khq-data-filter khq-sticky khq-nav\"\n        >\n          <SearchBar\n            showSearch={true}\n            search={search}\n            showPagination={true}\n            pagination={pageNumber}\n            showTopicListView={false}\n            showConsumerGroup\n            groupListView={'ALL'}\n            doSubmit={this.handleSearch}\n          />\n\n          <Pagination\n            pageNumber={pageNumber}\n            totalPageNumber={totalPageNumber}\n            onChange={handlePageChange}\n            onSubmit={this.handlePageChangeSubmission}\n          />\n        </nav>\n\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id'\n            },\n            {\n              id: 'state',\n              accessor: 'state',\n              colName: 'State',\n              cell: obj => {\n                return this.handleState(obj.state);\n              }\n            },\n            {\n              id: 'coordinator',\n              accessor: 'coordinator',\n              colName: 'Coordinator',\n              cell: obj => {\n                return this.handleCoordinator(obj.coordinator);\n              }\n            },\n            {\n              id: 'members',\n              accessor: 'members',\n              colName: 'Members'\n            },\n            {\n              id: 'topics',\n              accessor: 'topics',\n              colName: 'Topics',\n              cell: obj => {\n                if (obj.topics) {\n                  return this.handleTopics(obj.id, obj.topics);\n                }\n              }\n            }\n          ]}\n          data={this.state.consumerGroups}\n          updateData={data => {\n            this.setState({ consumerGroups: data });\n          }}\n          noContent={'No consumer group available'}\n          onDelete={group => {\n            this.handleOnDelete(group);\n          }}\n          onDetails={id => `/ui/${selectedCluster}/group/${encodeURIComponent(id)}`}\n          actions={\n            roles.group && roles.group['group/delete']\n              ? [constants.TABLE_DELETE, constants.TABLE_DETAILS]\n              : [constants.TABLE_DETAILS]\n          }\n        />\n\n        <ConfirmModal\n          show={this.state.showDeleteModal}\n          handleCancel={this.closeDeleteModal}\n          handleConfirm={this.deleteConsumerGroup}\n          message={this.state.deleteMessage}\n        />\n      </div>\n    );\n  }\n}\nexport default ConsumerGroupList;\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport { uriConsumerGroupOffsets } from '../../../../utils/endpoints';\nimport { Link } from 'react-router-dom';\nimport Root from \"../../../../components/Root\";\n\nclass ConsumerGroupTopics extends Root {\n  state = {\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedConsumerGroup: this.props.consumerGroupId,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getConsumerGroupTopics();\n  }\n\n  async getConsumerGroupTopics() {\n    let offsets = [];\n    const { selectedCluster, selectedConsumerGroup } = this.state;\n\n    offsets = await this.getApi(uriConsumerGroupOffsets(selectedCluster, selectedConsumerGroup));\n    offsets = offsets.data;\n    this.handleData(offsets);\n  }\n\n  handleData(offsets) {\n    let data = offsets.map(offset => {\n      return {\n        name: offset.topic,\n        partition: offset.partition,\n        member: offset.member ? offset.member.host : '',\n        offset: offset.offset,\n        lag: offset.offsetLag\n      };\n    });\n    this.setState({ data, loading: false });\n  }\n\n  handleOptional(optional) {\n    if (optional !== undefined && optional !== '' && optional !== 'NaN') {\n      return <label>{optional}</label>;\n    } else {\n      return <label>-</label>;\n    }\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'name',\n              accessor: 'name',\n              colName: 'Name',\n              type: 'text',\n              sortable: true,\n              cell: (obj, col) => {\n                return (\n                  <Link to={`/ui/${this.state.selectedCluster}/topic/${obj[col.accessor]}`}>\n                    {obj[col.accessor]}\n                  </Link>\n                );\n              }\n            },\n            {\n              id: 'partition',\n              accessor: 'partition',\n              colName: 'Partition',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'member',\n              accessor: 'member',\n              colName: 'Member',\n              type: 'text',\n              cell: obj => {\n                return this.handleOptional(obj.member.host);\n              }\n            },\n            {\n              id: 'offset',\n              accessor: 'offset',\n              colName: 'Offset',\n              type: 'text',\n              cell: obj => {\n                if (obj.offset !== undefined && obj.offset !== '') {\n                  return (\n                    <Link to={`/ui/${this.state.selectedCluster}/topic/${obj.name}/data?sort=Oldest&partition=${obj.partition}&after=${obj.partition}-${obj.offset - 1}`}>\n                      {obj.offset}\n                    </Link>\n                  );\n                }\n                return <label>-</label>;\n              }\n            },\n            {\n              id: 'metadata',\n              accessor: 'metadata',\n              colName: 'Metadata',\n              type: 'text',\n              cell: obj => {\n                return this.handleOptional(obj.metadata);\n              }\n            },\n            {\n              id: 'lag',\n              accessor: 'lag',\n              colName: 'Lag',\n              type: 'text',\n              cell: obj => {\n                return this.handleOptional(Number(obj.lag).toLocaleString());\n              }\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n        />\n      </div>\n    );\n  }\n}\nexport default ConsumerGroupTopics;\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport { uriConsumerGroupMembers } from '../../../../utils/endpoints';\nimport constants from '../../../../utils/constants';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\nimport Root from \"../../../../components/Root\";\n\nclass ConsumerGroupMembers extends Root {\n  state = {\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedConsumerGroup: this.props.consumerGroupId,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getConsumerGroupMembers();\n  }\n\n  async getConsumerGroupMembers() {\n    const { selectedCluster, selectedConsumerGroup } = this.state;\n\n    const members = await this.getApi(uriConsumerGroupMembers(selectedCluster, selectedConsumerGroup));\n\n    this.handleData(members.data);\n  }\n\n  handleData(members) {\n    const data = members.map(member => {\n      return {\n        clientId: member.clientId,\n        id: member.id,\n        host: member.host,\n        assignments: member.assignments\n      };\n    });\n    this.setState({ data, loading: false });\n  }\n\n  handlePartitions(partitions) {\n    return partitions.map(partition => {\n      return <div className=\"badge badge-secondary partition\">{partition}</div>;\n    });\n  }\n\n  handleAssignments(assignments) {\n    const {history} = this.props;\n    let topics = [];\n\n    if (assignments) {\n      assignments.forEach(assignment => {\n        if (!topics.find(topic => topic === assignment.topic)) {\n          topics.push(assignment.topic);\n        }\n      });\n    }\n    return topics.map(topic => {\n      let partitions = [];\n      assignments.forEach(assignment => {\n        if (assignment.topic === topic) {\n          partitions.push(assignment.partition);\n        }\n      });\n\n      return (\n        <div\n          onClick={() => {\n            history.push({\n              pathname: `/ui/${this.state.selectedCluster}/topic/${topic}`,\n              tab: constants.TOPIC\n            });\n          }}\n        >\n          <Link\n            to={{\n              pathname: `/ui/${this.state.selectedCluster}/topic/${topic}`\n            }}\n            key=\"topic\"\n            className=\"btn btn-primary btn-sm mb-1\"\n          >\n            {topic}\n            {this.handlePartitions(partitions)}\n          </Link>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'clientId',\n              accessor: 'clientId',\n              colName: 'ClientId',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'host',\n              accessor: 'host',\n              colName: 'Host',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'assignments',\n              accessor: 'assignments',\n              colName: 'Assignments',\n              type: 'text',\n              cell: obj => {\n                return this.handleAssignments(obj.assignments);\n              }\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConsumerGroupMembers;\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport { uriConsumerGroupAcls } from '../../../../utils/endpoints';\nimport Root from \"../../../../components/Root\";\n\nclass TopicAcls extends Root {\n  state = {\n    data: [],\n    selectedCluster: '',\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getAcls();\n  }\n\n  async getAcls() {\n    let acls = [];\n    const { clusterId, consumerGroupId } = this.props;\n\n    acls = await this.getApi(uriConsumerGroupAcls(clusterId, consumerGroupId));\n    this.handleData(acls.data);\n  }\n\n  handleData(data) {\n    let tableAcls = [];\n    data.map(principal =>\n      principal.acls.forEach((acl, index) => {\n        tableAcls.push({\n          id: index,\n          group: acl.resource.name || '',\n          host: acl.host || '',\n          permission: acl.operation || ''\n        });\n      })\n    );\n    this.setState({ data: tableAcls, loading: false });\n    return tableAcls;\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'group',\n              accessor: 'group',\n              colName: 'Group',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'host',\n              accessor: 'host',\n              colName: 'Host',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'permission',\n              accessor: 'permission',\n              colName: 'Permissions',\n              type: 'text',\n              cell: (obj, col) => {\n                return (\n                  <React.Fragment>\n                    <span className=\"badge badge-secondary\">\n                      {obj[col.accessor].permissionType}\n                    </span>{' '}\n                    {obj[col.accessor].operation}\n                  </React.Fragment>\n                );\n              }\n            }\n          ]}\n          data={data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n          noContent={\n            <tr>\n              <td colSpan={3}>\n                <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                  No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the\n                  cluster.\n                </div>\n              </td>\n            </tr>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopicAcls;\n","import ConsumerGroup from './ConsumerGroup';\n\nexport default ConsumerGroup;\n","import React, { Component } from 'react';\nimport Header from '../../Header';\nimport ConsumerGroupTopics from './ConsumerGroupTopics/ConsumerGroupTopics';\nimport ConsumerGroupMembers from './ConsumerGroupMembers/ConsumerGroupMembers';\nimport { Link } from 'react-router-dom';\nimport ConsumerGroupAcls from './ConsumerGroupAcls/ConsumerGroupAcls';\nimport {getSelectedTab} from \"../../../utils/functions\";\n\nclass ConsumerGroup extends Component {\n  state = {\n    clusterId: this.props.match.params.clusterId,\n    consumerGroupId: this.props.match.params.consumerGroupId,\n    consumerGroup: {},\n    selectedTab: 'topics',\n    roles: JSON.parse(sessionStorage.getItem('roles'))\n  };\n\n  tabs = ['topics','members','acls'];\n\n  componentDidMount() {\n    const { clusterId, consumerGroupId } = this.props.match.params;\n    const tabSelected = getSelectedTab(this.props, this.tabs);\n    this.setState(\n        {\n          selectedTab: (tabSelected)? tabSelected : 'topics'\n        },\n        () => {\n          this.props.history.replace(`/ui/${clusterId}/group/${consumerGroupId}/${this.state.selectedTab}`);\n        }\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      const tabSelected = getSelectedTab(this.props, this.tabs);\n      this.setState({ selectedTab: tabSelected });\n    }\n  }\n\n  tabClassName = tab => {\n    const { selectedTab } = this.state;\n    return selectedTab === tab ? 'nav-link active' : 'nav-link';\n  };\n\n  renderSelectedTab() {\n    const { selectedTab } = this.state;\n    const { history } = this.props;\n    const { clusterId, consumerGroupId } = this.props.match.params;\n    switch (selectedTab) {\n      case 'topics':\n        return (\n          <ConsumerGroupTopics\n            clusterId={clusterId}\n            consumerGroupId={consumerGroupId}\n            history={history}\n          />\n        );\n      case 'members':\n        return (\n          <ConsumerGroupMembers\n            clusterId={clusterId}\n            consumerGroupId={consumerGroupId}\n            history={history}\n          />\n        );\n      case 'acls':\n        return (\n          <ConsumerGroupAcls\n            clusterId={clusterId}\n            consumerGroupId={consumerGroupId}\n            history={history}\n          />\n        );\n\n      default:\n        return (\n          <ConsumerGroupTopics\n            clusterId={clusterId}\n            consumerGroupId={consumerGroupId}\n            history={history}\n          />\n        );\n    }\n  }\n\n  render() {\n    const { clusterId, consumerGroupId } = this.state;\n    const roles = this.state.roles || {};\n    return (\n      <div>\n        <Header title={`Consumer Group: ${decodeURIComponent(consumerGroupId)}`} history={this.props.history} />\n        <div className=\"tabs-container\">\n          <ul className=\"nav nav-tabs\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/group/${consumerGroupId}/topics`}\n                className={this.tabClassName('topics')}\n              >\n                Topics\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/group/${consumerGroupId}/members`}\n                className={this.tabClassName('members')}\n              >\n                Members\n              </Link>\n            </li>\n            {roles.acls && roles.acls['acls/read'] && (\n              <li className=\"nav-item\">\n                <Link to={`/ui/${clusterId}/group/${consumerGroupId}/acls`}\n                  className={this.tabClassName('acls')}\n                >\n                  ACLS\n                </Link>\n              </li>\n            )}\n          </ul>\n\n          <div className=\"tab-content\">\n            <div className=\"tab-pane active\" role=\"tabpanel\">\n              {this.renderSelectedTab()}\n            </div>\n          </div>\n        </div>\n\n        {roles.group && (roles.group['group/offsets/delete'] || roles.group['group/offsets/update']) && (\n          <aside>\n            <li className=\"aside-button\">\n              {roles.group['group/offsets/delete'] && (\n                <Link\n                  to={`/ui/${clusterId}/group/${consumerGroupId}/offsetsdelete`}\n                  className=\"btn btn-secondary mr-2\"\n                >\n                  Delete Offsets\n                </Link>\n              )}\n              {roles.group['group/offsets/update'] && (\n                <Link\n                  to={`/ui/${clusterId}/group/${consumerGroupId}/offsets`}\n                  className=\"btn btn-primary\"\n                >\n                  Update Offsets\n                </Link>\n              )}\n            </li>\n          </aside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ConsumerGroup;\n","import SchemaVersions from './SchemaVersions';\n\nexport default SchemaVersions;\n","import React from 'react';\nimport Table from '../../../../components/Table';\nimport constants from '../../../../utils/constants';\nimport ConfirmModal from '../../../../components/Modal/ConfirmModal';\nimport { uriDeleteSchemaVersion } from '../../../../utils/endpoints';\nimport AceEditor from 'react-ace';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport Root from \"../../../../components/Root\";\n\nclass SchemaVersions extends Root {\n  state = {\n    data: [],\n    selectedCluster: this.props.clusterId,\n    selectedSchema: this.props.schemaName,\n    schemaVersions: this.props.schemas,\n    deleteMessage: '',\n    schemaToDelete: {},\n    deleteData: { clusterId: '', subject: '', versionId: 1 },\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true\n  };\n\n  componentDidMount() {\n    this.handleData(this.state.schemaVersions);\n  }\n\n  handleData(schemas) {\n\n    if (schemas) {\n      let data = schemas.map(schema => {\n        return {\n          id: schema.id,\n          version: schema.version,\n          schema: JSON.stringify(JSON.parse(schema.schema), null, 2)\n        };\n      });\n      this.setState({ data, loading: false });\n    } else {\n      this.setState({ data: [], loading: false });\n    }\n  }\n\n  handleOnDelete(schema) {\n    this.setState({ schemaToDelete: schema }, () => {\n      this.showDeleteModal(\n        <React.Fragment>\n          Do you want to delete version:{' '}\n          {\n            <code>\n              {schema.id} from {this.state.selectedSchema}\n            </code>\n          }{' '}\n          ?\n        </React.Fragment>\n      );\n    });\n  }\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  deleteSchemaRegistry = () => {\n    const { selectedCluster, schemaToDelete, selectedSchema } = this.state;\n    const { history } = this.props;\n    const deleteData = {\n      clusterId: selectedCluster,\n      subject: selectedSchema,\n      versionId: schemaToDelete.version\n    };\n\n    this.removeApi(\n      uriDeleteSchemaVersion(selectedCluster, selectedSchema, schemaToDelete.version),\n      deleteData\n    )\n      .then(res => {\n        toast.success(`Version'${schemaToDelete.version}' is deleted`);\n        this.setState({ showDeleteModal: false, schemaToDelete: {} });\n        history.push({\n          pathname: `/ui/${selectedCluster}/schema`\n        });\n      })\n      .catch(() => {\n        this.setState({ showDeleteModal: false, schemaToDelete: {} });\n      });\n  };\n\n  render() {\n    const roles = this.state.roles || {};\n    const { loading } = this.state;\n    return (\n      <div>\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id',\n              type: 'text',\n              sortable: true\n            },\n            {\n              id: 'version',\n              accessor: 'version',\n              colName: 'Version',\n              type: 'text',\n              sortable: true,\n              cell: (obj, col) => {\n                return <span className=\"badge badge-primary\">{obj[col.accessor] || ''}</span>;\n              }\n            },\n            {\n              id: 'schema',\n              name: 'schema',\n              accessor: 'schema',\n              colName: 'Schema',\n              type: 'text',\n              extraRow: true,\n              extraRowContent: (obj, col, index) => {\n                return (\n                  <AceEditor\n                    mode=\"json\"\n                    id={'value' + index}\n                    theme=\"merbivore_soft\"\n                    value={obj[col.accessor]}\n                    readOnly\n                    name=\"UNIQUE_ID_OF_DIV\"\n                    editorProps={{ $blockScrolling: true }}\n                    style={{ width: '100%', minHeight: '25vh' }}\n                  />\n                );\n              },\n              cell: (obj, col) => {\n                return (\n                  <pre className=\"mb-0 khq-data-highlight\">\n                    <code>\n                      {JSON.stringify(JSON.parse(obj[col.accessor]))}\n                    </code>\n                  </pre>\n                );\n              }\n            }\n          ]}\n          data={this.state.data}\n          updateData={data => {\n            this.setState({ data });\n          }}\n          onDelete={schema => {\n            this.handleOnDelete(schema);\n          }}\n          actions={\n            roles.registry && roles.registry['registry/version/delete']\n              ? [constants.TABLE_DELETE]\n              : []\n          }\n          extraRow\n          noStripes\n          onExpand={obj => {\n            return Object.keys(obj.headers).map(header => {\n              return (\n                <tr\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    width: '100%'\n                  }}\n                >\n                  <td\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      borderStyle: 'dashed',\n                      borderWidth: '1px',\n                      backgroundColor: '#171819'\n                    }}\n                  >\n                    {header}\n                  </td>\n                  <td\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      borderStyle: 'dashed',\n                      borderWidth: '1px',\n                      backgroundColor: '#171819'\n                    }}\n                  >\n                    {obj.headers[header]}\n                  </td>\n                </tr>\n              );\n            });\n          }}\n        />\n        <ConfirmModal\n          show={this.state.showDeleteModal}\n          handleCancel={this.closeDeleteModal}\n          handleConfirm={this.deleteSchemaRegistry}\n          message={this.state.deleteMessage}\n        />\n\n      </div>\n    );\n  }\n}\nexport default SchemaVersions;\n","import SchemaUpdate from './SchemaUpdate';\n\nexport default SchemaUpdate;\n","import React from 'react';\nimport Form from '../../../../components/Form/Form';\nimport Joi from 'joi-browser';\nimport { uriLatestSchemaVersion, uriUpdateSchema } from '../../../../utils/endpoints';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass SchemaUpdate extends Form {\n  state = {\n    clusterId: '',\n    schemaId: '',\n    compatibilityOptions: [\n      {\n        _id: 'NONE',\n        name: 'NONE'\n      },\n      {\n        _id: 'BACKWARD',\n        name: 'BACKWARD'\n      },\n      {\n        _id: 'BACKWARD_TRANSITIVE',\n        name: 'BACKWARD_TRANSITIVE'\n      },\n      {\n        _id: 'FORWARD',\n        name: 'FORWARD'\n      },\n      {\n        _id: 'FORWARD_TRANSITIVE',\n        name: 'FORWARD_TRANSITIVE'\n      },\n      {\n        _id: 'FULL',\n        name: 'FULL'\n      },\n      {\n        _id: 'FULL_TRANSITIVE',\n        name: 'FULL_TRANSITIVE'\n      }\n    ],\n    formData: {\n      subject: '',\n      compatibility: '',\n      schema: '',\n      schemaType: ''\n    },\n    errors: {},\n    roles: JSON.parse(sessionStorage.getItem('roles'))\n  };\n\n  schema = {\n    subject: Joi.string()\n        .required()\n        .label('Subject'),\n    compatibility: Joi.string()\n        .required()\n        .label('Compatibility Level'),\n    schema: Joi.string()\n        .required()\n        .label('Latest Schema'),\n    schemaType: Joi.string()\n        .label('Schema Type'),\n    references: Joi.any()\n        .label('Refecences')\n  };\n\n  componentDidMount() {\n    const { clusterId } = this.props.match.params;\n    const { schemaId } = this.props || this.props.match.params;\n    this.setState({ clusterId, schemaId }, () => this.getLatestSchemaVersion(clusterId, schemaId));\n  }\n\n  async getLatestSchemaVersion() {\n    const { clusterId, schemaId } = this.state;\n    let data = await this.getApi(uriLatestSchemaVersion(clusterId, schemaId));\n\n    data = data.data;\n    if (data) {\n      this.handleLatestSchemaVersion(data);\n    }\n  }\n\n  handleLatestSchemaVersion = latestSchemaVersion => {\n    const { formData } = { ...this.state };\n\n    formData.subject = latestSchemaVersion.subject;\n    formData.compatibility = latestSchemaVersion.compatibilityLevel;\n    formData.schemaType = latestSchemaVersion.schemaType;\n    formData.schema = \"PROTOBUF\" === formData.schemaType?latestSchemaVersion.schema :JSON.stringify(JSON.parse(latestSchemaVersion.schema), null, 2);\n    formData.references = latestSchemaVersion.references;\n\n    this.setState(formData);\n  };\n\n  doSubmit() {\n    const { clusterId, formData } = this.state;\n    const body = {\n      clusterId,\n      subject: formData.subject,\n      compatibilityLevel: formData.compatibility,\n      schema: formData.schema,\n      schemaType: formData.schemaType,\n      references: formData.references\n    };\n\n    this.postApi(uriUpdateSchema(clusterId, formData.subject), body)\n        .then(() => {\n          toast.success(`Schema '${formData.subject}' is updated`);\n          this.props.getSchemaVersions();\n          window.location.reload(false);\n        });\n  }\n\n  render() {\n    const { compatibilityOptions, roles } = this.state;\n\n    return (\n        <form\n            encType=\"multipart/form-data\"\n            className=\"khq-form khq-form-config\"\n            onSubmit={e => this.handleSubmit(e)}\n        >\n          <fieldset>\n            {this.renderInput(\n                'subject',\n                'Subject',\n                'Subject',\n                undefined,\n                undefined,\n                false,\n                false,\n                false,\n                { disabled: true }\n            )}\n            {this.renderSelect(\n                'compatibility',\n                'Compatibility Level',\n                compatibilityOptions,\n                ({ currentTarget: input }) => {\n                  let { formData } = { ...this.state };\n                  formData.compatibility = input.value;\n                  this.setState({ formData });\n                },\n                'col-sm-10'\n            )}\n            {this.renderJSONInput('schema', 'Latest Schema', value => {\n                  let { formData } = { ...this.state };\n                  formData.schema = value;\n                  this.setState({ formData });\n                },\n                'col-sm-10'\n            )}\n            {roles.registry['registry/update'] && (\n                this.renderButton('Update', undefined, undefined, 'submit'))}\n          </fieldset>\n        </form>\n    );\n  }\n}\n\nexport default SchemaUpdate;\n","import React from 'react';\nimport Header from '../../Header';\nimport SchemaVersions from './SchemaVersions';\nimport SchemaUpdate from './SchemaUpdate';\nimport endpoints from '../../../utils/endpoints';\nimport {getSelectedTab} from \"../../../utils/functions\";\nimport {Link} from \"react-router-dom\";\nimport Root from \"../../../components/Root\";\n\nclass Schema extends Root {\n  state = {\n    clusterId: this.props.match.params.clusterId,\n    schemaId: this.props.history.schemaId || this.props.match.params.schemaId,\n    selectedTab: 'update',\n    totalVersions: 0,\n    schemaVersions: [],\n    roles: JSON.parse(sessionStorage.getItem('roles'))\n  };\n\n  tabs = ['update', 'versions'];\n\n  componentDidMount() {\n    this.getSchemaVersions();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      const tabSelected = getSelectedTab(this.props, this.tabs);\n      this.setState({ selectedTab: tabSelected });\n    }\n  }\n\n  tabClassName = tab => {\n    const { selectedTab } = this.state;\n    return selectedTab === tab ? 'nav-link active' : 'nav-link';\n  };\n\n  async getSchemaVersions() {\n    let schemas = [];\n    const { clusterId, schemaId, roles } = this.state;\n    let tabSelected = getSelectedTab(this.props, this.tabs);\n\n    if(!roles.registry['registry/update'] && tabSelected === 'update') {\n      tabSelected = 'versions';\n    }\n\n    schemas = await this.getApi(endpoints.uriSchemaVersions(clusterId, schemaId));\n    this.setState({\n          schemaVersions: schemas.data,\n          totalVersions: schemas.data.length,\n          selectedTab: tabSelected === 'versions' ? tabSelected : 'update'\n        },\n        () => {\n          this.props.history.replace(`/ui/${clusterId}/schema/details/${schemaId}/${this.state.selectedTab}`);\n        });\n  }\n\n  renderSelectedTab() {\n    const { selectedTab, schemaVersions } = this.state;\n    const { history, match } = this.props;\n    const { clusterId } = this.props.match.params;\n    const { schemaId } = this.props.history.state || this.props.match.params;\n\n    switch (selectedTab) {\n      case 'update':\n        return (\n            <SchemaUpdate\n                getSchemaVersions={() => {\n                  this.getSchemaVersions();\n                }}\n                schemaId={schemaId}\n                history={history}\n                match={match}\n            />\n        );\n      case 'versions':\n        return (\n            <SchemaVersions\n                schemaName={schemaId}\n                clusterId={clusterId}\n                schemas={schemaVersions}\n                history={history}\n                match={match}\n            />\n        );\n      default:\n        return <SchemaVersions\n            schemaName={schemaId}\n            clusterId={clusterId}\n            schemas={schemaVersions}\n            history={history}\n            match={match}\n        />;\n    }\n  }\n\n  render() {\n    const { clusterId, schemaId, totalVersions, roles } = this.state;\n\n    return (\n        <div>\n          <Header title={`Schema: ${schemaId}`} history={this.props.history} />\n          <div className=\"tabs-container\">\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\n              {roles.registry['registry/update'] && (\n                  <li className=\"nav-item\">\n                    <Link to={`/ui/${clusterId}/schema/details/${schemaId}/update`}\n                          className={this.tabClassName('update')}\n                    >\n                      Update\n                    </Link>\n                  </li>)}\n              <li className=\"nav-item\">\n                <Link to={`/ui/${clusterId}/schema/details/${schemaId}/versions`}\n                      className={this.tabClassName('versions')}\n                >\n                  Versions <span className=\"badge badge-secondary\">{totalVersions}</span>\n                </Link>\n              </li>\n            </ul>\n\n            <div className=\"tab-content\">\n              <div className=\"tab-pane active\" role=\"tabpanel\">\n                {this.renderSelectedTab()}\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Schema;\n","import React from 'react';\nimport Table from '../../../components/Table';\nimport endpoints, { uriDeleteSchema } from '../../../utils/endpoints';\nimport constants from '../../../utils/constants';\nimport { Link } from 'react-router-dom';\nimport Header from '../../Header';\nimport SearchBar from '../../../components/SearchBar';\nimport Pagination from '../../../components/Pagination';\nimport ConfirmModal from '../../../components/Modal/ConfirmModal';\nimport './styles.scss';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/mode-protobuf';\nimport 'ace-builds/src-noconflict/theme-merbivore_soft';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from \"../../../components/Root\";\nimport {handlePageChange, getPageNumber} from \"./../../../utils/pagination\"\n\n\nclass SchemaList extends Root {\n  state = {\n    schemasRegistry: [],\n    showDeleteModal: false,\n    selectedCluster: '',\n    deleteMessage: '',\n    schemaToDelete: {},\n    deleteData: {},\n    pageNumber: 1,\n    totalPageNumber: 1,\n    history: this.props,\n    searchData: {\n      search: ''\n    },\n    createSubjectFormData: {\n      subject: '',\n      compatibilityLevel: '',\n      schema: ''\n    },\n    roles: JSON.parse(sessionStorage.getItem('roles')),\n    loading: true\n  };\n\n  componentDidMount() {\n    let { clusterId } = this.props.match.params;\n    const { searchData, pageNumber } = this.state;\n    const query =  new URLSearchParams(this.props.location.search);\n\n    this.setState({\n      selectedCluster: clusterId,\n      searchData: { search: (query.get('search'))? query.get('search') : searchData.search },\n      pageNumber: (query.get('page'))? parseInt(query.get('page')) : parseInt(pageNumber)\n    }, () => {\n      this.getSchemaRegistry();\n    });\n  }\n\n  handleSearch = data => {\n    const { searchData } = data;\n    this.setState({ pageNumber: 1, searchData }, () => {\n      this.getSchemaRegistry();\n    });\n  };\n\n  handlePageChangeSubmission = value => {\n    let pageNumber = parseInt(getPageNumber(value, this.state.totalPageNumber));\n    this.setState({pageNumber: pageNumber}, () => {\n      this.getSchemaRegistry();\n    })\n  }\n\n  async getSchemaRegistry() {\n\n    const { selectedCluster, pageNumber } = this.state;\n    const { search } = this.state.searchData;\n\n    this.setState({ loading: true });\n\n    let response = await this.getApi(\n      endpoints.uriSchemaRegistry(selectedCluster, search, pageNumber)\n    );\n\n    let data = response.data;\n    if (data.results) {\n      this.handleSchemaRegistry(data.results);\n      this.setState({ selectedCluster, totalPageNumber: data.page }, () => {\n        this.props.history.push({\n          pathname: `/ui/${this.state.selectedCluster}/schema`,\n          search: `search=${this.state.searchData.search}&page=${pageNumber}`\n        })\n      });\n    } else {\n      this.setState({ selectedCluster, schemasRegistry: [], totalPageNumber: 0, loading: false });\n    }\n\n  }\n\n  handleSchemaRegistry(schemas) {\n    let tableSchemaRegistry = [];\n    schemas.forEach(schema => {\n      schema.size = 0;\n      schema.logDirSize = 0;\n\n      tableSchemaRegistry.push({\n        id: schema.id,\n        subject: schema.subject,\n        version: schema.version,\n        exception: schema.exception,\n        schemaType: schema.schemaType,\n        schema: schema.schemaType === \"PROTOBUF\" ? schema.schema : (schema.schema ? JSON.stringify(JSON.parse(schema.schema), null, 2) : null)\n      });\n    });\n    this.setState({ schemasRegistry: tableSchemaRegistry, loading: false });\n  }\n\n  handleVersion(version) {\n    return <span className=\"badge badge-primary\"> {version}</span>;\n  }\n\n  handleOnDelete(schema) {\n    this.setState({ schemaToDelete: schema }, () => {\n      this.showDeleteModal(`Delete SchemaRegistry ${schema.subject}?`);\n    });\n  }\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '' });\n  };\n\n  deleteSchemaRegistry = () => {\n    const { selectedCluster, schemaToDelete } = this.state;\n    const deleteData = {\n      clusterId: selectedCluster,\n      subject: schemaToDelete.subject\n    };\n\n    this.removeApi(uriDeleteSchema(selectedCluster, schemaToDelete.subject), deleteData)\n      .then(() => {\n        toast.success(`Schema '${schemaToDelete.subject}' is deleted`);\n        this.setState({ showDeleteModal: false, schemaToDelete: {} });\n        this.getSchemaRegistry();\n      })\n      .catch(() => {\n        this.setState({ showDeleteModal: false, schemaToDelete: {} });\n      });\n  };\n  render() {\n    const {\n      selectedCluster,\n      searchData,\n      pageNumber,\n      totalPageNumber,\n      loading\n    } = this.state;\n    const roles = this.state.roles || {};\n    const { history } = this.props;\n    const { clusterId } = this.props.match.params;\n\n    return (\n      <div>\n        <Header title=\"Schema Registry\" history={history} />\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light bg-light mr-auto\n         khq-data-filter khq-sticky khq-nav\"\n        >\n          <SearchBar\n            showSearch={true}\n            search={searchData.search}\n            showPagination={true}\n            pagination={pageNumber}\n            showTopicListView={false}\n            showSchemaRegistry\n            schemaListView={'ALL'}\n            doSubmit={this.handleSearch}\n          />\n\n          <Pagination\n            pageNumber={pageNumber}\n            totalPageNumber={totalPageNumber}\n            onChange={handlePageChange}\n            onSubmit={this.handlePageChangeSubmission}\n          />\n        </nav>\n\n        <Table\n          loading={loading}\n          history={this.props.history}\n          columns={[\n            {\n              id: 'id',\n              accessor: 'id',\n              colName: 'Id'\n            },\n            {\n              id: 'subject',\n              accessor: 'subject',\n              colName: 'Subject'\n            },\n            {\n              id: 'schemaType',\n              accessor: 'schemaType',\n              colName: 'Schema Type'\n            },\n            {\n              id: 'version',\n              accessor: 'version',\n              colName: 'Version',\n              cell: obj => {\n                return this.handleVersion(obj.version);\n              }\n            },\n            {\n              id: 'schema',\n              name: 'schema',\n              accessor: 'schema',\n              colName: 'Schema',\n              type: 'text',\n              extraRow: true,\n              extraRowContent: (obj, col, index) => {\n                return (\n                  <AceEditor\n                    mode={ obj.schemaType === \"PROTOBUF\"? \"protobuf\"  : \"json\"}\n                    id={'value' + index}\n                    theme=\"merbivore_soft\"\n                    value={obj[col.accessor]}\n                    readOnly\n                    name=\"UNIQUE_ID_OF_DIV\"\n                    editorProps={{ $blockScrolling: true }}\n                    style={{ width: '100%', minHeight: '25vh' }}\n                  />\n                );\n              },\n              cell: (obj, col) => {\n                if (obj[col.accessor]) {\n                  return (\n                    <pre className=\"mb-0 khq-data-highlight\">\n                      <code>\n                        { obj.schemaType === \"PROTOBUF\"? obj[col.accessor] : JSON.stringify(JSON.parse(obj[col.accessor]))}\n                      </code>\n                    </pre>\n                  );\n                } else if (obj.exception) {\n                  return (\n                    <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                      {obj.exception}\n                    </div>\n                  );\n                }\n              }\n            }\n          ]}\n          data={this.state.schemasRegistry}\n          updateData={data => {\n            this.setState({ schemasRegistry: data });\n          }}\n          onDelete={schema => {\n            this.handleOnDelete(schema);\n          }}\n          idCol=\"subject\"\n          onDetails={subject => {\n            return `/ui/${selectedCluster}/schema/details/${subject}`;\n          }}\n          actions={\n            roles.registry && roles.registry['registry/delete']\n              ? [constants.TABLE_DELETE, constants.TABLE_DETAILS]\n              : [constants.TABLE_DETAILS]\n          }\n          extraRow\n          noStripes\n          handleExtraExpand={(extraExpanded, el) => {\n            const currentExpandedRows = extraExpanded;\n            const isRowCurrentlyExpanded = currentExpandedRows.includes(el.subject);\n\n            const newExpandedRows = isRowCurrentlyExpanded\n              ? currentExpandedRows\n              : currentExpandedRows.concat({ id: el.id, subject: el.subject });\n            return newExpandedRows;\n          }}\n          handleExtraCollapse={(extraExpanded, el) => {\n            const currentExpandedRows = extraExpanded;\n            const isRowCurrentlyExpanded = currentExpandedRows.some(\n              obj => obj.subject === el.subject\n            );\n\n            const newExpandedRows = !isRowCurrentlyExpanded\n              ? currentExpandedRows\n              : currentExpandedRows.filter(\n                  obj => !(obj.id === el.id && obj.subject === el.subject)\n                );\n            return newExpandedRows;\n          }}\n          noContent={'No schemas available'}\n        />\n        {roles.registry && roles.registry['registry/insert'] && (\n          <aside>\n            <Link\n              to={{\n                pathname: `/ui/${clusterId}/schema/create`,\n                state: { formData: this.state.createSubjectFormData }\n              }}\n              className=\"btn btn-primary\"\n            >\n              Create a Subject\n            </Link>\n          </aside>\n        )}\n\n        <ConfirmModal\n          show={this.state.showDeleteModal}\n          handleCancel={this.closeDeleteModal}\n          handleConfirm={this.deleteSchemaRegistry}\n          message={this.state.deleteMessage}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default SchemaList;\n","import React from 'react';\nimport Header from '../../Header';\nimport Joi from 'joi-browser';\nimport Form from '../../../components/Form/Form';\nimport {uriSchemaCreate} from '../../../utils/endpoints';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass SchemaCreate extends Form {\n  state = {\n    formData: {\n      subject: '',\n      compatibilityLevel: 'BACKWARD',\n      schemaData: '',\n      schemaType: 'AVRO'\n    },\n    compatibilityLevelSelect: [\n      { _id: 'NONE', name: 'NONE' },\n      { _id: 'BACKWARD', name: 'BACKWARD' },\n      { _id: 'BACKWARD_TRANSITIVE', name: 'BACKWARD_TRANSITIVE' },\n      { _id: 'FORWARD', name: 'FORWARD' },\n      { _id: 'FORWARD_TRANSITIVE', name: 'FORWARD_TRANSITIVE' },\n      { _id: 'FULL', name: 'FULL' },\n      { _id: 'FULL_TRANSITIVE', name: 'FULL_TRANSITIVE' }\n    ],\n    schemaTypeSelect: [\n      { _id: 'AVRO', name: 'AVRO' },\n      { _id: 'JSON', name: 'JSON' },\n      { _id: 'PROTOBUF', name: 'PROTOBUF' }\n    ],\n    errors: {}\n  };\n\n  schema = {\n    subject: Joi.string()\n      .required()\n      .label('subject'),\n    compatibilityLevel: Joi.string()\n      .label('Compatibility')\n      .required(),\n    schemaType: Joi.string()\n        .label('SchemaType')\n        .required(),\n    schemaData: Joi.string()\n      .label('SchemaData')\n      .required()\n  };\n\n  onCleanupChange = value => {\n    let { formData } = { ...this.state };\n    formData.compatibilityLevel = value;\n\n    this.setState({ formData });\n  };\n\n  async doSubmit() {\n    const { formData } = this.state;\n    const { clusterId } = this.props.match.params;\n\n    const schemaType = formData.schemaType;\n    let schemaData;\n    let references;\n\n    if (formData.schemaType === 'PROTOBUF') {\n      schemaData = formData.schemaData;\n    } else {\n      const parsedSchemaData = JSON.parse(formData.schemaData);\n      schemaData = parsedSchemaData.schema ? JSON.stringify(parsedSchemaData.schema) : formData.schemaData\n      references = parsedSchemaData.references || [];\n    }\n\n    const schema = {\n      cluster: clusterId,\n      subject: formData.subject,\n      schema: schemaData,\n      schemaType: schemaType,\n      references: references,\n      compatibilityLevel: formData.compatibilityLevel\n    };\n\n    this.postApi(uriSchemaCreate(clusterId), schema)\n      .then(() => {\n        this.props.history.push({\n          pathname: `/ui/${clusterId}/schema`,\n        });\n        toast.success(`Schema '${formData.subject}' is created`);\n      });\n  }\n\n  render() {\n    const { compatibilityLevelSelect, schemaTypeSelect, formData } = this.state;\n    return (\n      <div>\n        <form\n          encType=\"multipart/form-data\"\n          className=\"khq-form khq-form-config\"\n          onSubmit={() => this.doSubmit()}\n        >\n          <Header title=\"Create a schema\" history={this.props.history} />\n          {this.renderInput('subject', 'Subject', 'Subject')}\n\n          {this.renderSelect(\n            'compatibilityLevel',\n            'Compatibility Level',\n            compatibilityLevelSelect,\n            value => {\n              this.setState({ formData: { ...formData, compatibilityLevel: value.target.value } });\n            },\n            'col-sm-10'\n          )}\n\n          {this.renderSelect(\n              'schemaType',\n              'Schema Type',\n              schemaTypeSelect,\n              value => {\n                this.setState({ formData: { ...formData, schemaType: value.target.value } });\n              },\n              'col-sm-10'\n          )}\n\n          {this.renderJSONInput('schemaData', 'Schema', value => {\n            this.setState({\n              formData: {\n                ...formData,\n                schemaData: value\n              }\n            });\n          })}\n          {this.renderButton(\n            'Create',\n            () => {\n              this.doSubmit();\n            },\n            undefined,\n            'button'\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SchemaCreate;\n","import ConsumerGroupUpdate from './ConsumerGroupUpdate';\n\nexport default ConsumerGroupUpdate;\n","import React from 'react';\nimport Header from '../../../Header/Header';\nimport Form from '../../../../components/Form/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DatePicker from '../../../../components/DatePicker';\nimport {formatDateTime, groupedTopicOffset} from '../../../../utils/converters';\nimport Joi from 'joi-browser';\nimport {\n  uriConsumerGroup,\n  uriConsumerGroupOffsetsByTimestamp,\n  uriConsumerGroupUpdate\n} from '../../../../utils/endpoints';\nimport moment from 'moment';\nimport './styles.scss';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass ConsumerGroupUpdate extends Form {\n  state = {\n    clusterId: '',\n    consumerGroupId: '',\n    timestamp: '',\n    topicOffset: this.props.topicOffset || {},\n    firstOffsets: {},\n    lastOffsets: {},\n    formData: {},\n    checked: {},\n    errors: {}\n  };\n\n  schema = {};\n\n  componentDidMount() {\n    const { clusterId, consumerGroupId } = this.props.match.params;\n\n    this.setState({ clusterId, consumerGroupId }, () => {\n      this.getTopicOffset();\n    });\n  }\n\n  async getTopicOffset() {\n    const { clusterId, consumerGroupId, topicOffset, timestamp} = this.state;\n    const momentValue = moment(timestamp);\n\n    const date =\n      timestamp.toString().length > 0\n        ? formatDateTime(\n            {\n              year: momentValue.year(),\n              monthValue: momentValue.month(),\n              dayOfMonth: momentValue.date(),\n              hour: momentValue.hour(),\n              minute: momentValue.minute(),\n              second: momentValue.second(),\n              milli: momentValue.millisecond()\n            },\n            'YYYY-MM-DDTHH:mm:ss.SSS'\n          ) + 'Z'\n        : '';\n\n    let data = {};\n    if (JSON.stringify(topicOffset) === JSON.stringify({})) {\n      data = await this.getApi(uriConsumerGroup(clusterId, consumerGroupId));\n      data = data.data;\n      const topicOffset = groupedTopicOffset(data.offsets);\n\n      if (data) {\n        this.setState({ topicOffset:  topicOffset}, () =>\n          this.createValidationSchema(topicOffset)\n        );\n      } else {\n        this.setState({ topicOffset: {} });\n      }\n    } else if (date !== '') {\n      data = await this.getApi(uriConsumerGroupOffsetsByTimestamp(clusterId, consumerGroupId, date));\n      data = data.data;\n      this.handleOffsetsByTimestamp(data);\n    } else {\n      this.createValidationSchema(topicOffset);\n    }\n  }\n\n  createValidationSchema = topicOffset => {\n    let { formData, checked} = this.state;\n    let firstOffsets = {};\n    let lastOffsets = {};\n    let name = '';\n\n    Object.keys(topicOffset).forEach(topidId => {\n      checked[topidId] = false;\n      topicOffset[topidId].forEach(offset => {\n        name = `${topidId}-${offset.partition}`;\n        this.schema[name] = Joi.number()\n          .min(offset.firstOffset || 0)\n          .max(offset.lastOffset || 0)\n          .required()\n          .label(`Partition ${offset.partition} offset`);\n        formData[name] = offset.offset || 0;\n        firstOffsets[name] = offset.firstOffset || 0;\n        lastOffsets[name] = offset.lastOffset || 0;\n      });\n    });\n\n    this.setState({ formData, firstOffsets, lastOffsets, checked});\n  };\n\n  handleOffsetsByTimestamp = offsets => {\n    let { formData } = this.state;\n    let topic = '';\n    let partition = '';\n    offsets.forEach(offset => {\n      topic = offset.topic;\n      partition = offset.partition;\n      formData[`${topic}-${partition}`] = offset.offset;\n    });\n  };\n\n  resetToFirstOffsets = () => {\n    const { firstOffsets } = this.state;\n    let { formData } = this.state;\n\n    Object.keys(formData).forEach(name => {\n      formData[name] = firstOffsets[name];\n    });\n\n    this.setState({ formData });\n  };\n\n  unCheckAll = (value)  => {\n    const {checked} = this.state;\n\n    Object.keys(checked).forEach(name => {\n      checked[name] = value;\n    });\n\n    this.setState({ checked});\n  }\n\n  resetToLastOffsets = () => {\n    const { lastOffsets } = this.state;\n    let { formData } = this.state;\n\n    Object.keys(formData).forEach(name => {\n      formData[name] = lastOffsets[name];\n    });\n\n    this.setState({ formData });\n  };\n\n  createSubmitBody = (formData, checked) => {\n    let body = [];\n    let splitName = [];\n    let topic = '';\n    let partition = '';\n\n    Object.keys(formData).forEach(name => {\n        splitName = name.split('-');\n        partition = splitName.pop();\n        topic = splitName.join('-');\n\n      if (checked[topic] === true) {\n        body.push({\n          topic,\n          partition,\n          offset: formData[name]\n        });\n      }\n    });\n\n    return body;\n  };\n\n  async doSubmit() {\n    const { clusterId, consumerGroupId, formData, checked } = this.state;\n\n    if (Object.values(checked).filter(value => value === true).length > 0) {\n      await this.postApi(\n        uriConsumerGroupUpdate(clusterId, consumerGroupId),\n        this.createSubmitBody(formData, checked)\n      );\n\n      this.setState({ state: this.state });\n      toast.success(`Offsets for '${consumerGroupId}' updated successfully.`);\n    } else {\n      toast.error('Unable to perform operation, no topics checked.');\n    }\n  }\n\n  rendertopicOffset = () => {\n    const { topicOffset, checked } = this.state;\n    const renderedItems = [];\n\n    Object.keys(topicOffset).forEach(topicId => {\n      renderedItems.push(\n        <fieldset id={`fieldset-${topicId}`} key={topicId}>\n          <legend id={`legend-${topicId}`}>\n            <input\n              type=\"checkbox\"\n              value={topicId}\n              checked={checked[topicId] || false}\n              onChange={this.checkedtopicOffset}/> {topicId}\n          </legend>\n          {this.renderPartitionInputs(topicOffset[topicId], topicId, !checked[topicId])}\n        </fieldset>\n      );\n    });\n\n    return renderedItems;\n  };\n\n  checkedtopicOffset = (event) => {\n    const { checked } = this.state;\n    checked[event.target.value] = event.target.checked;\n\n    this.setState({ checked: checked });\n  }\n\n  renderPartitionInputs = (offsets, topicId, disabled) => {\n    const renderedInputs = [];\n\n    offsets.forEach(offset => {\n      const name = `${topicId}-${offset.partition}`;\n\n      renderedInputs.push(\n        <div className=\"form-group row\" key={name}>\n          <div className=\"col-sm-10 partition-input\">\n            <span id={`${topicId}-${offset.partition}-input`}>\n              {this.renderInput(\n                name,\n                `Partition: ${offset.partition}`,\n                'Offset',\n                'number',\n                undefined,\n                true,\n                'partition-input-div',\n                `partition-input ${name}-input`,\n                { disabled: disabled }\n              )}\n            </span>\n          </div>\n        </div>\n      );\n    });\n\n    return renderedInputs;\n  };\n\n  renderResetButton = () => {\n    const { timestamp } = this.state;\n    const { loading } = this.props.history.location;\n\n    return (\n      <span>\n        <div\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          style={{ marginRight: '0.5rem' }}\n          onClick={() => this.unCheckAll(true)}\n        >\n          Check all\n        </div>\n        <div\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            style={{ marginRight: '0.5rem' }}\n            onClick={() => this.unCheckAll(false)}\n        >\n          Uncheck all\n        </div>\n        <div\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          style={{ marginRight: '0.5rem' }}\n          onClick={() => this.resetToFirstOffsets()}\n        >\n          Reset to first offsets\n        </div>\n        <div\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          style={{ marginRight: '0.5rem' }}\n          onClick={() => this.resetToLastOffsets()}\n        >\n          Reset to last offsets\n        </div>\n        <div\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          style={{ marginRight: '0.5rem', padding: 0 }}\n        >\n          <Dropdown>\n            <Dropdown.Toggle>Filter datetime</Dropdown.Toggle>\n            {!loading && (\n              <Dropdown.Menu>\n                <div>\n                  <DatePicker\n                    showTimeInput\n                    showDateTimeInput\n                    value={timestamp}\n                    label={''}\n                    onChange={value => {\n                      this.setState({ timestamp: value }, () => this.getTopicOffset());\n                    }}\n                  />\n                </div>\n              </Dropdown.Menu>\n            )}\n          </Dropdown>\n        </div>\n      </span>\n    );\n  };\n\n  render() {\n    const { consumerGroupId } = this.state;\n\n    return (\n      <div>\n        <Header title={`Update offsets: ${consumerGroupId}`} history={this.props.history} />\n        <form\n          className=\"khq-form khq-update-consumer-group-offsets\"\n          onSubmit={() => this.handleSubmit()}\n        >\n          {this.rendertopicOffset()}\n          {this.renderButton(\n            'Update',\n            this.handleSubmit,\n            undefined,\n            'submit',\n            this.renderResetButton()\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ConsumerGroupUpdate;\n","import ConsumerGroupOffsetDelete from './ConsumerGroupOffsetDelete';\n\nexport default ConsumerGroupOffsetDelete;\n","import React from 'react';\nimport Header from '../../../Header/Header';\nimport {\n  uriConsumerGroup, uriDeleteGroupOffsets,\n} from '../../../../utils/endpoints';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Root from \"../../../../components/Root\";\nimport Table from \"../../../../components/Table\";\nimport constants from \"../../../../utils/constants\";\nimport ConfirmModal from \"../../../../components/Modal/ConfirmModal\";\nimport {toast} from \"react-toastify\";\n\nclass ConsumerGroupOffsetDelete extends Root {\n  state = {\n    clusterId: '',\n    consumerGroupId: '',\n    topicIds: [],\n    deleteAllOffsetsForTopic: '',\n    showDeleteModal: false,\n    deleteMessage: '',\n  };\n\n  componentDidMount() {\n    const {clusterId, consumerGroupId} = this.props.match.params;\n\n    this.setState({clusterId, consumerGroupId}, () => {\n      this.getTopics();\n    });\n  }\n\n  async getTopics() {\n    const { clusterId, consumerGroupId } = this.state;\n\n    let data;\n    data = await this.getApi(uriConsumerGroup(clusterId, consumerGroupId));\n    data = data.data;\n\n    if (data && data.topics) {\n      this.setState({ topicIds: data.topics.map(topic => ({ topic })) });\n    } else {\n      this.setState({ topicIds: [] });\n    }\n  }\n\n  showDeleteModal = deleteMessage => {\n    this.setState({ showDeleteModal: true, deleteMessage });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, deleteMessage: '', deleteAllOffsetsForTopic: '' });\n  };\n\n  deleteOffsets = () => {\n    const { clusterId, consumerGroupId, deleteAllOffsetsForTopic } = this.state;\n    this.removeApi(uriDeleteGroupOffsets(clusterId, consumerGroupId, deleteAllOffsetsForTopic))\n      .then(() => {\n        toast.success(`Offsets for topic '${deleteAllOffsetsForTopic}' and consumer group '${consumerGroupId}' are deleted`);\n        this.setState({ showDeleteModal: false, deleteMessage: '', deleteAllOffsetsForTopic: '' }, () => {\n          this.getTopics();\n        });\n      })\n      .catch(() => {\n        this.setState({ showDeleteModal: false, deleteMessage: '', deleteAllOffsetsForTopic: '' });\n      });\n  }\n\n  handleOnDelete(topicId) {\n    this.setState({ deleteAllOffsetsForTopic: topicId }, () => {\n      this.showDeleteModal(\n        <React.Fragment>\n          Do you want to delete all offsets of topic: {<code>{topicId}</code>} ?\n        </React.Fragment>\n      );\n    });\n  }\n\n  render() {\n    const {consumerGroupId} = this.state;\n\n    return (\n      <div>\n        <div>\n          <Header title={`Delete offsets: ${consumerGroupId}`}\n                  history={this.props.history}/>\n        </div>\n        <div>\n          <Table\n            history={this.props.history}\n            columns={[\n              {\n                id: 'topic',\n                accessor: 'topic',\n                colName: 'Topic',\n                type: 'text',\n                sortable: true\n              },\n            ]}\n            data={this.state.topicIds}\n            noContent={\n              <tr>\n                <td colSpan={3}>\n                  <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                    No offsets found.\n                  </div>\n                </td>\n              </tr>\n            }\n            onDelete={(row) => {\n              this.handleOnDelete(row.topic)\n            }}\n            actions={\n              [constants.TABLE_DELETE]\n            }\n          />\n        </div>\n        <ConfirmModal\n          show={this.state.showDeleteModal}\n          handleCancel={this.closeDeleteModal}\n          handleConfirm={this.deleteOffsets}\n          message={this.state.deleteMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConsumerGroupOffsetDelete;\n","import React from 'react';\nimport Table from '../../../../components/Table/Table';\nimport { uriAclsByPrincipal } from '../../../../utils/endpoints';\nimport Root from \"../../../../components/Root\";\n\nclass AclGroups extends Root {\n  state = {\n    selectedCluster: this.props.clusterId,\n    principalEncoded: this.props.principalEncoded,\n    tableData: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getAcls();\n  }\n\n  async getAcls() {\n    const { selectedCluster, principalEncoded } = this.state;\n\n    const response = await this.getApi(uriAclsByPrincipal(selectedCluster, principalEncoded, 'GROUP'));\n    if (response.data.acls) {\n      const acls = response.data || [];\n      this.handleAcls(acls);\n    } else {\n      this.setState({ tableData: [], loading: false });\n    }\n  }\n\n  handleAcls = data => {\n    const tableData = data.acls.map(acl => {\n      return {\n        group: acl.resource.name,\n        patterntype: acl.resource.patternType,\n        host: acl.host,\n        permission: acl.operation\n      };\n    });\n\n    this.setState({ tableData, loading: false });\n  };\n\n  handlePermission = permission => {\n    return (\n      <React.Fragment>\n        <span className=\"badge badge-secondary\">{permission.permissionType}</span>{' '}\n        {permission.operation}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Table\n        loading={loading}\n        history={this.props.history}\n        columns={[\n          {\n            id: 'group',\n            accessor: 'group',\n            colName: 'Group',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'pattern-type',\n            accessor: 'patterntype',\n            colName: 'Pattern Type',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'host',\n            accessor: 'host',\n            colName: 'Host',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'permission',\n            accessor: 'permission',\n            colName: 'Permission',\n            type: 'text',\n            cell: obj => {\n              if (obj.permission) {\n                return <div>{this.handlePermission(obj.permission)}</div>;\n              }\n            }\n          }\n        ]}\n        data={this.state.tableData}\n        updateData={data => {\n          this.setState({ tableData: data });\n        }}\n        noContent={\n          'No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the cluster.'\n        }\n      />\n    );\n  }\n}\n\nexport default AclGroups;\n","import React from 'react';\nimport Table from '../../../../components/Table/Table';\nimport { uriAclsByPrincipal } from '../../../../utils/endpoints';\nimport Root from \"../../../../components/Root\";\n\nclass AclTopics extends Root {\n  state = {\n    selectedCluster: this.props.clusterId,\n    principalEncoded: this.props.principalEncoded,\n    tableData: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getAcls();\n  }\n\n  async getAcls() {\n    const { selectedCluster, principalEncoded } = this.state;\n\n    const response = await this.getApi(uriAclsByPrincipal(selectedCluster, principalEncoded, 'TOPIC'));\n    if (response.data.acls) {\n      const acls = response.data || [];\n      this.handleAcls(acls);\n    } else {\n      this.setState({ tableData: [], loading: false });\n    }\n  }\n\n  handleAcls = data => {\n    const tableData = data.acls.map(acl => {\n      return {\n        topic: acl.resource.name,\n        patterntype: acl.resource.patternType,\n        host: acl.host,\n        permission: acl.operation\n      };\n    });\n\n    this.setState({ tableData, loading: false });\n  };\n\n  handlePermission = permission => {\n    return (\n      <React.Fragment>\n        <span className=\"badge badge-secondary\">{permission.permissionType}</span>{' '}\n        {permission.operation}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Table\n        loading={loading}\n        history={this.props.history}\n        columns={[\n          {\n            id: 'topic',\n            accessor: 'topic',\n            colName: 'Topic',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'pattern-type',\n            accessor: 'patterntype',\n            colName: 'Pattern Type',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'host',\n            accessor: 'host',\n            colName: 'Host',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'permission',\n            accessor: 'permission',\n            colName: 'Permission',\n            type: 'text',\n            cell: obj => {\n              if (obj.permission) {\n                return <div>{this.handlePermission(obj.permission)}</div>;\n              }\n            }\n          }\n        ]}\n        data={this.state.tableData}\n        updateData={data => {\n          this.setState({ tableData: data });\n        }}\n        noContent={\n          'No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the cluster.'\n        }\n      />\n    );\n  }\n}\n\nexport default AclTopics;\n","import React from 'react';\nimport Table from '../../../../components/Table/Table';\nimport { uriAclsByPrincipal } from '../../../../utils/endpoints';\nimport Root from \"../../../../components/Root\";\n\nclass AclClusters extends Root {\n  state = {\n    selectedCluster: this.props.clusterId,\n    principalEncoded: this.props.principalEncoded,\n    tableData: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getAcls();\n  }\n\n  async getAcls() {\n    const { selectedCluster, principalEncoded } = this.state;\n\n    const response = await this.getApi(uriAclsByPrincipal(selectedCluster, principalEncoded, 'CLUSTER'));\n    if (response.data.acls) {\n      const acls = response.data || [];\n      this.handleAcls(acls);\n    } else {\n      this.setState({ tableData: [], loading: false });\n    }\n  }\n\n  handleAcls = data => {\n    const tableData = data.acls.map(acl => {\n      return {\n        cluster: acl.resource.name,\n        patterntype: acl.resource.patternType,\n        host: acl.host,\n        permission: acl.operation\n      };\n    });\n\n    this.setState({ tableData, loading: false });\n  };\n\n  handlePermission = permission => {\n    return (\n      <React.Fragment>\n        <span className=\"badge badge-secondary\">{permission.permissionType}</span>{' '}\n        {permission.operation}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Table\n        loading={loading}\n        history={this.props.history}\n        columns={[\n          {\n            id: 'cluster',\n            accessor: 'cluster',\n            colName: 'Cluster',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'pattern-type',\n            accessor: 'patterntype',\n            colName: 'Pattern Type',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'host',\n            accessor: 'host',\n            colName: 'Host',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'permission',\n            accessor: 'permission',\n            colName: 'Permission',\n            type: 'text',\n            cell: obj => {\n              if (obj.permission) {\n                return <div>{this.handlePermission(obj.permission)}</div>;\n              }\n            }\n          }\n        ]}\n        data={this.state.tableData}\n        updateData={data => {\n          this.setState({ tableData: data });\n        }}\n        noContent={\n          'No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the cluster.'\n        }\n      />\n    );\n  }\n}\n\nexport default AclClusters;\n","import React from 'react';\nimport Table from '../../../../components/Table/Table';\nimport { uriAclsByPrincipal } from '../../../../utils/endpoints';\nimport Root from \"../../../../components/Root\";\n\nclass AclTransactionalIds extends Root {\n  state = {\n    selectedCluster: this.props.clusterId,\n    principalEncoded: this.props.principalEncoded,\n    tableData: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getAcls();\n  }\n\n  async getAcls() {\n    const { selectedCluster, principalEncoded } = this.state;\n\n    const response = await this.getApi(uriAclsByPrincipal(selectedCluster, principalEncoded, 'TRANSACTIONAL_ID'));\n    if (response.data.acls) {\n      const acls = response.data || [];\n      this.handleAcls(acls);\n    } else {\n      this.setState({ tableData: [], loading: false });\n    }\n  }\n\n  handleAcls = data => {\n    const tableData = data.acls.map(acl => {\n      return {\n        transactionalId: acl.resource.name,\n        patterntype: acl.resource.patternType,\n        host: acl.host,\n        permission: acl.operation\n      };\n    });\n\n    this.setState({ tableData, loading: false });\n  };\n\n  handlePermission = permission => {\n    return (\n      <React.Fragment>\n        <span className=\"badge badge-secondary\">{permission.permissionType}</span>{' '}\n        {permission.operation}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Table\n        loading={loading}\n        history={this.props.history}\n        columns={[\n          {\n            id: 'transactionalId',\n            accessor: 'transactionalId',\n            colName: 'Transactional Id',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'pattern-type',\n            accessor: 'patterntype',\n            colName: 'Pattern Type',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'host',\n            accessor: 'host',\n            colName: 'Host',\n            type: 'text',\n            sortable: true\n          },\n          {\n            id: 'permission',\n            accessor: 'permission',\n            colName: 'Permission',\n            type: 'text',\n            cell: obj => {\n              if (obj.permission) {\n                return <div>{this.handlePermission(obj.permission)}</div>;\n              }\n            }\n          }\n        ]}\n        data={this.state.tableData}\n        updateData={data => {\n          this.setState({ tableData: data });\n        }}\n        noContent={\n          'No ACLS found, or the \"authorizer.class.name\" parameter is not configured on the cluster.'\n        }\n      />\n    );\n  }\n}\n\nexport default AclTransactionalIds;\n","import AclDetails from './AclDetails';\n\nexport default AclDetails;\n","import React, { Component } from 'react';\nimport Header from '../../Header';\nimport AclGroups from './AclGroups/AclGroups';\nimport AclTopics from './AclTopics/AclTopics';\nimport AclClusters from './AclClusters/AclClusters';\nimport AclTransactionalIds from './AclTransactionalIds/AclTransactionalIds';\nimport {getSelectedTab} from \"../../../utils/functions\";\nimport { Link } from 'react-router-dom';\n\nclass AclDetails extends Component {\n  state = {\n    clusterId: this.props.match.params.clusterId,\n    principalEncoded: this.props.match.params.principalEncoded,\n    selectedTab: 'topics'\n  };\n\n  tabs = ['topics', 'groups', 'clusters', 'transactionalids'];\n\n  componentDidMount() {\n    const { clusterId, principalEncoded } = this.props.match.params;\n    const tabSelected = getSelectedTab(this.props, this.tabs);\n    this.setState(\n        {\n          selectedTab: (tabSelected)? tabSelected : 'topics'\n        },\n        () => {\n          this.props.history.replace(`/ui/${clusterId}/acls/${principalEncoded}/${this.state.selectedTab}`);\n        }\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      const tabSelected = getSelectedTab(this.props, this.tabs);\n      this.setState({ selectedTab: tabSelected });\n    }\n  }\n\n  tabClassName = tab => {\n    const { selectedTab } = this.state;\n    return selectedTab === tab ? 'nav-link active' : 'nav-link';\n  };\n\n  renderSelectedTab() {\n    const { selectedTab, clusterId, principalEncoded } = this.state;\n    const { history } = this.props;\n\n    switch (selectedTab) {\n      case 'groups':\n        return (\n          <AclGroups clusterId={clusterId} principalEncoded={principalEncoded} history={history} />\n        );\n      case 'topics':\n        return (\n          <AclTopics clusterId={clusterId} principalEncoded={principalEncoded} history={history} />\n        );\n      case 'clusters':\n        return (\n          <AclClusters clusterId={clusterId} principalEncoded={principalEncoded} history={history} />\n        );\n      case 'transactionalids':\n        return (\n          <AclTransactionalIds clusterId={clusterId} principalEncoded={principalEncoded} history={history} />\n        );\n      default:\n        return (\n          <AclTopics clusterId={clusterId} principalEncoded={principalEncoded} history={history} />\n        );\n    }\n  }\n\n  render() {\n    const { principalEncoded, clusterId } = this.state;\n    const { history } = this.props;\n    const principal = atob(principalEncoded);\n    return (\n      <div>\n        <Header title={`Acl: ${principal}`} history={history} />\n        <div className=\"tabs-container\">\n          <ul className=\"nav nav-tabs\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/acls/${principalEncoded}/topics`}\n                className={this.tabClassName('topics')}\n              >\n                Topics\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/acls/${principalEncoded}/groups`}\n                className={this.tabClassName('groups')}\n              >\n                Groups\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/acls/${principalEncoded}/clusters`}\n                className={this.tabClassName('clusters')}\n              >\n                Clusters\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/ui/${clusterId}/acls/${principalEncoded}/transactionalids`}\n                className={this.tabClassName('transactionalids')}\n              >\n                Transactional Ids\n              </Link>\n            </li>\n          </ul>\n\n          <div className=\"tab-content\">\n            <div className=\"tab-pane active\" role=\"tabpanel\">\n              {this.renderSelectedTab()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AclDetails;\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\n\nimport logo from '../../images/logo.svg';\nimport { uriCurrentUser, uriLogin, uriOidc } from '../../utils/endpoints';\nimport { organizeRoles } from '../../utils/converters';\nimport { login } from '../../utils/api';\nimport Form from '../../components/Form/Form';\nimport Joi from 'joi-browser';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// Adaptation of login.ftl\n\nclass Login extends Form {\n  state = {\n    formData: {\n      username: '',\n      password: ''\n    },\n    errors: {},\n    config: {\n      formEnabled: true,\n      oidcAuths: []\n    }\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label('Username'),\n    password: Joi.string()\n      .required()\n      .label('Password')\n  };\n\n  login() {\n    const { formData } = this.state;\n\n    try {\n      const body = {\n        username: formData.username,\n        password: formData.password\n      };\n\n      login(uriLogin(), body)\n        .then(() => {\n          this.getData();\n        });\n    } catch (err) {\n      toast.error('Wrong Username or Password!');\n    }\n  }\n\n  async getData() {\n    const res = await this.getApi(uriCurrentUser());\n    const currentUserData = res.data;\n\n    if (currentUserData.logged) {\n      sessionStorage.setItem('login', true);\n      sessionStorage.setItem('user', currentUserData.username);\n      sessionStorage.setItem('roles', organizeRoles(currentUserData.roles));\n\n      const returnTo = sessionStorage.getItem('returnTo');\n      sessionStorage.removeItem('returnTo');\n\n      this.props.history.push({\n        pathname: (returnTo || '/ui'),\n      });\n\n      window.location.reload(true);\n    } else {\n      toast.error('Wrong Username or Password!');\n    }\n  }\n\n  componentDidMount() {\n    const auths = JSON.parse(sessionStorage.getItem('auths'));\n    if (auths && auths.loginEnabled) {\n      const { loginEnabled, ...config } = auths;\n      this.setState({ config });\n    } else {\n      this.props.history.push({\n        pathname: '/ui',\n      });\n    }\n  }\n\n  _renderForm() {\n    const { errors } = this.state;\n    return (\n      <>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n              <i className=\"fa fa-user\" />\n            </span>\n          </div>\n          <input\n            type=\"text\"\n            name=\"username\"\n            className=\"form-control\"\n            placeholder=\"Username\"\n            aria-label=\"Username\"\n            required=\"\"\n            autoFocus=\"\"\n            onChange={this.handleChange}\n          />\n          {errors.username && (\n            <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n              {errors.username}\n            </div>\n          )}\n        </div>\n\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n              <i className=\"fa fa-lock\" />\n            </span>\n          </div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Password\"\n            aria-label=\"Password\"\n            required=\"\"\n            onChange={this.handleChange}\n          />\n          {errors.password && (\n            <div id=\"input-error\" className=\"alert alert-danger mt-1 p-1\">\n              {errors.password}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group text-right\">\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"btn btn-primary btn-lg\"\n            disabled={this.validate()}\n          />\n        </div>\n      </>\n    );\n  }\n\n  _renderSeparator() {\n    return (\n      <div className=\"khq-login-separator\">\n        <span>or</span>\n      </div>\n    );\n  }\n\n  _renderOidc(oidcsAuths) {\n    return oidcsAuths.map(auth => (\n      <a href={uriOidc(auth.key)} className=\"btn btn-primary btn-block\">{auth.label}</a>\n    ));\n  }\n\n  render() {\n    const { formEnabled, oidcAuths } = this.state.config;\n\n    return (\n      <div>\n        <main>\n          <form\n            className=\"khq-login\"\n            onSubmit={e => {\n              e.preventDefault();\n              this.login();\n            }}\n          >\n            <div>\n              <h3 className=\"logo\">\n                <img src={logo} alt=\"\" />\n              </h3>\n            </div>\n            {formEnabled && this._renderForm()}\n            {formEnabled && oidcAuths && this._renderSeparator()}\n            {oidcAuths && this._renderOidc(oidcAuths)}\n          </form>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from '../../components/Form/Form';\nimport Header from '../Header';\nimport { SETTINGS_VALUES } from '../../utils/constants';\nimport {getUIOptions, setUIOptions} from '../../utils/localstorage';\nimport './styles.scss';\nimport {toast} from 'react-toastify';\n\nclass Settings extends Form {\n  state = {\n    clusterId: '',\n    formData: {\n      topicDefaultView: '',\n      topicDataSort: '',\n      topicDataDateTimeFormat: '',\n      skipConsumerGroups: false,\n      skipLastRecord: false,\n      showAllConsumerGroups: true\n    },\n    errors: {}\n  };\n\n  topicDefaultView = Object.entries(SETTINGS_VALUES.TOPIC.TOPIC_DEFAULT_VIEW)\n                        .map(([value]) => ({_id: value, name: value}));\n  topicDataSort = Object.entries(SETTINGS_VALUES.TOPIC_DATA.SORT)\n                        .map(([value]) => ({_id: value, name: value}));\n  topicDataDateTimeFormat = Object.entries(SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT)\n                        .map(([value]) => ({_id: value, name: value}));\n\n  schema = {\n    topicDefaultView: Joi.string().optional(),\n    topicDataSort: Joi.string().optional(),\n    topicDataDateTimeFormat: Joi.string().required(),\n    skipConsumerGroups: Joi.boolean().optional(),\n    skipLastRecord: Joi.boolean().optional(),\n    showAllConsumerGroups: Joi.boolean().optional()\n  };\n\n  componentDidMount() {\n    const { clusterId } = this.props.match.params;\n\n    const uiOptions = getUIOptions(clusterId);\n\n    this.setState({ clusterId, formData: {\n        topicDefaultView: (uiOptions && uiOptions.topic)? uiOptions.topic.defaultView : '',\n        topicDataSort: (uiOptions && uiOptions.topicData)? uiOptions.topicData.sort : '',\n        topicDataDateTimeFormat: (uiOptions && uiOptions.topicData)? uiOptions.topicData.dateTimeFormat : '',\n        skipConsumerGroups: (uiOptions && uiOptions.topic)? uiOptions.topic.skipConsumerGroups : false,\n        skipLastRecord: (uiOptions && uiOptions.topic)? uiOptions.topic.skipLastRecord : false,\n        showAllConsumerGroups: (uiOptions && uiOptions.topic)? uiOptions.topic.showAllConsumerGroups : false\n      }})\n  }\n\n  checkedSkipConsumerGroups = (event) => {\n    const { formData } = this.state;\n    formData.skipConsumerGroups = event.target.checked;\n    this.setState({formData});\n  }\n\n\n\n  doSubmit() {\n    const { clusterId, formData } = this.state;\n    setUIOptions(clusterId,\n        {\n          topic: {\n            defaultView: formData.topicDefaultView,\n            skipConsumerGroups: formData.skipConsumerGroups,\n            skipLastRecord: formData.skipLastRecord,\n            showAllConsumerGroups: formData.showAllConsumerGroups\n          },\n          topicData: {\n            sort: formData.topicDataSort,\n            dateTimeFormat: formData.topicDataDateTimeFormat\n          }\n        });\n    toast.success(`Settings for cluster '${clusterId}' updated successfully.`);\n  }\n\n  render() {\n    return (\n      <div>\n        <form\n          encType=\"multipart/form-data\"\n          className=\"khq-form khq-form-config\"\n          onSubmit={() => this.doSubmit()}\n        >\n          <Header title=\"Settings\" history={this.props.history} />\n          <fieldset id=\"topic\" key=\"topic\">\n            <legend id=\"topic\">Topic</legend>\n          {this.renderSelect(\n              'topicDefaultView',\n              'Default View',\n               this.topicDefaultView,\n              ({ currentTarget: input }) => {\n                const { formData } = this.state;\n                formData.topicDefaultView = input.value;\n                this.setState({formData});\n              },\n              'col-sm-10',\n              'select-wrapper settings-wrapper',\n              true,\n              { className: 'form-control' }\n          )}\n            <div className=\"select-wrapper settings-wrapper row\">\n              <span className=\"col-sm-2 col-form-label\">Skip Consumer Groups</span>\n              <span className=\"col-sm-10 row-checkbox-settings\">\n                <input\n                  type=\"checkbox\"\n                  value=\"skipConsumerGroups\"\n                  checked={this.state.formData.skipConsumerGroups || false}\n                  onChange={this.checkedSkipConsumerGroups}\n              /></span>\n            </div>\n            <div className=\"select-wrapper settings-wrapper row\">\n              <span className=\"col-sm-2 col-form-label\">Skip Last Record Date</span>\n              <span className=\"col-sm-10 row-checkbox-settings\">\n              <input\n                  type=\"checkbox\"\n                  value=\"skipLastRecord\"\n                  checked={this.state.formData.skipLastRecord || false}\n                  onChange={ event => {\n                    const { formData } = this.state;\n                    formData.skipLastRecord = event.target.checked;\n                    this.setState({formData});\n                  }}\n              /></span>\n            </div>\n            <div className=\"select-wrapper settings-wrapper row\">\n              <span className=\"col-sm-2 col-form-label\">Show All Consumer Groups</span>\n              <span className=\"col-sm-10 row-checkbox-settings\">\n              <input\n                  type=\"checkbox\"\n                  value=\"showAllConsumerGroups\"\n                  checked={this.state.formData.showAllConsumerGroups || false}\n                  onChange={ event => {\n                    const { formData } = this.state;\n                    formData.showAllConsumerGroups = event.target.checked;\n                    this.setState({formData});\n                  }}\n              /></span>\n            </div>\n          </fieldset>\n\n          <fieldset id=\"topicData\" key=\"topicData\">\n            <legend id=\"topicData\">Topic Data</legend>\n            {this.renderSelect(\n                'topicDataSort',\n                'Sort',\n                this.topicDataSort,\n                ({ currentTarget: input }) => {\n                  const { formData } = this.state;\n                  formData.topicDataSort = input.value;\n                  this.setState({formData});\n                },\n                'col-sm-10',\n                'select-wrapper settings-wrapper',\n                true,\n                { className: 'form-control' }\n            )}\n            {this.renderSelect(\n                'topicDataDateTimeFormat',\n                'Time Format',\n                this.topicDataDateTimeFormat,\n                ({ currentTarget: input }) => {\n                  const { formData } = this.state;\n                  formData.topicDataDateTimeFormat = input.value;\n                  this.setState({formData});\n                },\n                'col-sm-10',\n                'select-wrapper settings-wrapper',\n                true,\n                { className: 'form-control' }\n            )}\n          </fieldset>\n\n          {this.renderButton(\n            'Update Settings',\n            () => {\n              this.doSubmit();\n            },\n            undefined,\n            'button'\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport TopicList from '../containers/Topic/TopicList';\nimport Topic from '../containers/Topic/Topic';\nimport NodesList from '../containers/Node/NodeList/NodesList';\nimport NodeDetails from '../containers/Node/NodeDetail';\nimport Base from '../components/Base/Base.jsx';\nimport Tail from '../containers/Tail';\nimport Acls from '../containers/Acl/AclList';\nimport ConnectList from '../containers/Connect/ConnectList/ConnectList';\nimport ConnectCreate from '../containers/Connect/ConnectCreate/ConnectCreate';\nimport Connect from '../containers/Connect/ConnectDetail/Connect';\nimport TopicCreate from '../containers/Topic/TopicCreate/TopicCreate';\nimport TopicProduce from '../containers/Topic/TopicProduce';\nimport TopicCopy from '../containers/Topic/TopicCopy';\nimport Loading from '../containers/Loading';\nimport ConsumerGroupList from '../containers/ConsumerGroup/ConsumerGroupList';\nimport ConsumerGroup from '../containers/ConsumerGroup/ConsumerGroupDetail';\nimport Schema from '../containers/Schema/SchemaDetail/Schema';\nimport SchemaList from '../containers/Schema/SchemaList/SchemaList';\nimport SchemaCreate from '../containers/Schema/SchemaCreate/SchemaCreate';\nimport ConsumerGroupUpdate from '../containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupUpdate';\nimport ConsumerGroupOffsetDelete from '../containers/ConsumerGroup/ConsumerGroupDetail/ConsumerGroupOffsetDelete';\nimport AclDetails from '../containers/Acl/AclDetail';\nimport Login from '../containers/Login';\nimport Settings from '../containers/Settings/Settings';\nimport { organizeRoles } from './converters';\nimport {uriAuths, uriClusters, uriCurrentUser} from './endpoints';\nimport Root from '../components/Root';\n\nclass Routes extends Root {\n  state = {\n    clusters: [],\n    clusterId: '',\n    user: '',\n    loading: true\n  };\n  static propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object,\n    clusterId: PropTypes.string,\n    clusters: PropTypes.array\n  };\n\n  async getClusters() {\n    const { clusterId } = this.state;\n    try {\n        const resClusters = await this.getApi(uriClusters());\n        this.setState(\n            {\n                clusters: resClusters.data,\n                clusterId: resClusters.data ? resClusters.data[0].id : '',\n                loading: false\n            }\n        );\n\n    } catch(err) {\n        if (err.status === 401) {\n            if (!clusterId || clusterId.length <= 0) {\n                this.setState({ clusterId: '401' });\n            }\n        }\n        console.error('Error:', err);\n    }\n  }\n\n  _initUserAndAuth() {\n    const requests = [this.getApi(uriCurrentUser()), this.getApi(uriAuths())];\n    Promise.all(requests)\n        .then(data => {\n            this._setAuths(data[1]);\n            this._setCurrentUser(data[0].data);\n        })\n        .catch(err => {\n            console.error('Error:', err);\n        });\n  }\n\n  _setAuths(response) {\n    if (response.status === 200) {\n        sessionStorage.setItem('auths', JSON.stringify(response.data));\n        sessionStorage.setItem('version', response.data.version);\n    }\n  }\n\n  _setCurrentUser(currentUserData) {\n    sessionStorage.setItem('user', '');\n    if (currentUserData.logged) {\n      sessionStorage.setItem('login', true);\n      sessionStorage.setItem('user', currentUserData.username);\n      sessionStorage.setItem('roles', organizeRoles(currentUserData.roles));\n      this.setState({ user: currentUserData.username });\n    } else {\n      sessionStorage.setItem('login', false);\n      if (currentUserData.roles) {\n        sessionStorage.setItem('user', 'default');\n        sessionStorage.setItem('roles', organizeRoles(currentUserData.roles));\n        this.setState({ user: 'default' });\n      } else {\n        sessionStorage.setItem('user', '');\n        sessionStorage.setItem('roles', JSON.stringify({}));\n        this.setState({ user: 'not_logged' });\n      }\n    }\n    this.setState({ loading: false });\n  }\n\n  handleRedirect() {\n    let clusterId = this.state.clusterId;\n    const roles = JSON.parse(sessionStorage.getItem('roles'));\n    if (roles && roles.topic && roles.topic['topic/read']) return `/ui/${clusterId}/topic`;\n    else if (roles && roles.node && roles.node['node/read']) return `/ui/${clusterId}/node`;\n    else if (roles && roles.group && roles.group['group/read']) return `/ui/${clusterId}/group`;\n    else if (roles && roles.acls && roles.acls['acls/read']) return `/ui/${clusterId}/acls`;\n    else if (roles && roles.registry && roles.registry['registry/read'])\n      return `/ui/${clusterId}/schema`;\n    else if (roles && Object.keys(roles).length > 0) return `/ui/${clusterId}/topic`;\n    else return '/ui/login';\n  }\n\n  render() {\n    const { location } = this.props;\n    const clusters = this.state.clusters || [];\n    const roles = JSON.parse(sessionStorage.getItem('roles')) || {};\n    let clusterId = this.state.clusterId;\n\n    if (this.state.user.length <= 0) {\n      this._initUserAndAuth();\n      return <></>;\n    }\n\n    if (\n      (clusterId.length <= 0 || clusterId === '401') &&\n      (sessionStorage.getItem('login') === 'true' || this.state.user === 'default')\n    ) {\n      this.getClusters();\n      return <></>;\n    }\n\n    if (!clusters.find(el => el.id === this.state.clusterId) && clusterId !== '401') {\n      clusterId = clusters[0] || '';\n    }\n\n    if (!this.state.loading) {\n      if (clusterId) {\n        return (\n          <Base clusters={clusters}>\n            <Switch location={location}>\n              <Route exact path=\"/ui/login\" component={Login} />\n              {roles && roles.topic && roles.topic['topic/read'] && (\n                <Route exact path=\"/ui/:clusterId/topic\" component={TopicList} />\n              )}\n\n              {roles && roles.topic && roles.topic['topic/insert'] && (\n                <Route exact path=\"/ui/:clusterId/topic/create\" component={TopicCreate} />\n              )}\n              {roles && roles.topic && roles.topic['topic/data/insert'] && (\n                <Route\n                  exact\n                  path=\"/ui/:clusterId/topic/:topicId/produce\"\n                  component={TopicProduce}\n                />\n              )}\n\n              {roles && roles.topic && roles.topic['topic/data/insert'] && (\n                  <Route exact path=\"/ui/:clusterId/topic/:topicId/copy\" component={TopicCopy} />\n              )}\n\n              {roles && roles.topic && roles.topic['topic/read'] && (\n                <Route exact path=\"/ui/:clusterId/topic/:topicId/:tab?\" component={Topic} />\n              )}\n\n              {roles && roles.topic && roles.topic['topic/data/read'] && (\n                  <Route exact path=\"/ui/:clusterId/tail\" component={Tail} />\n              )}\n\n              {roles && roles.node && roles.node['node/read'] && (\n                <Route exact path=\"/ui/:clusterId/node\" component={NodesList} />\n              )}\n              {roles && roles.node && roles.node['node/read'] && (\n                <Route exact path=\"/ui/:clusterId/node/:nodeId/:tab?\" component={NodeDetails} />\n              )}\n\n              {roles && roles.group && roles.group['group/read'] && (\n                <Route exact path=\"/ui/:clusterId/group\" component={ConsumerGroupList} />\n              )}\n\n              {roles && roles.group && roles.group['group/offsets/delete'] && (\n                  <Route\n                      exact\n                      path=\"/ui/:clusterId/group/:consumerGroupId/offsetsdelete\"\n                      component={ConsumerGroupOffsetDelete}\n                  />\n              )}\n\n              {roles && roles.group && roles.group['group/offsets/update'] && (\n                  <Route\n                      exact\n                      path=\"/ui/:clusterId/group/:consumerGroupId/offsets\"\n                      component={ConsumerGroupUpdate}\n                  />\n              )}\n\n              {roles && roles.group && roles.group['group/read'] && (\n                <Route\n                  exact\n                  path=\"/ui/:clusterId/group/:consumerGroupId/:tab?\"\n                  component={ConsumerGroup}\n                />\n              )}\n\n              {roles && roles.acls && roles.acls['acls/read'] && (\n                <Route exact path=\"/ui/:clusterId/acls\" component={Acls} />\n              )}\n              {roles && roles.acls && roles.acls['acls/read'] && (\n                <Route exact path=\"/ui/:clusterId/acls/:principalEncoded/:tab?\" component={AclDetails} />\n              )}\n\n              {roles && roles.registry && roles.registry['registry/read'] && (\n                <Route exact path=\"/ui/:clusterId/schema\" component={SchemaList} />\n              )}\n              {roles && roles.registry && roles.registry['registry/insert'] && (\n                <Route exact path=\"/ui/:clusterId/schema/create\" component={SchemaCreate} />\n              )}\n\n              {roles && roles.registry && roles.registry['registry/update'] && (\n                  <Route\n                      exact\n                      path=\"/ui/:clusterId/schema/details/:schemaId/update\"\n                      component={Schema}\n                  />\n              )}\n\n              {roles && roles.registry && roles.registry['registry/read'] && (\n                <Route\n                  exact\n                  path=\"/ui/:clusterId/schema/details/:schemaId/:tab?\"\n                  component={Schema}\n                />\n              )}\n\n              {roles && roles.connect && roles.connect['connect/insert'] && (\n                <Route\n                  exact\n                  path=\"/ui/:clusterId/connect/:connectId/create\"\n                  component={ConnectCreate}\n                />\n              )}\n              {roles && roles.connect && roles.connect['connect/read'] && (\n                <Route exact path=\"/ui/:clusterId/connect/:connectId\" component={ConnectList} />\n              )}\n              {roles && roles.connect && roles.connect['connect/read'] && (\n                <Route\n                  exact\n                  path=\"/ui/:clusterId/connect/:connectId/definition/:definitionId/:tab?\"\n                  component={Connect}\n                />\n              )}\n              <Route exact path=\"/ui/:clusterId/settings\" component={Settings} />\n              <Redirect from=\"/\" to={this.handleRedirect()} />\n              <Redirect from=\"/ui\" to={this.handleRedirect()} />\n              <Redirect from=\"/ui/401\" to={this.handleRedirect()} />\n            </Switch>\n          </Base>\n        );\n      } else if (sessionStorage.getItem('login') === 'false' && this.state.user !== 'default') {\n        return (\n          <Switch>\n            <Route exact path=\"/ui/login\" component={Login} />\n            <Redirect from=\"/ui\" to={'/ui/login'} />\n            <Redirect from=\"/\" to={'/ui/login'} />\n          </Switch>\n        );\n      }\n      return <Loading show />;\n    }\n\n    return <Loading show />;\n  }\n}\n\nexport default withRouter(Routes);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { basePath } from './utils/endpoints';\nimport Routes from './utils/Routes';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport { ToastContainer } from 'react-toastify';\nimport { loadProgressBar } from 'axios-progress-bar';\n\nclass App extends React.Component {\n  componentDidMount() {\n    loadProgressBar();\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Router basename={basePath}>\n          <Routes />\n          <ToastContainer draggable={false} closeOnClick={false} />\n        </Router>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\n\n\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport prefix from './prefix';\n\nlet pathPrefix = prefix() + '/ui';\n\nReactDOM.render(<App pathPrefix={pathPrefix} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TimeAgo from 'react-timeago';\nimport { Tooltip } from '@material-ui/core';\n\nimport { SETTINGS_VALUES } from '../../utils/constants';\n\nclass DateTime extends Component {\n\n  render() {\n    const isoDate = this.props.isoDateTimeString;\n    const TimeAgoComp = <TimeAgo date={Date.parse(isoDate)} title={''}/>\n    return (\n      <Tooltip arrow title={\n        this.props.dateTimeFormat === SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.ISO ?\n          TimeAgoComp :\n          isoDate\n        } interactive>\n        <span>{\n          this.props.dateTimeFormat === SETTINGS_VALUES.TOPIC_DATA.DATE_TIME_FORMAT.ISO ?\n            isoDate :\n            TimeAgoComp\n        }</span>\n      </Tooltip>   \n    );\n  }\n\n}\n\nDateTime.propTypes = {\n  isoDateTimeString: PropTypes.string.isRequired,\n  dateTimeFormat: PropTypes.string.isRequired,\n};\n\nexport default DateTime;","import DateTime from './DateTime';\n\nexport default DateTime;","export default () => {\n  // eslint-disable-next-line no-undef\n  let prefix = AKHQ_PREFIX_PATH;\n\n// eslint-disable-next-line no-undef\n  if (\n    prefix === undefined\n  ) {\n    prefix = '/';\n  }\n\n  if (prefix.endsWith('/')) {\n    prefix = prefix.substr(-1);\n  }\n\n  return prefix;\n}\n","import React from 'react';\nimport './styles.scss';\n\nconst Pagination = ({\n  pageNumber,\n  totalPageNumber,\n  totalRecords,\n  onChange,\n  onSubmit,\n  editPageNumber,\n  showTotalPageNumber = true\n}) => {\n  if (editPageNumber === undefined) {\n    editPageNumber = true;\n  }\n\n  if (totalRecords !== undefined) {\n\n  }\n\n  return (\n    <ul className=\"pagination mb-0\">\n      <li className={'page-item before'}>\n        <a\n          href={'#/'}\n          className={'before-button'}\n          onClick={(e) => {e.preventDefault(); onSubmit(pageNumber - 1)}}\n          disabled={+pageNumber === 1}\n        >\n          <div className=\"page-link\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span className=\" sr-only\">Previous</span>\n          </div>\n        </a>\n      </li>\n      <li className=\"page-item info\">\n        <div className=\"page-link page-number\">\n          {totalRecords !== undefined ? '≈ ' + totalRecords : <input\n            className=\"pagination-input page-input\"\n            disabled={!editPageNumber}\n            type=\"number\"\n            value={pageNumber}\n            onChange={onChange}\n            onKeyDown={e => {\n              if (e.key === 'Enter') onSubmit(pageNumber);\n            }}\n          />}\n          {totalPageNumber !== undefined && showTotalPageNumber && `of ${totalPageNumber}`}\n        </div>\n      </li>\n      <li className={'page-item after'}>\n        <a\n          href={'#/'}\n          className={'after-button'}\n          onClick={(e) => {e.preventDefault(); onSubmit(pageNumber + 1)}}\n          disabled={+pageNumber === +totalPageNumber}\n        >\n          <div className=\" page-link\" aria-label=\" Next\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span className=\"sr-only\">Next</span>\n          </div>\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n"],"sourceRoot":""}